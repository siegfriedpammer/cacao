dnl autoconf; autoheader; automake

dnl Process this file with autoconf to produce a configure script.
AC_INIT(main.c)
AC_CANONICAL_HOST

AM_INIT_AUTOMAKE(cacao, 0.40)
AM_CONFIG_HEADER(config.h)

AC_PREFIX_DEFAULT(/usr/local/cacao)

dnl system type

case "$host_cpu" in
alpha* )
	ARCH_DIR="alpha"
	CFLAGS="-mieee -O0 -g3 -D__ALPHA__"
	AC_DEFINE(TRACE_ARGS_NUM, 6)
	AC_DEFINE(USE_CODEMMAP)
	;;

i386* | i486* | i586* | i686* )
	ARCH_DIR="i386"
	CFLAGS="-Wall -O0 -g3 -D__I386__"
	AC_DEFINE(TRACE_ARGS_NUM, 8)
	AC_DEFINE(USE_CODEMMAP)
	;;

mips* )
	ARCH_DIR="mips"
        CFLAGS="-64 -O2 -OPT:Olimit=0 -g -DMAP_ANONYMOUS=0 -woff 1110,1164,1515 -D__MIPS__"
	LIBS="-lelfutil"
	AC_DEFINE(TRACE_ARGS_NUM, 8)
	;;

powerpc* | ppc* )
	ARCH_DIR="powerpc"
	CFLAGS="-O2 -g -DMAP_ANONYMOUS=0 -no-cpp-precomp"
	AC_DEFINE(TRACE_ARGS_NUM, 8)
	;;

x86_64* )
	ARCH_DIR="x86_64"
	CFLAGS="-O0 -g3 -D__X86_64__"
	AC_DEFINE(TRACE_ARGS_NUM, 6)
	AC_DEFINE(USE_CODEMMAP)
	;;

sparc* | * )
	AC_MSG_ERROR($host_cpu systems are not supported at this time)
        ;;
esac

AC_SUBST(COMPILER_OBJECTS)

AC_DEFINE_UNQUOTED(ARCH_DIR, "$ARCH_DIR")
AC_SUBST(ARCH_DIR)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_RANLIB
AC_PROG_MAKE_SET

dnl Checks for libraries.
AC_CHECK_LIB(m, sin)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([fcntl.h])
AC_CHECK_HEADERS([sys/time.h])
AC_CHECK_HEADERS([unistd.h])
AC_CHECK_HEADERS([sys/ioctl.h])

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_FUNC_MMAP
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(getcwd gettimeofday mkdir mktime select socket)

dnl Check for mmap header anomalies (missing MAP_FAILED, etc.)
if test $ac_cv_func_mmap_fixed_mapped = yes; then
	AC_CACHE_CHECK(whether MAP_FAILED is defined,
		       ac_cv_map_failed,
		       AC_EGREP_CPP(yes, 
			            [#include <sys/mman.h>
				     #ifdef MAP_FAILED
					yes
				     #endif],
				    ac_cv_map_failed=yes,
				    ac_cv_map_failed=no))

	AC_CACHE_CHECK(whether MAP_ANONYMOUS is defined,
		       ac_cv_map_anonymous,
		       AC_EGREP_CPP(yes, 
			            [#include <sys/mman.h>
				     #ifdef MAP_ANONYMOUS
					yes
				     #endif],
				    ac_cv_map_anonymous=yes,
				    ac_cv_map_anonymous=no))

	if test $ac_cv_map_failed = yes; then
		AC_DEFINE(HAVE_MAP_FAILED) 
	fi

	if test $ac_cv_map_anonymous = yes; then
		AC_DEFINE(HAVE_MAP_ANONYMOUS) 
	fi
fi


dnl Features

dnl check arguments
AC_ARG_ENABLE(threads, [  --enable-threads        enable threads support])

dnl threads
AC_MSG_CHECKING(whether to include threads support)
if test x"$enable_threads" = "xno"; then
	AC_MSG_RESULT(no)
else
	AC_MSG_RESULT(yes)

	AC_DEFINE(USE_THREADS)
	AC_DEFINE(EXTERNAL_OVERFLOW)
	AC_DEFINE(DONT_FREE_FIRST)

	LIBTHREAD="libthreads.a"
	THREAD_OBJ="threads/libthreads.a"
	AC_SUBST(LIBTHREAD)
	AC_SUBST(THREAD_OBJ)
fi

dnl now configure boehm gc
AC_CONFIG_SUBDIRS(mm/boehm-gc)

AC_OUTPUT(Makefile \
          mm/Makefile \
	  toolbox/Makefile \
	  threads/Makefile \
	  jit/Makefile \
          jit/loop/Makefile \
          jit/alpha/Makefile \
          jit/i386/Makefile \
          jit/mips/Makefile \
          jit/powerpc/Makefile \
          jit/x86_64/Makefile \
          nat/Makefile \
          doc/Makefile \
	  tst/Makefile \
	  tst/kaffe/Makefile \
	  jvmtst/Makefile )
