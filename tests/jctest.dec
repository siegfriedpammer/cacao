successful initialisation
0.    =================== JavaVM - Tester ========================
1.    ------------------- test arguments
2.    ------------------- test int-PUSH-STORE-LOAD
3.    int: -1
4.    int: 0
5.    int: 2
6.    int: 17
7.    int: -100
8.    int: 500
9.    int: -32768
10.    int: -32769
11.    int: 32767
12.    int: 32768
13.    int: 90000
14.    int: -1000000000
15.    ------------------- test long-PUSH-STORE-LOAD
16.    long: 3
17.    long: 0
18.    long: 99
19.    long: 500
20.    long: -32768
21.    long: -32769
22.    long: 32767
23.    long: 32768
24.    long: 6900000000000
25.    long: 349827389478173274
26.    ------------------- test float-PUSH-STORE-LOAD
27.    float: 1120330580
28.    float: 0
29.    float: 1065353216
30.    float: 1386178594
31.    ------------------- test double-PUSH-STORE-LOAD
32.    double: 4681555750756024320
33.    double: 0
34.    double: 4607182418800017408
35.    double: 4779424232079622144
36.    ------------------- test static variables
37.    int: -23
38.    int: 0
39.    int: -100
40.    long: 123456789
41.    long: -99998888888889
42.    long: -99999999999999
43.    float: 1017370379
44.    float: 1045220557
45.    float: 1050253722
46.    double: 4562254509136412672
47.    double: 4566758108763783168
48.    double: 4569063951614083072
49.    ------------------- test arithmetic
50.    int: 2147483647
51.    int: -2147483648
52.    int: -2147483630
53.    long: 9223372036854775807
54.    long: -9223372036854775808
55.    long: -2
56.    statische methode
57.    interface method
58.    int: 19
59.    int: 18
60.    int: 17
61.    int: 16
62.    long: 88
63.    long: 77
64.    long: 66
65.    long: 55
66.    float: 1036831949
67.    float: 1045220557
68.    float: 1050253722
69.    float: 1053609165
70.    double: -4611686018427387904
71.    double: -4609434218613702656
72.    double: -4607182418800017408
73.    double: -4606056518893174784
74.    ------------------- test tableswitch
75.    default
76.    default
77.    default
78.    default
79.    default
80.    default
81.    default
82.    ->  2
83.    ->  3
84.    default
85.    ->  5
86.    ->  6
87.    ->  7
88.    ->  8
89.    default
90.    -> 10
91.    default
92.    default
93.    default
94.    default
95.    ------------------- test lookupswitch
96.    default
97.    -> -4
98.    default
99.    default
100.    default
101.    default
102.    default
103.    ->  2
104.    default
105.    default
106.    default
107.    default
108.    default
109.    ->  8
110.    default
111.    default
112.    default
113.    default
114.    default
115.    -> 14
116.    ------------------- test casts
117.    type cast check: Integer = Object(Integer)
118.    type cast check: Integer = Object
119.    exception: class cast
120.    type cast check: Integer[] = Object(Integer)[]
121.    type cast check: Integer[] = Object[]
122.    exception: class cast
123.    array store check: Object(Integer)[0] = Integer
124.    array store check: Object(Integer)[0] = Object
125.    exception: array store
126.    ------------------- test special null pointers
127.    null pointer check: put field
128.    exception: null pointer
129.    null pointer check: get field
130.    exception: null pointer
131.    null pointer check: invokevirtual
132.    exception: null pointer
133.    null pointer check: invokeinterface
134.    exception: null pointer
135.    null pointer check: monitorenter
136.    exception: null pointer
137.    ------------------- test byte arrays
138.    null pointer check: byte array store
139.    exception: null pointer
140.    null pointer check: byte array load
141.    exception: null pointer
142.    negative array size check: byte array
143.    exception: negative array size
144.    array bound check: byte array store
145.    exception: out of bounds: -1
146.    array bound check: byte array load
147.    exception: out of bounds: -1
148.    testarraybounds: -5
149.    exception: out of bounds: 5
150.    testarraybounds: 40
151.    testarraybounds: 45
152.    testarraybounds: 50
153.    testarraybounds: 55
154.    testarraybounds: 60
155.    testarraybounds: 90
156.    testarraybounds: 95
157.    testarraybounds: 100
158.    exception: out of bounds: 100
159.    exception: out of bounds: -4
160.    exception: out of bounds: -3
161.    exception: out of bounds: -2
162.    exception: out of bounds: -1
163.    exception: out of bounds: 100
164.    exception: out of bounds: 101
165.    exception: out of bounds: 102
166.    exception: out of bounds: 103
167.    byte: -50
168.    byte: -49
169.    byte: -48
170.    byte: -47
171.    byte: -46
172.    byte: -45
173.    byte: -44
174.    byte: -43
175.    byte: -42
176.    byte: -41
177.    byte: -40
178.    byte: -39
179.    byte: -38
180.    byte: -37
181.    byte: -36
182.    byte: -35
183.    byte: -34
184.    byte: -33
185.    byte: -32
186.    byte: -31
187.    byte: -30
188.    byte: -29
189.    byte: -28
190.    byte: -27
191.    byte: -26
192.    byte: -25
193.    byte: -24
194.    byte: -23
195.    byte: -22
196.    byte: -21
197.    byte: -20
198.    byte: -19
199.    byte: -18
200.    byte: -17
201.    byte: -16
202.    byte: -15
203.    byte: -14
204.    byte: -13
205.    byte: -12
206.    byte: -11
207.    byte: -10
208.    byte: -9
209.    byte: -8
210.    byte: -7
211.    byte: -6
212.    byte: -5
213.    byte: -4
214.    byte: -3
215.    byte: -2
216.    byte: -1
217.    byte: 0
218.    byte: 1
219.    byte: 2
220.    byte: 3
221.    byte: 4
222.    byte: 5
223.    byte: 6
224.    byte: 7
225.    byte: 8
226.    byte: 9
227.    byte: 10
228.    byte: 11
229.    byte: 12
230.    byte: 13
231.    byte: 14
232.    byte: 15
233.    byte: 16
234.    byte: 17
235.    byte: 18
236.    byte: 19
237.    byte: 20
238.    byte: 21
239.    byte: 22
240.    byte: 23
241.    byte: 24
242.    byte: 25
243.    byte: 26
244.    byte: 27
245.    byte: 28
246.    byte: 29
247.    byte: 30
248.    byte: 31
249.    byte: 32
250.    byte: 33
251.    byte: 34
252.    byte: 35
253.    byte: 36
254.    byte: 37
255.    byte: 38
256.    byte: 39
257.    byte: 40
258.    byte: 41
259.    byte: 42
260.    byte: 43
261.    byte: 44
262.    byte: 45
263.    byte: 46
264.    byte: 47
265.    byte: 48
266.    byte: 49
267.    -------- test short arrays
268.    null pointer check: short array store
269.    exception: null pointer
270.    null pointer check: short array load
271.    exception: null pointer
272.    array bound check: short array store
273.    exception: out of bounds: -1
274.    array bound check: short array load
275.    exception: out of bounds: -1
276.    short: -50
277.    short: -49
278.    short: -48
279.    short: -47
280.    short: -46
281.    short: -45
282.    short: -44
283.    short: -43
284.    short: -42
285.    short: -41
286.    short: -40
287.    short: -39
288.    short: -38
289.    short: -37
290.    short: -36
291.    short: -35
292.    short: -34
293.    short: -33
294.    short: -32
295.    short: -31
296.    short: -30
297.    short: -29
298.    short: -28
299.    short: -27
300.    short: -26
301.    short: -25
302.    short: -24
303.    short: -23
304.    short: -22
305.    short: -21
306.    short: -20
307.    short: -19
308.    short: -18
309.    short: -17
310.    short: -16
311.    short: -15
312.    short: -14
313.    short: -13
314.    short: -12
315.    short: -11
316.    short: -10
317.    short: -9
318.    short: -8
319.    short: -7
320.    short: -6
321.    short: -5
322.    short: -4
323.    short: -3
324.    short: -2
325.    short: -1
326.    short: 0
327.    short: 1
328.    short: 2
329.    short: 3
330.    short: 4
331.    short: 5
332.    short: 6
333.    short: 7
334.    short: 8
335.    short: 9
336.    short: 10
337.    short: 11
338.    short: 12
339.    short: 13
340.    short: 14
341.    short: 15
342.    short: 16
343.    short: 17
344.    short: 18
345.    short: 19
346.    short: 20
347.    short: 21
348.    short: 22
349.    short: 23
350.    short: 24
351.    short: 25
352.    short: 26
353.    short: 27
354.    short: 28
355.    short: 29
356.    short: 30
357.    short: 31
358.    short: 32
359.    short: 33
360.    short: 34
361.    short: 35
362.    short: 36
363.    short: 37
364.    short: 38
365.    short: 39
366.    short: 40
367.    short: 41
368.    short: 42
369.    short: 43
370.    short: 44
371.    short: 45
372.    short: 46
373.    short: 47
374.    short: 48
375.    short: 49
376.    -------- test int arrays
377.    null pointer check: int array store
378.    exception: null pointer
379.    null pointer check: int array load
380.    exception: null pointer
381.    array bound check: int array store
382.    exception: out of bounds: -1
383.    array bound check: int array load
384.    exception: out of bounds: -1
385.    int: 123456
386.    int: 123457
387.    int: 123458
388.    int: 123459
389.    int: 123460
390.    int: 123461
391.    int: 123462
392.    int: 123463
393.    int: 123464
394.    int: 123465
395.    -------- test long arrays
396.    null pointer check: long array store
397.    exception: null pointer
398.    null pointer check: long array load
399.    exception: null pointer
400.    array bound check: long array store
401.    exception: out of bounds: -1
402.    array bound check: long array load
403.    exception: out of bounds: -1
404.    long: 1234567890123
405.    long: 1234567890124
406.    long: 1234567890125
407.    long: 1234567890126
408.    long: 1234567890127
409.    long: 1234567890128
410.    long: 1234567890129
411.    long: 1234567890130
412.    long: 1234567890131
413.    long: 1234567890132
414.    -------- test char arrays
415.    null pointer check: char array store
416.    exception: null pointer
417.    null pointer check: char array load
418.    exception: null pointer
419.    array bound check: char array store
420.    exception: out of bounds: -1
421.    array bound check: char array load
422.    exception: out of bounds: -1
423.    char: 65
424.    char: 66
425.    char: 67
426.    char: 68
427.    char: 69
428.    char: 70
429.    char: 71
430.    char: 72
431.    char: 73
432.    char: 74
433.    char: 75
434.    char: 76
435.    char: 77
436.    char: 78
437.    char: 79
438.    char: 80
439.    char: 81
440.    char: 82
441.    char: 83
442.    char: 84
443.    char: 85
444.    char: 86
445.    char: 87
446.    char: 88
447.    char: 89
448.    char: 90
449.    char: 91
450.    char: 92
451.    char: 93
452.    char: 94
453.    char: 95
454.    char: 96
455.    char: 97
456.    char: 98
457.    char: 99
458.    char: 100
459.    char: 101
460.    char: 102
461.    char: 103
462.    char: 104
463.    char: 105
464.    char: 106
465.    char: 107
466.    char: 108
467.    char: 109
468.    char: 110
469.    char: 111
470.    char: 112
471.    char: 113
472.    char: 114
473.    -------- test address arrays
474.    null pointer check: address array store
475.    exception: null pointer
476.    null pointer check: address array load
477.    exception: null pointer
478.    negative array size check: address array
479.    exception: negative array size
480.    array bound check: address array store
481.    exception: out of bounds: -1
482.    array bound check: address array load
483.    exception: out of bounds: -1
484.    0. Zeile
485.    1. Zeile
486.    2. Zeile
487.    3. Zeile
488.    4. Zeile
489.    -------- test multi dimensional arrays
490.    negative array size check: multi dimensional array
491.    exception: negative array size
492.    int: 0
493.    long: 7
494.    float: 1053609165
495.    double: -4591560543633932288
496.    int: 1
497.    long: 8
498.    float: 1068708659
499.    double: -4591701281122287616
500.    int: 2
501.    long: 9
502.    float: 1075419546
503.    double: -4591842018610642944
504.    int: 3
505.    long: 10
506.    float: 1079613850
507.    double: -4591982756098998272
508.    int: 1
509.    long: 8
510.    float: 1068708659
511.    double: -4591701281122287616
512.    int: 2
513.    long: 9
514.    float: 1075419546
515.    double: -4591842018610642944
516.    int: 3
517.    long: 10
518.    float: 1079613850
519.    double: -4591982756098998272
520.    int: 4
521.    long: 11
522.    float: 1082969293
523.    double: -4592123493587353600
524.    int: 4
525.    long: 11
526.    float: 1082969293
527.    double: -4592123493587353600
528.    int: 5
529.    long: 12
530.    float: 1085066445
531.    double: -4592264231075708928
532.    int: 6
533.    long: 13
534.    float: 1087163597
535.    double: -4592404968564064256
536.    int: 7
537.    long: 14
538.    float: 1089260749
539.    double: -4592545706052419584
540.    int: 1
541.    long: 8
542.    float: 1068708659
543.    double: -4591701281122287616
544.    int: 2
545.    long: 9
546.    float: 1075419546
547.    double: -4591842018610642944
548.    int: 3
549.    long: 10
550.    float: 1079613850
551.    double: -4591982756098998272
552.    int: 4
553.    long: 11
554.    float: 1082969293
555.    double: -4592123493587353600
556.    int: 2
557.    long: 9
558.    float: 1075419546
559.    double: -4591842018610642944
560.    int: 3
561.    long: 10
562.    float: 1079613850
563.    double: -4591982756098998272
564.    int: 4
565.    long: 11
566.    float: 1082969293
567.    double: -4592123493587353600
568.    int: 5
569.    long: 12
570.    float: 1085066445
571.    double: -4592264231075708928
572.    int: 5
573.    long: 12
574.    float: 1085066445
575.    double: -4592264231075708928
576.    int: 6
577.    long: 13
578.    float: 1087163597
579.    double: -4592404968564064256
580.    int: 7
581.    long: 14
582.    float: 1089260749
583.    double: -4592545706052419584
584.    int: 8
585.    long: 15
586.    float: 1090938470
587.    double: -4592686443540774912
588.    ------------------- test consts
589.    TESTCONST CALLED WITH int: 1
590.                      AND long: 1
591.    not IF_ICMPEQint: 0
592.    not IF_ICMPLTint: 0
593.    not IF_ICMPLEint: 0
594.    not IF_LCMPEQint: 0
595.    not IF_LCMPLTint: 0
596.    not IF_LCMPLEint: 0
597.    IADDCONST:  int: 0
598.    ISUBCONST:  int: 2
599.    IMULCONST:  int: -1
600.    ISHLCONST:  int: -2147483648
601.    ISHRCONST:  int: 0
602.    IUSHRCONST: int: 0
603.    IANDCONST:  int: 1
604.    IORCONST:   int: -1
605.    IXORCONST:  int: -2
606.    not IF_ICMPEQint: -1
607.    not IF_ICMPLTint: -1
608.    not IF_ICMPLEint: -1
609.    LADDCONST:  long: 0
610.    LSUBCONST:  long: 2
611.    LMULCONST:  long: -1
612.    LSHLCONST:  long: -9223372036854775808
613.    LSHRCONST:  long: 0
614.    LUSHRCONST: long: 0
615.    LANDCONST:  long: 1
616.    LORCONST:   long: -1
617.    LXORCONST:  long: -2
618.    not IF_LCMPEQint: -1
619.    not IF_LCMPLTint: -1
620.    not IF_LCMPLEint: -1
621.    IADDCONST:  int: 2
622.    ISUBCONST:  int: 0
623.    IMULCONST:  int: 1
624.    ISHLCONST:  int: 2
625.    ISHRCONST:  int: 0
626.    IUSHRCONST: int: 0
627.    IANDCONST:  int: 1
628.    IORCONST:   int: 1
629.    IXORCONST:  int: 0
630.    not IF_ICMPNEint: 1
631.    not IF_ICMPLTint: 1
632.    not IF_ICMPGTint: 1
633.    LADDCONST:  long: 2
634.    LSUBCONST:  long: 0
635.    LMULCONST:  long: 1
636.    LSHLCONST:  long: 2
637.    LSHRCONST:  long: 0
638.    LUSHRCONST: long: 0
639.    LANDCONST:  long: 1
640.    LORCONST:   long: 1
641.    LXORCONST:  long: 0
642.    not IF_LCMPNEint: 1
643.    not IF_LCMPLTint: 1
644.    not IF_LCMPGTint: 1
645.    IADDCONST:  int: 256
646.    ISUBCONST:  int: -254
647.    IMULCONST:  int: 255
648.    ISHLCONST:  int: -2147483648
649.    ISHRCONST:  int: 0
650.    IUSHRCONST: int: 0
651.    IANDCONST:  int: 1
652.    IORCONST:   int: 255
653.    IXORCONST:  int: 254
654.    not IF_ICMPEQint: 255
655.    not IF_ICMPGTint: 255
656.    not IF_ICMPGEint: 255
657.    LADDCONST:  long: 256
658.    LSUBCONST:  long: -254
659.    LMULCONST:  long: 255
660.    LSHLCONST:  long: -9223372036854775808
661.    LSHRCONST:  long: 0
662.    LUSHRCONST: long: 0
663.    LANDCONST:  long: 1
664.    LORCONST:   long: 255
665.    LXORCONST:  long: 254
666.    not IF_LCMPEQint: 255
667.    not IF_LCMPGTint: 255
668.    not IF_LCMPGEint: 255
669.    IADDCONST:  int: 257
670.    ISUBCONST:  int: -255
671.    IMULCONST:  int: 256
672.    ISHLCONST:  int: 1
673.    ISHRCONST:  int: 1
674.    IUSHRCONST: int: 1
675.    IANDCONST:  int: 0
676.    IORCONST:   int: 257
677.    IXORCONST:  int: 257
678.    not IF_ICMPEQint: 256
679.    not IF_ICMPGTint: 256
680.    not IF_ICMPGEint: 256
681.    LADDCONST:  long: 257
682.    LSUBCONST:  long: -255
683.    LMULCONST:  long: 256
684.    LSHLCONST:  long: 1
685.    LSHRCONST:  long: 1
686.    LUSHRCONST: long: 1
687.    LANDCONST:  long: 0
688.    LORCONST:   long: 257
689.    LXORCONST:  long: 257
690.    not IF_LCMPEQint: 256
691.    not IF_LCMPGTint: 256
692.    not IF_LCMPGEint: 256
693.    IADDCONST:  int: 32768
694.    ISUBCONST:  int: -32766
695.    IMULCONST:  int: 32767
696.    ISHLCONST:  int: -2147483648
697.    ISHRCONST:  int: 0
698.    IUSHRCONST: int: 0
699.    IANDCONST:  int: 1
700.    IORCONST:   int: 32767
701.    IXORCONST:  int: 32766
702.    not IF_ICMPEQint: 32767
703.    not IF_ICMPGTint: 32767
704.    not IF_ICMPGEint: 32767
705.    LADDCONST:  long: 32768
706.    LSUBCONST:  long: -32766
707.    LMULCONST:  long: 32767
708.    LSHLCONST:  long: -9223372036854775808
709.    LSHRCONST:  long: 0
710.    LUSHRCONST: long: 0
711.    LANDCONST:  long: 1
712.    LORCONST:   long: 32767
713.    LXORCONST:  long: 32766
714.    not IF_LCMPEQint: 32767
715.    not IF_LCMPGTint: 32767
716.    not IF_LCMPGEint: 32767
717.    IADDCONST:  int: 32769
718.    ISUBCONST:  int: -32767
719.    IMULCONST:  int: 32768
720.    ISHLCONST:  int: 1
721.    ISHRCONST:  int: 1
722.    IUSHRCONST: int: 1
723.    IANDCONST:  int: 0
724.    IORCONST:   int: 32769
725.    IXORCONST:  int: 32769
726.    not IF_ICMPEQint: 32768
727.    not IF_ICMPGTint: 32768
728.    not IF_ICMPGEint: 32768
729.    LADDCONST:  long: 32769
730.    LSUBCONST:  long: -32767
731.    LMULCONST:  long: 32768
732.    LSHLCONST:  long: 1
733.    LSHRCONST:  long: 1
734.    LUSHRCONST: long: 1
735.    LANDCONST:  long: 0
736.    LORCONST:   long: 32769
737.    LXORCONST:  long: 32769
738.    not IF_LCMPEQint: 32768
739.    not IF_LCMPGTint: 32768
740.    not IF_LCMPGEint: 32768
741.    IADDCONST:  int: -32767
742.    ISUBCONST:  int: 32769
743.    IMULCONST:  int: -32768
744.    ISHLCONST:  int: 1
745.    ISHRCONST:  int: 1
746.    IUSHRCONST: int: 1
747.    IANDCONST:  int: 0
748.    IORCONST:   int: -32767
749.    IXORCONST:  int: -32767
750.    not IF_ICMPEQint: -32768
751.    not IF_ICMPLTint: -32768
752.    not IF_ICMPLEint: -32768
753.    LADDCONST:  long: -32767
754.    LSUBCONST:  long: 32769
755.    LMULCONST:  long: -32768
756.    LSHLCONST:  long: 1
757.    LSHRCONST:  long: 1
758.    LUSHRCONST: long: 1
759.    LANDCONST:  long: 0
760.    LORCONST:   long: -32767
761.    LXORCONST:  long: -32767
762.    not IF_LCMPEQint: -32768
763.    not IF_LCMPLTint: -32768
764.    not IF_LCMPLEint: -32768
765.    IADDCONST:  int: -32768
766.    ISUBCONST:  int: 32770
767.    IMULCONST:  int: -32769
768.    ISHLCONST:  int: -2147483648
769.    ISHRCONST:  int: 0
770.    IUSHRCONST: int: 0
771.    IANDCONST:  int: 1
772.    IORCONST:   int: -32769
773.    IXORCONST:  int: -32770
774.    not IF_ICMPEQint: -32769
775.    not IF_ICMPLTint: -32769
776.    not IF_ICMPLEint: -32769
777.    LADDCONST:  long: -32768
778.    LSUBCONST:  long: 32770
779.    LMULCONST:  long: -32769
780.    LSHLCONST:  long: -9223372036854775808
781.    LSHRCONST:  long: 0
782.    LUSHRCONST: long: 0
783.    LANDCONST:  long: 1
784.    LORCONST:   long: -32769
785.    LXORCONST:  long: -32770
786.    not IF_LCMPEQint: -32769
787.    not IF_LCMPLTint: -32769
788.    not IF_LCMPLEint: -32769
789.    TESTCONST CALLED WITH int: -1
790.                      AND long: -1
791.    not IF_ICMPEQint: 0
792.    not IF_ICMPGTint: 0
793.    not IF_ICMPGEint: 0
794.    not IF_LCMPEQint: 0
795.    not IF_LCMPGTint: 0
796.    not IF_LCMPGEint: 0
797.    IADDCONST:  int: -2
798.    ISUBCONST:  int: 0
799.    IMULCONST:  int: 1
800.    ISHLCONST:  int: -2147483648
801.    ISHRCONST:  int: -1
802.    IUSHRCONST: int: 1
803.    IANDCONST:  int: -1
804.    IORCONST:   int: -1
805.    IXORCONST:  int: 0
806.    not IF_ICMPNEint: -1
807.    not IF_ICMPLTint: -1
808.    not IF_ICMPGTint: -1
809.    LADDCONST:  long: -2
810.    LSUBCONST:  long: 0
811.    LMULCONST:  long: 1
812.    LSHLCONST:  long: -9223372036854775808
813.    LSHRCONST:  long: -1
814.    LUSHRCONST: long: 1
815.    LANDCONST:  long: -1
816.    LORCONST:   long: -1
817.    LXORCONST:  long: 0
818.    not IF_LCMPNEint: -1
819.    not IF_LCMPLTint: -1
820.    not IF_LCMPGTint: -1
821.    IADDCONST:  int: 0
822.    ISUBCONST:  int: -2
823.    IMULCONST:  int: -1
824.    ISHLCONST:  int: -2
825.    ISHRCONST:  int: -1
826.    IUSHRCONST: int: 2147483647
827.    IANDCONST:  int: 1
828.    IORCONST:   int: -1
829.    IXORCONST:  int: -2
830.    not IF_ICMPEQint: 1
831.    not IF_ICMPGTint: 1
832.    not IF_ICMPGEint: 1
833.    LADDCONST:  long: 0
834.    LSUBCONST:  long: -2
835.    LMULCONST:  long: -1
836.    LSHLCONST:  long: -2
837.    LSHRCONST:  long: -1
838.    LUSHRCONST: long: 9223372036854775807
839.    LANDCONST:  long: 1
840.    LORCONST:   long: -1
841.    LXORCONST:  long: -2
842.    not IF_LCMPEQint: 1
843.    not IF_LCMPGTint: 1
844.    not IF_LCMPGEint: 1
845.    IADDCONST:  int: 254
846.    ISUBCONST:  int: -256
847.    IMULCONST:  int: -255
848.    ISHLCONST:  int: -2147483648
849.    ISHRCONST:  int: -1
850.    IUSHRCONST: int: 1
851.    IANDCONST:  int: 255
852.    IORCONST:   int: -1
853.    IXORCONST:  int: -256
854.    not IF_ICMPEQint: 255
855.    not IF_ICMPGTint: 255
856.    not IF_ICMPGEint: 255
857.    LADDCONST:  long: 254
858.    LSUBCONST:  long: -256
859.    LMULCONST:  long: -255
860.    LSHLCONST:  long: -9223372036854775808
861.    LSHRCONST:  long: -1
862.    LUSHRCONST: long: 1
863.    LANDCONST:  long: 255
864.    LORCONST:   long: -1
865.    LXORCONST:  long: -256
866.    not IF_LCMPEQint: 255
867.    not IF_LCMPGTint: 255
868.    not IF_LCMPGEint: 255
869.    IADDCONST:  int: 255
870.    ISUBCONST:  int: -257
871.    IMULCONST:  int: -256
872.    ISHLCONST:  int: -1
873.    ISHRCONST:  int: -1
874.    IUSHRCONST: int: -1
875.    IANDCONST:  int: 256
876.    IORCONST:   int: -1
877.    IXORCONST:  int: -257
878.    not IF_ICMPEQint: 256
879.    not IF_ICMPGTint: 256
880.    not IF_ICMPGEint: 256
881.    LADDCONST:  long: 255
882.    LSUBCONST:  long: -257
883.    LMULCONST:  long: -256
884.    LSHLCONST:  long: -1
885.    LSHRCONST:  long: -1
886.    LUSHRCONST: long: -1
887.    LANDCONST:  long: 256
888.    LORCONST:   long: -1
889.    LXORCONST:  long: -257
890.    not IF_LCMPEQint: 256
891.    not IF_LCMPGTint: 256
892.    not IF_LCMPGEint: 256
893.    IADDCONST:  int: 32766
894.    ISUBCONST:  int: -32768
895.    IMULCONST:  int: -32767
896.    ISHLCONST:  int: -2147483648
897.    ISHRCONST:  int: -1
898.    IUSHRCONST: int: 1
899.    IANDCONST:  int: 32767
900.    IORCONST:   int: -1
901.    IXORCONST:  int: -32768
902.    not IF_ICMPEQint: 32767
903.    not IF_ICMPGTint: 32767
904.    not IF_ICMPGEint: 32767
905.    LADDCONST:  long: 32766
906.    LSUBCONST:  long: -32768
907.    LMULCONST:  long: -32767
908.    LSHLCONST:  long: -9223372036854775808
909.    LSHRCONST:  long: -1
910.    LUSHRCONST: long: 1
911.    LANDCONST:  long: 32767
912.    LORCONST:   long: -1
913.    LXORCONST:  long: -32768
914.    not IF_LCMPEQint: 32767
915.    not IF_LCMPGTint: 32767
916.    not IF_LCMPGEint: 32767
917.    IADDCONST:  int: 32767
918.    ISUBCONST:  int: -32769
919.    IMULCONST:  int: -32768
920.    ISHLCONST:  int: -1
921.    ISHRCONST:  int: -1
922.    IUSHRCONST: int: -1
923.    IANDCONST:  int: 32768
924.    IORCONST:   int: -1
925.    IXORCONST:  int: -32769
926.    not IF_ICMPEQint: 32768
927.    not IF_ICMPGTint: 32768
928.    not IF_ICMPGEint: 32768
929.    LADDCONST:  long: 32767
930.    LSUBCONST:  long: -32769
931.    LMULCONST:  long: -32768
932.    LSHLCONST:  long: -1
933.    LSHRCONST:  long: -1
934.    LUSHRCONST: long: -1
935.    LANDCONST:  long: 32768
936.    LORCONST:   long: -1
937.    LXORCONST:  long: -32769
938.    not IF_LCMPEQint: 32768
939.    not IF_LCMPGTint: 32768
940.    not IF_LCMPGEint: 32768
941.    IADDCONST:  int: -32769
942.    ISUBCONST:  int: 32767
943.    IMULCONST:  int: 32768
944.    ISHLCONST:  int: -1
945.    ISHRCONST:  int: -1
946.    IUSHRCONST: int: -1
947.    IANDCONST:  int: -32768
948.    IORCONST:   int: -1
949.    IXORCONST:  int: 32767
950.    not IF_ICMPEQint: -32768
951.    not IF_ICMPLTint: -32768
952.    not IF_ICMPLEint: -32768
953.    LADDCONST:  long: -32769
954.    LSUBCONST:  long: 32767
955.    LMULCONST:  long: 32768
956.    LSHLCONST:  long: -1
957.    LSHRCONST:  long: -1
958.    LUSHRCONST: long: -1
959.    LANDCONST:  long: -32768
960.    LORCONST:   long: -1
961.    LXORCONST:  long: 32767
962.    not IF_LCMPEQint: -32768
963.    not IF_LCMPLTint: -32768
964.    not IF_LCMPLEint: -32768
965.    IADDCONST:  int: -32770
966.    ISUBCONST:  int: 32768
967.    IMULCONST:  int: 32769
968.    ISHLCONST:  int: -2147483648
969.    ISHRCONST:  int: -1
970.    IUSHRCONST: int: 1
971.    IANDCONST:  int: -32769
972.    IORCONST:   int: -1
973.    IXORCONST:  int: 32768
974.    not IF_ICMPEQint: -32769
975.    not IF_ICMPLTint: -32769
976.    not IF_ICMPLEint: -32769
977.    LADDCONST:  long: -32770
978.    LSUBCONST:  long: 32768
979.    LMULCONST:  long: 32769
980.    LSHLCONST:  long: -9223372036854775808
981.    LSHRCONST:  long: -1
982.    LUSHRCONST: long: 1
983.    LANDCONST:  long: -32769
984.    LORCONST:   long: -1
985.    LXORCONST:  long: 32768
986.    not IF_LCMPEQint: -32769
987.    not IF_LCMPLTint: -32769
988.    not IF_LCMPLEint: -32769
989.    TESTCONST CALLED WITH int: -24123
990.                      AND long: -4918923241323
991.    not IF_ICMPEQint: 0
992.    not IF_ICMPGTint: 0
993.    not IF_ICMPGEint: 0
994.    not IF_LCMPEQint: 0
995.    not IF_LCMPGTint: 0
996.    not IF_LCMPGEint: 0
997.    IADDCONST:  int: -24124
998.    ISUBCONST:  int: -24122
999.    IMULCONST:  int: 24123
1000.    ISHLCONST:  int: -2147483648
1001.    ISHRCONST:  int: -1
1002.    IUSHRCONST: int: 1
1003.    IANDCONST:  int: -24123
1004.    IORCONST:   int: -1
1005.    IXORCONST:  int: 24122
1006.    not IF_ICMPEQint: -1
1007.    not IF_ICMPGTint: -1
1008.    not IF_ICMPGEint: -1
1009.    LADDCONST:  long: -4918923241324
1010.    LSUBCONST:  long: -4918923241322
1011.    LMULCONST:  long: 4918923241323
1012.    LSHLCONST:  long: -9223372036854775808
1013.    LSHRCONST:  long: -1
1014.    LUSHRCONST: long: 1
1015.    LANDCONST:  long: -4918923241323
1016.    LORCONST:   long: -1
1017.    LXORCONST:  long: 4918923241322
1018.    not IF_LCMPEQint: -1
1019.    not IF_LCMPGTint: -1
1020.    not IF_LCMPGEint: -1
1021.    IADDCONST:  int: -24122
1022.    ISUBCONST:  int: -24124
1023.    IMULCONST:  int: -24123
1024.    ISHLCONST:  int: -48246
1025.    ISHRCONST:  int: -12062
1026.    IUSHRCONST: int: 2147471586
1027.    IANDCONST:  int: 1
1028.    IORCONST:   int: -24123
1029.    IXORCONST:  int: -24124
1030.    not IF_ICMPEQint: 1
1031.    not IF_ICMPGTint: 1
1032.    not IF_ICMPGEint: 1
1033.    LADDCONST:  long: -4918923241322
1034.    LSUBCONST:  long: -4918923241324
1035.    LMULCONST:  long: -4918923241323
1036.    LSHLCONST:  long: -9837846482646
1037.    LSHRCONST:  long: -2459461620662
1038.    LUSHRCONST: long: 9223369577393155146
1039.    LANDCONST:  long: 1
1040.    LORCONST:   long: -4918923241323
1041.    LXORCONST:  long: -4918923241324
1042.    not IF_LCMPEQint: 1
1043.    not IF_LCMPGTint: 1
1044.    not IF_LCMPGEint: 1
1045.    IADDCONST:  int: -23868
1046.    ISUBCONST:  int: -24378
1047.    IMULCONST:  int: -6151365
1048.    ISHLCONST:  int: -2147483648
1049.    ISHRCONST:  int: -1
1050.    IUSHRCONST: int: 1
1051.    IANDCONST:  int: 197
1052.    IORCONST:   int: -24065
1053.    IXORCONST:  int: -24262
1054.    not IF_ICMPEQint: 255
1055.    not IF_ICMPGTint: 255
1056.    not IF_ICMPGEint: 255
1057.    LADDCONST:  long: -4918923241068
1058.    LSUBCONST:  long: -4918923241578
1059.    LMULCONST:  long: -1254325426537365
1060.    LSHLCONST:  long: -9223372036854775808
1061.    LSHRCONST:  long: -1
1062.    LUSHRCONST: long: 1
1063.    LANDCONST:  long: 149
1064.    LORCONST:   long: -4918923241217
1065.    LXORCONST:  long: -4918923241366
1066.    not IF_LCMPEQint: 255
1067.    not IF_LCMPGTint: 255
1068.    not IF_LCMPGEint: 255
1069.    IADDCONST:  int: -23867
1070.    ISUBCONST:  int: -24379
1071.    IMULCONST:  int: -6175488
1072.    ISHLCONST:  int: -24123
1073.    ISHRCONST:  int: -24123
1074.    IUSHRCONST: int: -24123
1075.    IANDCONST:  int: 256
1076.    IORCONST:   int: -24123
1077.    IXORCONST:  int: -24379
1078.    not IF_ICMPEQint: 256
1079.    not IF_ICMPGTint: 256
1080.    not IF_ICMPGEint: 256
1081.    LADDCONST:  long: -4918923241067
1082.    LSUBCONST:  long: -4918923241579
1083.    LMULCONST:  long: -1259244349778688
1084.    LSHLCONST:  long: -4918923241323
1085.    LSHRCONST:  long: -4918923241323
1086.    LUSHRCONST: long: -4918923241323
1087.    LANDCONST:  long: 0
1088.    LORCONST:   long: -4918923241067
1089.    LXORCONST:  long: -4918923241067
1090.    not IF_LCMPEQint: 256
1091.    not IF_LCMPGTint: 256
1092.    not IF_LCMPGEint: 256
1093.    IADDCONST:  int: 8644
1094.    ISUBCONST:  int: -56890
1095.    IMULCONST:  int: -790438341
1096.    ISHLCONST:  int: -2147483648
1097.    ISHRCONST:  int: -1
1098.    IUSHRCONST: int: 1
1099.    IANDCONST:  int: 8645
1100.    IORCONST:   int: -1
1101.    IXORCONST:  int: -8646
1102.    not IF_ICMPEQint: 32767
1103.    not IF_ICMPGTint: 32767
1104.    not IF_ICMPGEint: 32767
1105.    LADDCONST:  long: -4918923208556
1106.    LSUBCONST:  long: -4918923274090
1107.    LMULCONST:  long: -161178357848430741
1108.    LSHLCONST:  long: -9223372036854775808
1109.    LSHRCONST:  long: -1
1110.    LUSHRCONST: long: 1
1111.    LANDCONST:  long: 22677
1112.    LORCONST:   long: -4918923231233
1113.    LXORCONST:  long: -4918923253910
1114.    not IF_LCMPEQint: 32767
1115.    not IF_LCMPGTint: 32767
1116.    not IF_LCMPGEint: 32767
1117.    IADDCONST:  int: 8645
1118.    ISUBCONST:  int: -56891
1119.    IMULCONST:  int: -790462464
1120.    ISHLCONST:  int: -24123
1121.    ISHRCONST:  int: -24123
1122.    IUSHRCONST: int: -24123
1123.    IANDCONST:  int: 32768
1124.    IORCONST:   int: -24123
1125.    IXORCONST:  int: -56891
1126.    not IF_ICMPEQint: 32768
1127.    not IF_ICMPGTint: 32768
1128.    not IF_ICMPGEint: 32768
1129.    LADDCONST:  long: -4918923208555
1130.    LSUBCONST:  long: -4918923274091
1131.    LMULCONST:  long: -161183276771672064
1132.    LSHLCONST:  long: -4918923241323
1133.    LSHRCONST:  long: -4918923241323
1134.    LUSHRCONST: long: -4918923241323
1135.    LANDCONST:  long: 32768
1136.    LORCONST:   long: -4918923241323
1137.    LXORCONST:  long: -4918923274091
1138.    not IF_LCMPEQint: 32768
1139.    not IF_LCMPGTint: 32768
1140.    not IF_LCMPGEint: 32768
1141.    IADDCONST:  int: -56891
1142.    ISUBCONST:  int: 8645
1143.    IMULCONST:  int: 790462464
1144.    ISHLCONST:  int: -24123
1145.    ISHRCONST:  int: -24123
1146.    IUSHRCONST: int: -24123
1147.    IANDCONST:  int: -32768
1148.    IORCONST:   int: -24123
1149.    IXORCONST:  int: 8645
1150.    not IF_ICMPEQint: -32768
1151.    not IF_ICMPLTint: -32768
1152.    not IF_ICMPLEint: -32768
1153.    LADDCONST:  long: -4918923274091
1154.    LSUBCONST:  long: -4918923208555
1155.    LMULCONST:  long: 161183276771672064
1156.    LSHLCONST:  long: -4918923241323
1157.    LSHRCONST:  long: -4918923241323
1158.    LUSHRCONST: long: -4918923241323
1159.    LANDCONST:  long: -4918923264000
1160.    LORCONST:   long: -10091
1161.    LXORCONST:  long: 4918923253909
1162.    not IF_LCMPEQint: -32768
1163.    not IF_LCMPGTint: -32768
1164.    not IF_LCMPGEint: -32768
1165.    IADDCONST:  int: -56892
1166.    ISUBCONST:  int: 8646
1167.    IMULCONST:  int: 790486587
1168.    ISHLCONST:  int: -2147483648
1169.    ISHRCONST:  int: -1
1170.    IUSHRCONST: int: 1
1171.    IANDCONST:  int: -56891
1172.    IORCONST:   int: -1
1173.    IXORCONST:  int: 56890
1174.    not IF_ICMPEQint: -32769
1175.    not IF_ICMPLTint: -32769
1176.    not IF_ICMPLEint: -32769
1177.    LADDCONST:  long: -4918923274092
1178.    LSUBCONST:  long: -4918923208554
1179.    LMULCONST:  long: 161188195694913387
1180.    LSHLCONST:  long: -9223372036854775808
1181.    LSHRCONST:  long: -1
1182.    LUSHRCONST: long: 1
1183.    LANDCONST:  long: -4918923274091
1184.    LORCONST:   long: -1
1185.    LXORCONST:  long: 4918923274090
1186.    not IF_LCMPEQint: -32769
1187.    not IF_LCMPGTint: -32769
1188.    not IF_LCMPGEint: -32769
1189.    TESTCONST CALLED WITH int: -243511
1190.                      AND long: -4423423234231423
1191.    not IF_ICMPEQint: 0
1192.    not IF_ICMPGTint: 0
1193.    not IF_ICMPGEint: 0
1194.    not IF_LCMPEQint: 0
1195.    not IF_LCMPGTint: 0
1196.    not IF_LCMPGEint: 0
1197.    IADDCONST:  int: -243512
1198.    ISUBCONST:  int: -243510
1199.    IMULCONST:  int: 243511
1200.    ISHLCONST:  int: -2147483648
1201.    ISHRCONST:  int: -1
1202.    IUSHRCONST: int: 1
1203.    IANDCONST:  int: -243511
1204.    IORCONST:   int: -1
1205.    IXORCONST:  int: 243510
1206.    not IF_ICMPEQint: -1
1207.    not IF_ICMPGTint: -1
1208.    not IF_ICMPGEint: -1
1209.    LADDCONST:  long: -4423423234231424
1210.    LSUBCONST:  long: -4423423234231422
1211.    LMULCONST:  long: 4423423234231423
1212.    LSHLCONST:  long: -9223372036854775808
1213.    LSHRCONST:  long: -1
1214.    LUSHRCONST: long: 1
1215.    LANDCONST:  long: -4423423234231423
1216.    LORCONST:   long: -1
1217.    LXORCONST:  long: 4423423234231422
1218.    not IF_LCMPEQint: -1
1219.    not IF_LCMPGTint: -1
1220.    not IF_LCMPGEint: -1
1221.    IADDCONST:  int: -243510
1222.    ISUBCONST:  int: -243512
1223.    IMULCONST:  int: -243511
1224.    ISHLCONST:  int: -487022
1225.    ISHRCONST:  int: -121756
1226.    IUSHRCONST: int: 2147361892
1227.    IANDCONST:  int: 1
1228.    IORCONST:   int: -243511
1229.    IXORCONST:  int: -243512
1230.    not IF_ICMPEQint: 1
1231.    not IF_ICMPGTint: 1
1232.    not IF_ICMPGEint: 1
1233.    LADDCONST:  long: -4423423234231422
1234.    LSUBCONST:  long: -4423423234231424
1235.    LMULCONST:  long: -4423423234231423
1236.    LSHLCONST:  long: -8846846468462846
1237.    LSHRCONST:  long: -2211711617115712
1238.    LUSHRCONST: long: 9221160325237660096
1239.    LANDCONST:  long: 1
1240.    LORCONST:   long: -4423423234231423
1241.    LXORCONST:  long: -4423423234231424
1242.    not IF_LCMPEQint: 1
1243.    not IF_LCMPGTint: 1
1244.    not IF_LCMPGEint: 1
1245.    IADDCONST:  int: -243256
1246.    ISUBCONST:  int: -243766
1247.    IMULCONST:  int: -62095305
1248.    ISHLCONST:  int: -2147483648
1249.    ISHRCONST:  int: -1
1250.    IUSHRCONST: int: 1
1251.    IANDCONST:  int: 201
1252.    IORCONST:   int: -243457
1253.    IXORCONST:  int: -243658
1254.    not IF_ICMPEQint: 255
1255.    not IF_ICMPGTint: 255
1256.    not IF_ICMPGEint: 255
1257.    LADDCONST:  long: -4423423234231168
1258.    LSUBCONST:  long: -4423423234231678
1259.    LMULCONST:  long: -1127972924729012865
1260.    LSHLCONST:  long: -9223372036854775808
1261.    LSHRCONST:  long: -1
1262.    LUSHRCONST: long: 1
1263.    LANDCONST:  long: 129
1264.    LORCONST:   long: -4423423234231297
1265.    LXORCONST:  long: -4423423234231426
1266.    not IF_LCMPEQint: 255
1267.    not IF_LCMPGTint: 255
1268.    not IF_LCMPGEint: 255
1269.    IADDCONST:  int: -243255
1270.    ISUBCONST:  int: -243767
1271.    IMULCONST:  int: -62338816
1272.    ISHLCONST:  int: -243511
1273.    ISHRCONST:  int: -243511
1274.    IUSHRCONST: int: -243511
1275.    IANDCONST:  int: 0
1276.    IORCONST:   int: -243255
1277.    IXORCONST:  int: -243255
1278.    not IF_ICMPEQint: 256
1279.    not IF_ICMPGTint: 256
1280.    not IF_ICMPGEint: 256
1281.    LADDCONST:  long: -4423423234231167
1282.    LSUBCONST:  long: -4423423234231679
1283.    LMULCONST:  long: -1132396347963244288
1284.    LSHLCONST:  long: -4423423234231423
1285.    LSHRCONST:  long: -4423423234231423
1286.    LUSHRCONST: long: -4423423234231423
1287.    LANDCONST:  long: 256
1288.    LORCONST:   long: -4423423234231423
1289.    LXORCONST:  long: -4423423234231679
1290.    not IF_LCMPEQint: 256
1291.    not IF_LCMPGTint: 256
1292.    not IF_LCMPGEint: 256
1293.    IADDCONST:  int: -210744
1294.    ISUBCONST:  int: -276278
1295.    IMULCONST:  int: 610809655
1296.    ISHLCONST:  int: -2147483648
1297.    ISHRCONST:  int: -1
1298.    IUSHRCONST: int: 1
1299.    IANDCONST:  int: 18633
1300.    IORCONST:   int: -229377
1301.    IXORCONST:  int: -248010
1302.    not IF_ICMPEQint: 32767
1303.    not IF_ICMPGTint: 32767
1304.    not IF_ICMPGEint: 32767
1305.    LADDCONST:  long: -4423423234198656
1306.    LSUBCONST:  long: -4423423234264190
1307.    LMULCONST:  long: 2631643473615375487
1308.    LSHLCONST:  long: -9223372036854775808
1309.    LSHRCONST:  long: -1
1310.    LUSHRCONST: long: 1
1311.    LANDCONST:  long: 13185
1312.    LORCONST:   long: -4423423234211841
1313.    LXORCONST:  long: -4423423234225026
1314.    not IF_LCMPEQint: 32767
1315.    not IF_LCMPGTint: 32767
1316.    not IF_LCMPGEint: 32767
1317.    IADDCONST:  int: -210743
1318.    ISUBCONST:  int: -276279
1319.    IMULCONST:  int: 610566144
1320.    ISHLCONST:  int: -243511
1321.    ISHRCONST:  int: -243511
1322.    IUSHRCONST: int: -243511
1323.    IANDCONST:  int: 0
1324.    IORCONST:   int: -210743
1325.    IXORCONST:  int: -210743
1326.    not IF_ICMPEQint: 32768
1327.    not IF_ICMPGTint: 32768
1328.    not IF_ICMPGEint: 32768
1329.    LADDCONST:  long: -4423423234198655
1330.    LSUBCONST:  long: -4423423234264191
1331.    LMULCONST:  long: 2627220050381144064
1332.    LSHLCONST:  long: -4423423234231423
1333.    LSHRCONST:  long: -4423423234231423
1334.    LUSHRCONST: long: -4423423234231423
1335.    LANDCONST:  long: 32768
1336.    LORCONST:   long: -4423423234231423
1337.    LXORCONST:  long: -4423423234264191
1338.    not IF_LCMPEQint: 32768
1339.    not IF_LCMPGTint: 32768
1340.    not IF_LCMPGEint: 32768
1341.    IADDCONST:  int: -276279
1342.    ISUBCONST:  int: -210743
1343.    IMULCONST:  int: -610566144
1344.    ISHLCONST:  int: -243511
1345.    ISHRCONST:  int: -243511
1346.    IUSHRCONST: int: -243511
1347.    IANDCONST:  int: -262144
1348.    IORCONST:   int: -14135
1349.    IXORCONST:  int: 248009
1350.    not IF_ICMPEQint: -32768
1351.    not IF_ICMPGTint: -32768
1352.    not IF_ICMPGEint: -32768
1353.    LADDCONST:  long: -4423423234264191
1354.    LSUBCONST:  long: -4423423234198655
1355.    LMULCONST:  long: -2627220050381144064
1356.    LSHLCONST:  long: -4423423234231423
1357.    LSHRCONST:  long: -4423423234231423
1358.    LUSHRCONST: long: -4423423234231423
1359.    LANDCONST:  long: -4423423234244608
1360.    LORCONST:   long: -19583
1361.    LXORCONST:  long: 4423423234225025
1362.    not IF_LCMPEQint: -32768
1363.    not IF_LCMPGTint: -32768
1364.    not IF_LCMPGEint: -32768
1365.    IADDCONST:  int: -276280
1366.    ISUBCONST:  int: -210742
1367.    IMULCONST:  int: -610322633
1368.    ISHLCONST:  int: -2147483648
1369.    ISHRCONST:  int: -1
1370.    IUSHRCONST: int: 1
1371.    IANDCONST:  int: -243511
1372.    IORCONST:   int: -32769
1373.    IXORCONST:  int: 210742
1374.    not IF_ICMPEQint: -32769
1375.    not IF_ICMPGTint: -32769
1376.    not IF_ICMPGEint: -32769
1377.    LADDCONST:  long: -4423423234264192
1378.    LSUBCONST:  long: -4423423234198654
1379.    LMULCONST:  long: -2622796627146912641
1380.    LSHLCONST:  long: -9223372036854775808
1381.    LSHRCONST:  long: -1
1382.    LUSHRCONST: long: 1
1383.    LANDCONST:  long: -4423423234264191
1384.    LORCONST:   long: -1
1385.    LXORCONST:  long: 4423423234264190
1386.    not IF_LCMPEQint: -32769
1387.    not IF_LCMPGTint: -32769
1388.    not IF_LCMPGEint: -32769
1389.    TESTCONST CALLED WITH int: 2147483647
1390.                      AND long: 9223372036854775807
1391.    not IF_ICMPEQint: 0
1392.    not IF_ICMPLTint: 0
1393.    not IF_ICMPLEint: 0
1394.    not IF_LCMPEQint: 0
1395.    not IF_LCMPLTint: 0
1396.    not IF_LCMPLEint: 0
1397.    IADDCONST:  int: 2147483646
1398.    ISUBCONST:  int: -2147483648
1399.    IMULCONST:  int: -2147483647
1400.    ISHLCONST:  int: -2147483648
1401.    ISHRCONST:  int: 0
1402.    IUSHRCONST: int: 0
1403.    IANDCONST:  int: 2147483647
1404.    IORCONST:   int: -1
1405.    IXORCONST:  int: -2147483648
1406.    not IF_ICMPEQint: -1
1407.    not IF_ICMPLTint: -1
1408.    not IF_ICMPLEint: -1
1409.    LADDCONST:  long: 9223372036854775806
1410.    LSUBCONST:  long: -9223372036854775808
1411.    LMULCONST:  long: -9223372036854775807
1412.    LSHLCONST:  long: -9223372036854775808
1413.    LSHRCONST:  long: 0
1414.    LUSHRCONST: long: 0
1415.    LANDCONST:  long: 9223372036854775807
1416.    LORCONST:   long: -1
1417.    LXORCONST:  long: -9223372036854775808
1418.    not IF_LCMPEQint: -1
1419.    not IF_LCMPLTint: -1
1420.    not IF_LCMPLEint: -1
1421.    IADDCONST:  int: -2147483648
1422.    ISUBCONST:  int: 2147483646
1423.    IMULCONST:  int: 2147483647
1424.    ISHLCONST:  int: -2
1425.    ISHRCONST:  int: 1073741823
1426.    IUSHRCONST: int: 1073741823
1427.    IANDCONST:  int: 1
1428.    IORCONST:   int: 2147483647
1429.    IXORCONST:  int: 2147483646
1430.    not IF_ICMPEQint: 1
1431.    not IF_ICMPLTint: 1
1432.    not IF_ICMPLEint: 1
1433.    LADDCONST:  long: -9223372036854775808
1434.    LSUBCONST:  long: 9223372036854775806
1435.    LMULCONST:  long: 9223372036854775807
1436.    LSHLCONST:  long: -2
1437.    LSHRCONST:  long: 4611686018427387903
1438.    LUSHRCONST: long: 4611686018427387903
1439.    LANDCONST:  long: 1
1440.    LORCONST:   long: 9223372036854775807
1441.    LXORCONST:  long: 9223372036854775806
1442.    not IF_LCMPEQint: 1
1443.    not IF_LCMPLTint: 1
1444.    not IF_LCMPLEint: 1
1445.    IADDCONST:  int: -2147483394
1446.    ISUBCONST:  int: 2147483392
1447.    IMULCONST:  int: 2147483393
1448.    ISHLCONST:  int: -2147483648
1449.    ISHRCONST:  int: 0
1450.    IUSHRCONST: int: 0
1451.    IANDCONST:  int: 255
1452.    IORCONST:   int: 2147483647
1453.    IXORCONST:  int: 2147483392
1454.    not IF_ICMPEQint: 255
1455.    not IF_ICMPLTint: 255
1456.    not IF_ICMPLEint: 255
1457.    LADDCONST:  long: -9223372036854775554
1458.    LSUBCONST:  long: 9223372036854775552
1459.    LMULCONST:  long: 9223372036854775553
1460.    LSHLCONST:  long: -9223372036854775808
1461.    LSHRCONST:  long: 0
1462.    LUSHRCONST: long: 0
1463.    LANDCONST:  long: 255
1464.    LORCONST:   long: 9223372036854775807
1465.    LXORCONST:  long: 9223372036854775552
1466.    not IF_LCMPEQint: 255
1467.    not IF_LCMPLTint: 255
1468.    not IF_LCMPLEint: 255
1469.    IADDCONST:  int: -2147483393
1470.    ISUBCONST:  int: 2147483391
1471.    IMULCONST:  int: -256
1472.    ISHLCONST:  int: 2147483647
1473.    ISHRCONST:  int: 2147483647
1474.    IUSHRCONST: int: 2147483647
1475.    IANDCONST:  int: 256
1476.    IORCONST:   int: 2147483647
1477.    IXORCONST:  int: 2147483391
1478.    not IF_ICMPEQint: 256
1479.    not IF_ICMPLTint: 256
1480.    not IF_ICMPLEint: 256
1481.    LADDCONST:  long: -9223372036854775553
1482.    LSUBCONST:  long: 9223372036854775551
1483.    LMULCONST:  long: -256
1484.    LSHLCONST:  long: 9223372036854775807
1485.    LSHRCONST:  long: 9223372036854775807
1486.    LUSHRCONST: long: 9223372036854775807
1487.    LANDCONST:  long: 256
1488.    LORCONST:   long: 9223372036854775807
1489.    LXORCONST:  long: 9223372036854775551
1490.    not IF_LCMPEQint: 256
1491.    not IF_LCMPLTint: 256
1492.    not IF_LCMPLEint: 256
1493.    IADDCONST:  int: -2147450882
1494.    ISUBCONST:  int: 2147450880
1495.    IMULCONST:  int: 2147450881
1496.    ISHLCONST:  int: -2147483648
1497.    ISHRCONST:  int: 0
1498.    IUSHRCONST: int: 0
1499.    IANDCONST:  int: 32767
1500.    IORCONST:   int: 2147483647
1501.    IXORCONST:  int: 2147450880
1502.    not IF_ICMPEQint: 32767
1503.    not IF_ICMPLTint: 32767
1504.    not IF_ICMPLEint: 32767
1505.    LADDCONST:  long: -9223372036854743042
1506.    LSUBCONST:  long: 9223372036854743040
1507.    LMULCONST:  long: 9223372036854743041
1508.    LSHLCONST:  long: -9223372036854775808
1509.    LSHRCONST:  long: 0
1510.    LUSHRCONST: long: 0
1511.    LANDCONST:  long: 32767
1512.    LORCONST:   long: 9223372036854775807
1513.    LXORCONST:  long: 9223372036854743040
1514.    not IF_LCMPEQint: 32767
1515.    not IF_LCMPLTint: 32767
1516.    not IF_LCMPLEint: 32767
1517.    IADDCONST:  int: -2147450881
1518.    ISUBCONST:  int: 2147450879
1519.    IMULCONST:  int: -32768
1520.    ISHLCONST:  int: 2147483647
1521.    ISHRCONST:  int: 2147483647
1522.    IUSHRCONST: int: 2147483647
1523.    IANDCONST:  int: 32768
1524.    IORCONST:   int: 2147483647
1525.    IXORCONST:  int: 2147450879
1526.    not IF_ICMPEQint: 32768
1527.    not IF_ICMPLTint: 32768
1528.    not IF_ICMPLEint: 32768
1529.    LADDCONST:  long: -9223372036854743041
1530.    LSUBCONST:  long: 9223372036854743039
1531.    LMULCONST:  long: -32768
1532.    LSHLCONST:  long: 9223372036854775807
1533.    LSHRCONST:  long: 9223372036854775807
1534.    LUSHRCONST: long: 9223372036854775807
1535.    LANDCONST:  long: 32768
1536.    LORCONST:   long: 9223372036854775807
1537.    LXORCONST:  long: 9223372036854743039
1538.    not IF_LCMPEQint: 32768
1539.    not IF_LCMPLTint: 32768
1540.    not IF_LCMPLEint: 32768
1541.    IADDCONST:  int: 2147450879
1542.    ISUBCONST:  int: -2147450881
1543.    IMULCONST:  int: 32768
1544.    ISHLCONST:  int: 2147483647
1545.    ISHRCONST:  int: 2147483647
1546.    IUSHRCONST: int: 2147483647
1547.    IANDCONST:  int: 2147450880
1548.    IORCONST:   int: -1
1549.    IXORCONST:  int: -2147450881
1550.    not IF_ICMPEQint: -32768
1551.    not IF_ICMPLTint: -32768
1552.    not IF_ICMPLEint: -32768
1553.    LADDCONST:  long: 9223372036854743039
1554.    LSUBCONST:  long: -9223372036854743041
1555.    LMULCONST:  long: 32768
1556.    LSHLCONST:  long: 9223372036854775807
1557.    LSHRCONST:  long: 9223372036854775807
1558.    LUSHRCONST: long: 9223372036854775807
1559.    LANDCONST:  long: 9223372036854743040
1560.    LORCONST:   long: -1
1561.    LXORCONST:  long: -9223372036854743041
1562.    not IF_LCMPEQint: -32768
1563.    not IF_LCMPLTint: -32768
1564.    not IF_LCMPLEint: -32768
1565.    IADDCONST:  int: 2147450878
1566.    ISUBCONST:  int: -2147450880
1567.    IMULCONST:  int: -2147450879
1568.    ISHLCONST:  int: -2147483648
1569.    ISHRCONST:  int: 0
1570.    IUSHRCONST: int: 0
1571.    IANDCONST:  int: 2147450879
1572.    IORCONST:   int: -1
1573.    IXORCONST:  int: -2147450880
1574.    not IF_ICMPEQint: -32769
1575.    not IF_ICMPLTint: -32769
1576.    not IF_ICMPLEint: -32769
1577.    LADDCONST:  long: 9223372036854743038
1578.    LSUBCONST:  long: -9223372036854743040
1579.    LMULCONST:  long: -9223372036854743039
1580.    LSHLCONST:  long: -9223372036854775808
1581.    LSHRCONST:  long: 0
1582.    LUSHRCONST: long: 0
1583.    LANDCONST:  long: 9223372036854743039
1584.    LORCONST:   long: -1
1585.    LXORCONST:  long: -9223372036854743040
1586.    not IF_LCMPEQint: -32769
1587.    not IF_LCMPLTint: -32769
1588.    not IF_LCMPLEint: -32769
1589.    TESTCONST CALLED WITH int: -2147483648
1590.                      AND long: -9223372036854775808
1591.    not IF_ICMPEQint: 0
1592.    not IF_ICMPGTint: 0
1593.    not IF_ICMPGEint: 0
1594.    not IF_LCMPEQint: 0
1595.    not IF_LCMPGTint: 0
1596.    not IF_LCMPGEint: 0
1597.    IADDCONST:  int: 2147483647
1598.    ISUBCONST:  int: -2147483647
1599.    IMULCONST:  int: -2147483648
1600.    ISHLCONST:  int: 0
1601.    ISHRCONST:  int: -1
1602.    IUSHRCONST: int: 1
1603.    IANDCONST:  int: -2147483648
1604.    IORCONST:   int: -1
1605.    IXORCONST:  int: 2147483647
1606.    not IF_ICMPEQint: -1
1607.    not IF_ICMPGTint: -1
1608.    not IF_ICMPGEint: -1
1609.    LADDCONST:  long: 9223372036854775807
1610.    LSUBCONST:  long: -9223372036854775807
1611.    LMULCONST:  long: -9223372036854775808
1612.    LSHLCONST:  long: 0
1613.    LSHRCONST:  long: -1
1614.    LUSHRCONST: long: 1
1615.    LANDCONST:  long: -9223372036854775808
1616.    LORCONST:   long: -1
1617.    LXORCONST:  long: 9223372036854775807
1618.    not IF_LCMPEQint: -1
1619.    not IF_LCMPGTint: -1
1620.    not IF_LCMPGEint: -1
1621.    IADDCONST:  int: -2147483647
1622.    ISUBCONST:  int: 2147483647
1623.    IMULCONST:  int: -2147483648
1624.    ISHLCONST:  int: 0
1625.    ISHRCONST:  int: -1073741824
1626.    IUSHRCONST: int: 1073741824
1627.    IANDCONST:  int: 0
1628.    IORCONST:   int: -2147483647
1629.    IXORCONST:  int: -2147483647
1630.    not IF_ICMPEQint: 1
1631.    not IF_ICMPGTint: 1
1632.    not IF_ICMPGEint: 1
1633.    LADDCONST:  long: -9223372036854775807
1634.    LSUBCONST:  long: 9223372036854775807
1635.    LMULCONST:  long: -9223372036854775808
1636.    LSHLCONST:  long: 0
1637.    LSHRCONST:  long: -4611686018427387904
1638.    LUSHRCONST: long: 4611686018427387904
1639.    LANDCONST:  long: 0
1640.    LORCONST:   long: -9223372036854775807
1641.    LXORCONST:  long: -9223372036854775807
1642.    not IF_LCMPEQint: 1
1643.    not IF_LCMPGTint: 1
1644.    not IF_LCMPGEint: 1
1645.    IADDCONST:  int: -2147483393
1646.    ISUBCONST:  int: 2147483393
1647.    IMULCONST:  int: -2147483648
1648.    ISHLCONST:  int: 0
1649.    ISHRCONST:  int: -1
1650.    IUSHRCONST: int: 1
1651.    IANDCONST:  int: 0
1652.    IORCONST:   int: -2147483393
1653.    IXORCONST:  int: -2147483393
1654.    not IF_ICMPEQint: 255
1655.    not IF_ICMPGTint: 255
1656.    not IF_ICMPGEint: 255
1657.    LADDCONST:  long: -9223372036854775553
1658.    LSUBCONST:  long: 9223372036854775553
1659.    LMULCONST:  long: -9223372036854775808
1660.    LSHLCONST:  long: 0
1661.    LSHRCONST:  long: -1
1662.    LUSHRCONST: long: 1
1663.    LANDCONST:  long: 0
1664.    LORCONST:   long: -9223372036854775553
1665.    LXORCONST:  long: -9223372036854775553
1666.    not IF_LCMPEQint: 255
1667.    not IF_LCMPGTint: 255
1668.    not IF_LCMPGEint: 255
1669.    IADDCONST:  int: -2147483392
1670.    ISUBCONST:  int: 2147483392
1671.    IMULCONST:  int: 0
1672.    ISHLCONST:  int: -2147483648
1673.    ISHRCONST:  int: -2147483648
1674.    IUSHRCONST: int: -2147483648
1675.    IANDCONST:  int: 0
1676.    IORCONST:   int: -2147483392
1677.    IXORCONST:  int: -2147483392
1678.    not IF_ICMPEQint: 256
1679.    not IF_ICMPGTint: 256
1680.    not IF_ICMPGEint: 256
1681.    LADDCONST:  long: -9223372036854775552
1682.    LSUBCONST:  long: 9223372036854775552
1683.    LMULCONST:  long: 0
1684.    LSHLCONST:  long: -9223372036854775808
1685.    LSHRCONST:  long: -9223372036854775808
1686.    LUSHRCONST: long: -9223372036854775808
1687.    LANDCONST:  long: 0
1688.    LORCONST:   long: -9223372036854775552
1689.    LXORCONST:  long: -9223372036854775552
1690.    not IF_LCMPEQint: 256
1691.    not IF_LCMPGTint: 256
1692.    not IF_LCMPGEint: 256
1693.    IADDCONST:  int: -2147450881
1694.    ISUBCONST:  int: 2147450881
1695.    IMULCONST:  int: -2147483648
1696.    ISHLCONST:  int: 0
1697.    ISHRCONST:  int: -1
1698.    IUSHRCONST: int: 1
1699.    IANDCONST:  int: 0
1700.    IORCONST:   int: -2147450881
1701.    IXORCONST:  int: -2147450881
1702.    not IF_ICMPEQint: 32767
1703.    not IF_ICMPGTint: 32767
1704.    not IF_ICMPGEint: 32767
1705.    LADDCONST:  long: -9223372036854743041
1706.    LSUBCONST:  long: 9223372036854743041
1707.    LMULCONST:  long: -9223372036854775808
1708.    LSHLCONST:  long: 0
1709.    LSHRCONST:  long: -1
1710.    LUSHRCONST: long: 1
1711.    LANDCONST:  long: 0
1712.    LORCONST:   long: -9223372036854743041
1713.    LXORCONST:  long: -9223372036854743041
1714.    not IF_LCMPEQint: 32767
1715.    not IF_LCMPGTint: 32767
1716.    not IF_LCMPGEint: 32767
1717.    IADDCONST:  int: -2147450880
1718.    ISUBCONST:  int: 2147450880
1719.    IMULCONST:  int: 0
1720.    ISHLCONST:  int: -2147483648
1721.    ISHRCONST:  int: -2147483648
1722.    IUSHRCONST: int: -2147483648
1723.    IANDCONST:  int: 0
1724.    IORCONST:   int: -2147450880
1725.    IXORCONST:  int: -2147450880
1726.    not IF_ICMPEQint: 32768
1727.    not IF_ICMPGTint: 32768
1728.    not IF_ICMPGEint: 32768
1729.    LADDCONST:  long: -9223372036854743040
1730.    LSUBCONST:  long: 9223372036854743040
1731.    LMULCONST:  long: 0
1732.    LSHLCONST:  long: -9223372036854775808
1733.    LSHRCONST:  long: -9223372036854775808
1734.    LUSHRCONST: long: -9223372036854775808
1735.    LANDCONST:  long: 0
1736.    LORCONST:   long: -9223372036854743040
1737.    LXORCONST:  long: -9223372036854743040
1738.    not IF_LCMPEQint: 32768
1739.    not IF_LCMPGTint: 32768
1740.    not IF_LCMPGEint: 32768
1741.    IADDCONST:  int: 2147450880
1742.    ISUBCONST:  int: -2147450880
1743.    IMULCONST:  int: 0
1744.    ISHLCONST:  int: -2147483648
1745.    ISHRCONST:  int: -2147483648
1746.    IUSHRCONST: int: -2147483648
1747.    IANDCONST:  int: -2147483648
1748.    IORCONST:   int: -32768
1749.    IXORCONST:  int: 2147450880
1750.    not IF_ICMPEQint: -32768
1751.    not IF_ICMPGTint: -32768
1752.    not IF_ICMPGEint: -32768
1753.    LADDCONST:  long: 9223372036854743040
1754.    LSUBCONST:  long: -9223372036854743040
1755.    LMULCONST:  long: 0
1756.    LSHLCONST:  long: -9223372036854775808
1757.    LSHRCONST:  long: -9223372036854775808
1758.    LUSHRCONST: long: -9223372036854775808
1759.    LANDCONST:  long: -9223372036854775808
1760.    LORCONST:   long: -32768
1761.    LXORCONST:  long: 9223372036854743040
1762.    not IF_LCMPEQint: -32768
1763.    not IF_LCMPGTint: -32768
1764.    not IF_LCMPGEint: -32768
1765.    IADDCONST:  int: 2147450879
1766.    ISUBCONST:  int: -2147450879
1767.    IMULCONST:  int: -2147483648
1768.    ISHLCONST:  int: 0
1769.    ISHRCONST:  int: -1
1770.    IUSHRCONST: int: 1
1771.    IANDCONST:  int: -2147483648
1772.    IORCONST:   int: -32769
1773.    IXORCONST:  int: 2147450879
1774.    not IF_ICMPEQint: -32769
1775.    not IF_ICMPGTint: -32769
1776.    not IF_ICMPGEint: -32769
1777.    LADDCONST:  long: 9223372036854743039
1778.    LSUBCONST:  long: -9223372036854743039
1779.    LMULCONST:  long: -9223372036854775808
1780.    LSHLCONST:  long: 0
1781.    LSHRCONST:  long: -1
1782.    LUSHRCONST: long: 1
1783.    LANDCONST:  long: -9223372036854775808
1784.    LORCONST:   long: -32769
1785.    LXORCONST:  long: 9223372036854743039
1786.    not IF_LCMPEQint: -32769
1787.    not IF_LCMPGTint: -32769
1788.    not IF_LCMPGEint: -32769
1789.    ------------------- test div and rem consts
1790.    IDIVPOW2 (17 / 0x00000002):  int: 8
1791.    IDIVPOW2 (17 / 0x00000004):  int: 4
1792.    IDIVPOW2 (17 / 0x00000008):  int: 2
1793.    IDIVPOW2 (17 / 0x00000010):  int: 1
1794.    IDIVPOW2 (17 / 0x00000020):  int: 0
1795.    IDIVPOW2 (17 / 0x00000040):  int: 0
1796.    IDIVPOW2 (17 / 0x00000080):  int: 0
1797.    IDIVPOW2 (17 / 0x00000100):  int: 0
1798.    IDIVPOW2 (17 / 0x00000200):  int: 0
1799.    IDIVPOW2 (17 / 0x00000400):  int: 0
1800.    IDIVPOW2 (17 / 0x00000800):  int: 0
1801.    IDIVPOW2 (17 / 0x00001000):  int: 0
1802.    IDIVPOW2 (17 / 0x00002000):  int: 0
1803.    IDIVPOW2 (17 / 0x00004000):  int: 0
1804.    IDIVPOW2 (17 / 0x00008000):  int: 0
1805.    IDIVPOW2 (17 / 0x00010000):  int: 0
1806.    IDIVPOW2 (17 / 0x00020000):  int: 0
1807.    IDIVPOW2 (17 / 0x00040000):  int: 0
1808.    IDIVPOW2 (17 / 0x00080000):  int: 0
1809.    IDIVPOW2 (17 / 0x00100000):  int: 0
1810.    IDIVPOW2 (17 / 0x00200000):  int: 0
1811.    IDIVPOW2 (17 / 0x00400000):  int: 0
1812.    IDIVPOW2 (17 / 0x00800000):  int: 0
1813.    IDIVPOW2 (17 / 0x01000000):  int: 0
1814.    IDIVPOW2 (17 / 0x02000000):  int: 0
1815.    IDIVPOW2 (17 / 0x04000000):  int: 0
1816.    IDIVPOW2 (17 / 0x08000000):  int: 0
1817.    IDIVPOW2 (17 / 0x10000000):  int: 0
1818.    IDIVPOW2 (17 / 0x20000000):  int: 0
1819.    IDIVPOW2 (17 / 0x40000000):  int: 0
1820.    IDIVPOW2 (17 / 0x80000000):  int: 0
1821.    IREMPOW2 (17 % 0x00000002):  int: 1
1822.    IREMPOW2 (17 % 0x00000004):  int: 1
1823.    IREMPOW2 (17 % 0x00000008):  int: 1
1824.    IREMPOW2 (17 % 0x00000010):  int: 1
1825.    IREMPOW2 (17 % 0x00000020):  int: 17
1826.    IREMPOW2 (17 % 0x00000040):  int: 17
1827.    IREMPOW2 (17 % 0x00000080):  int: 17
1828.    IREMPOW2 (17 % 0x00000100):  int: 17
1829.    IREMPOW2 (17 % 0x00000200):  int: 17
1830.    IREMPOW2 (17 % 0x00000400):  int: 17
1831.    IREMPOW2 (17 % 0x00000800):  int: 17
1832.    IREMPOW2 (17 % 0x00001000):  int: 17
1833.    IREMPOW2 (17 % 0x00002000):  int: 17
1834.    IREMPOW2 (17 % 0x00004000):  int: 17
1835.    IREMPOW2 (17 % 0x00008000):  int: 17
1836.    IREMPOW2 (17 % 0x00010000):  int: 17
1837.    IREMPOW2 (17 % 0x00020000):  int: 17
1838.    IREMPOW2 (17 % 0x00040000):  int: 17
1839.    IREMPOW2 (17 % 0x00080000):  int: 17
1840.    IREMPOW2 (17 % 0x00100000):  int: 17
1841.    IREMPOW2 (17 % 0x00200000):  int: 17
1842.    IREMPOW2 (17 % 0x00400000):  int: 17
1843.    IREMPOW2 (17 % 0x00800000):  int: 17
1844.    IREMPOW2 (17 % 0x01000000):  int: 17
1845.    IREMPOW2 (17 % 0x02000000):  int: 17
1846.    IREMPOW2 (17 % 0x04000000):  int: 17
1847.    IREMPOW2 (17 % 0x08000000):  int: 17
1848.    IREMPOW2 (17 % 0x10000000):  int: 17
1849.    IREMPOW2 (17 % 0x20000000):  int: 17
1850.    IREMPOW2 (17 % 0x40000000):  int: 17
1851.    IREMPOW2 (17 % 0x80000000):  int: 17
1852.    IDIVPOW2 (12347 / 0x00000002):  int: 6173
1853.    IDIVPOW2 (12347 / 0x00000004):  int: 3086
1854.    IDIVPOW2 (12347 / 0x00000008):  int: 1543
1855.    IDIVPOW2 (12347 / 0x00000010):  int: 771
1856.    IDIVPOW2 (12347 / 0x00000020):  int: 385
1857.    IDIVPOW2 (12347 / 0x00000040):  int: 192
1858.    IDIVPOW2 (12347 / 0x00000080):  int: 96
1859.    IDIVPOW2 (12347 / 0x00000100):  int: 48
1860.    IDIVPOW2 (12347 / 0x00000200):  int: 24
1861.    IDIVPOW2 (12347 / 0x00000400):  int: 12
1862.    IDIVPOW2 (12347 / 0x00000800):  int: 6
1863.    IDIVPOW2 (12347 / 0x00001000):  int: 3
1864.    IDIVPOW2 (12347 / 0x00002000):  int: 1
1865.    IDIVPOW2 (12347 / 0x00004000):  int: 0
1866.    IDIVPOW2 (12347 / 0x00008000):  int: 0
1867.    IDIVPOW2 (12347 / 0x00010000):  int: 0
1868.    IDIVPOW2 (12347 / 0x00020000):  int: 0
1869.    IDIVPOW2 (12347 / 0x00040000):  int: 0
1870.    IDIVPOW2 (12347 / 0x00080000):  int: 0
1871.    IDIVPOW2 (12347 / 0x00100000):  int: 0
1872.    IDIVPOW2 (12347 / 0x00200000):  int: 0
1873.    IDIVPOW2 (12347 / 0x00400000):  int: 0
1874.    IDIVPOW2 (12347 / 0x00800000):  int: 0
1875.    IDIVPOW2 (12347 / 0x01000000):  int: 0
1876.    IDIVPOW2 (12347 / 0x02000000):  int: 0
1877.    IDIVPOW2 (12347 / 0x04000000):  int: 0
1878.    IDIVPOW2 (12347 / 0x08000000):  int: 0
1879.    IDIVPOW2 (12347 / 0x10000000):  int: 0
1880.    IDIVPOW2 (12347 / 0x20000000):  int: 0
1881.    IDIVPOW2 (12347 / 0x40000000):  int: 0
1882.    IDIVPOW2 (12347 / 0x80000000):  int: 0
1883.    IREMPOW2 (12347 % 0x00000002):  int: 1
1884.    IREMPOW2 (12347 % 0x00000004):  int: 3
1885.    IREMPOW2 (12347 % 0x00000008):  int: 3
1886.    IREMPOW2 (12347 % 0x00000010):  int: 11
1887.    IREMPOW2 (12347 % 0x00000020):  int: 27
1888.    IREMPOW2 (12347 % 0x00000040):  int: 59
1889.    IREMPOW2 (12347 % 0x00000080):  int: 59
1890.    IREMPOW2 (12347 % 0x00000100):  int: 59
1891.    IREMPOW2 (12347 % 0x00000200):  int: 59
1892.    IREMPOW2 (12347 % 0x00000400):  int: 59
1893.    IREMPOW2 (12347 % 0x00000800):  int: 59
1894.    IREMPOW2 (12347 % 0x00001000):  int: 59
1895.    IREMPOW2 (12347 % 0x00002000):  int: 4155
1896.    IREMPOW2 (12347 % 0x00004000):  int: 12347
1897.    IREMPOW2 (12347 % 0x00008000):  int: 12347
1898.    IREMPOW2 (12347 % 0x00010000):  int: 12347
1899.    IREMPOW2 (12347 % 0x00020000):  int: 12347
1900.    IREMPOW2 (12347 % 0x00040000):  int: 12347
1901.    IREMPOW2 (12347 % 0x00080000):  int: 12347
1902.    IREMPOW2 (12347 % 0x00100000):  int: 12347
1903.    IREMPOW2 (12347 % 0x00200000):  int: 12347
1904.    IREMPOW2 (12347 % 0x00400000):  int: 12347
1905.    IREMPOW2 (12347 % 0x00800000):  int: 12347
1906.    IREMPOW2 (12347 % 0x01000000):  int: 12347
1907.    IREMPOW2 (12347 % 0x02000000):  int: 12347
1908.    IREMPOW2 (12347 % 0x04000000):  int: 12347
1909.    IREMPOW2 (12347 % 0x08000000):  int: 12347
1910.    IREMPOW2 (12347 % 0x10000000):  int: 12347
1911.    IREMPOW2 (12347 % 0x20000000):  int: 12347
1912.    IREMPOW2 (12347 % 0x40000000):  int: 12347
1913.    IREMPOW2 (12347 % 0x80000000):  int: 12347
1914.    IDIVPOW2 (8893427 / 0x00000002):  int: 4446713
1915.    IDIVPOW2 (8893427 / 0x00000004):  int: 2223356
1916.    IDIVPOW2 (8893427 / 0x00000008):  int: 1111678
1917.    IDIVPOW2 (8893427 / 0x00000010):  int: 555839
1918.    IDIVPOW2 (8893427 / 0x00000020):  int: 277919
1919.    IDIVPOW2 (8893427 / 0x00000040):  int: 138959
1920.    IDIVPOW2 (8893427 / 0x00000080):  int: 69479
1921.    IDIVPOW2 (8893427 / 0x00000100):  int: 34739
1922.    IDIVPOW2 (8893427 / 0x00000200):  int: 17369
1923.    IDIVPOW2 (8893427 / 0x00000400):  int: 8684
1924.    IDIVPOW2 (8893427 / 0x00000800):  int: 4342
1925.    IDIVPOW2 (8893427 / 0x00001000):  int: 2171
1926.    IDIVPOW2 (8893427 / 0x00002000):  int: 1085
1927.    IDIVPOW2 (8893427 / 0x00004000):  int: 542
1928.    IDIVPOW2 (8893427 / 0x00008000):  int: 271
1929.    IDIVPOW2 (8893427 / 0x00010000):  int: 135
1930.    IDIVPOW2 (8893427 / 0x00020000):  int: 67
1931.    IDIVPOW2 (8893427 / 0x00040000):  int: 33
1932.    IDIVPOW2 (8893427 / 0x00080000):  int: 16
1933.    IDIVPOW2 (8893427 / 0x00100000):  int: 8
1934.    IDIVPOW2 (8893427 / 0x00200000):  int: 4
1935.    IDIVPOW2 (8893427 / 0x00400000):  int: 2
1936.    IDIVPOW2 (8893427 / 0x00800000):  int: 1
1937.    IDIVPOW2 (8893427 / 0x01000000):  int: 0
1938.    IDIVPOW2 (8893427 / 0x02000000):  int: 0
1939.    IDIVPOW2 (8893427 / 0x04000000):  int: 0
1940.    IDIVPOW2 (8893427 / 0x08000000):  int: 0
1941.    IDIVPOW2 (8893427 / 0x10000000):  int: 0
1942.    IDIVPOW2 (8893427 / 0x20000000):  int: 0
1943.    IDIVPOW2 (8893427 / 0x40000000):  int: 0
1944.    IDIVPOW2 (8893427 / 0x80000000):  int: 0
1945.    IREMPOW2 (8893427 % 0x00000002):  int: 1
1946.    IREMPOW2 (8893427 % 0x00000004):  int: 3
1947.    IREMPOW2 (8893427 % 0x00000008):  int: 3
1948.    IREMPOW2 (8893427 % 0x00000010):  int: 3
1949.    IREMPOW2 (8893427 % 0x00000020):  int: 19
1950.    IREMPOW2 (8893427 % 0x00000040):  int: 51
1951.    IREMPOW2 (8893427 % 0x00000080):  int: 115
1952.    IREMPOW2 (8893427 % 0x00000100):  int: 243
1953.    IREMPOW2 (8893427 % 0x00000200):  int: 499
1954.    IREMPOW2 (8893427 % 0x00000400):  int: 1011
1955.    IREMPOW2 (8893427 % 0x00000800):  int: 1011
1956.    IREMPOW2 (8893427 % 0x00001000):  int: 1011
1957.    IREMPOW2 (8893427 % 0x00002000):  int: 5107
1958.    IREMPOW2 (8893427 % 0x00004000):  int: 13299
1959.    IREMPOW2 (8893427 % 0x00008000):  int: 13299
1960.    IREMPOW2 (8893427 % 0x00010000):  int: 46067
1961.    IREMPOW2 (8893427 % 0x00020000):  int: 111603
1962.    IREMPOW2 (8893427 % 0x00040000):  int: 242675
1963.    IREMPOW2 (8893427 % 0x00080000):  int: 504819
1964.    IREMPOW2 (8893427 % 0x00100000):  int: 504819
1965.    IREMPOW2 (8893427 % 0x00200000):  int: 504819
1966.    IREMPOW2 (8893427 % 0x00400000):  int: 504819
1967.    IREMPOW2 (8893427 % 0x00800000):  int: 504819
1968.    IREMPOW2 (8893427 % 0x01000000):  int: 8893427
1969.    IREMPOW2 (8893427 % 0x02000000):  int: 8893427
1970.    IREMPOW2 (8893427 % 0x04000000):  int: 8893427
1971.    IREMPOW2 (8893427 % 0x08000000):  int: 8893427
1972.    IREMPOW2 (8893427 % 0x10000000):  int: 8893427
1973.    IREMPOW2 (8893427 % 0x20000000):  int: 8893427
1974.    IREMPOW2 (8893427 % 0x40000000):  int: 8893427
1975.    IREMPOW2 (8893427 % 0x80000000):  int: 8893427
1976.    IDIVPOW2 (1005234562 / 0x00000002):  int: 502617281
1977.    IDIVPOW2 (1005234562 / 0x00000004):  int: 251308640
1978.    IDIVPOW2 (1005234562 / 0x00000008):  int: 125654320
1979.    IDIVPOW2 (1005234562 / 0x00000010):  int: 62827160
1980.    IDIVPOW2 (1005234562 / 0x00000020):  int: 31413580
1981.    IDIVPOW2 (1005234562 / 0x00000040):  int: 15706790
1982.    IDIVPOW2 (1005234562 / 0x00000080):  int: 7853395
1983.    IDIVPOW2 (1005234562 / 0x00000100):  int: 3926697
1984.    IDIVPOW2 (1005234562 / 0x00000200):  int: 1963348
1985.    IDIVPOW2 (1005234562 / 0x00000400):  int: 981674
1986.    IDIVPOW2 (1005234562 / 0x00000800):  int: 490837
1987.    IDIVPOW2 (1005234562 / 0x00001000):  int: 245418
1988.    IDIVPOW2 (1005234562 / 0x00002000):  int: 122709
1989.    IDIVPOW2 (1005234562 / 0x00004000):  int: 61354
1990.    IDIVPOW2 (1005234562 / 0x00008000):  int: 30677
1991.    IDIVPOW2 (1005234562 / 0x00010000):  int: 15338
1992.    IDIVPOW2 (1005234562 / 0x00020000):  int: 7669
1993.    IDIVPOW2 (1005234562 / 0x00040000):  int: 3834
1994.    IDIVPOW2 (1005234562 / 0x00080000):  int: 1917
1995.    IDIVPOW2 (1005234562 / 0x00100000):  int: 958
1996.    IDIVPOW2 (1005234562 / 0x00200000):  int: 479
1997.    IDIVPOW2 (1005234562 / 0x00400000):  int: 239
1998.    IDIVPOW2 (1005234562 / 0x00800000):  int: 119
1999.    IDIVPOW2 (1005234562 / 0x01000000):  int: 59
2000.    IDIVPOW2 (1005234562 / 0x02000000):  int: 29
2001.    IDIVPOW2 (1005234562 / 0x04000000):  int: 14
2002.    IDIVPOW2 (1005234562 / 0x08000000):  int: 7
2003.    IDIVPOW2 (1005234562 / 0x10000000):  int: 3
2004.    IDIVPOW2 (1005234562 / 0x20000000):  int: 1
2005.    IDIVPOW2 (1005234562 / 0x40000000):  int: 0
2006.    IDIVPOW2 (1005234562 / 0x80000000):  int: 0
2007.    IREMPOW2 (1005234562 % 0x00000002):  int: 0
2008.    IREMPOW2 (1005234562 % 0x00000004):  int: 2
2009.    IREMPOW2 (1005234562 % 0x00000008):  int: 2
2010.    IREMPOW2 (1005234562 % 0x00000010):  int: 2
2011.    IREMPOW2 (1005234562 % 0x00000020):  int: 2
2012.    IREMPOW2 (1005234562 % 0x00000040):  int: 2
2013.    IREMPOW2 (1005234562 % 0x00000080):  int: 2
2014.    IREMPOW2 (1005234562 % 0x00000100):  int: 130
2015.    IREMPOW2 (1005234562 % 0x00000200):  int: 386
2016.    IREMPOW2 (1005234562 % 0x00000400):  int: 386
2017.    IREMPOW2 (1005234562 % 0x00000800):  int: 386
2018.    IREMPOW2 (1005234562 % 0x00001000):  int: 2434
2019.    IREMPOW2 (1005234562 % 0x00002000):  int: 2434
2020.    IREMPOW2 (1005234562 % 0x00004000):  int: 10626
2021.    IREMPOW2 (1005234562 % 0x00008000):  int: 10626
2022.    IREMPOW2 (1005234562 % 0x00010000):  int: 43394
2023.    IREMPOW2 (1005234562 % 0x00020000):  int: 43394
2024.    IREMPOW2 (1005234562 % 0x00040000):  int: 174466
2025.    IREMPOW2 (1005234562 % 0x00080000):  int: 174466
2026.    IREMPOW2 (1005234562 % 0x00100000):  int: 698754
2027.    IREMPOW2 (1005234562 % 0x00200000):  int: 698754
2028.    IREMPOW2 (1005234562 % 0x00400000):  int: 2795906
2029.    IREMPOW2 (1005234562 % 0x00800000):  int: 6990210
2030.    IREMPOW2 (1005234562 % 0x01000000):  int: 15378818
2031.    IREMPOW2 (1005234562 % 0x02000000):  int: 32156034
2032.    IREMPOW2 (1005234562 % 0x04000000):  int: 65710466
2033.    IREMPOW2 (1005234562 % 0x08000000):  int: 65710466
2034.    IREMPOW2 (1005234562 % 0x10000000):  int: 199928194
2035.    IREMPOW2 (1005234562 % 0x20000000):  int: 468363650
2036.    IREMPOW2 (1005234562 % 0x40000000):  int: 1005234562
2037.    IREMPOW2 (1005234562 % 0x80000000):  int: 1005234562
2038.    IDIVPOW2 (-17 / 0x00000002):  int: -8
2039.    IDIVPOW2 (-17 / 0x00000004):  int: -4
2040.    IDIVPOW2 (-17 / 0x00000008):  int: -2
2041.    IDIVPOW2 (-17 / 0x00000010):  int: -1
2042.    IDIVPOW2 (-17 / 0x00000020):  int: 0
2043.    IDIVPOW2 (-17 / 0x00000040):  int: 0
2044.    IDIVPOW2 (-17 / 0x00000080):  int: 0
2045.    IDIVPOW2 (-17 / 0x00000100):  int: 0
2046.    IDIVPOW2 (-17 / 0x00000200):  int: 0
2047.    IDIVPOW2 (-17 / 0x00000400):  int: 0
2048.    IDIVPOW2 (-17 / 0x00000800):  int: 0
2049.    IDIVPOW2 (-17 / 0x00001000):  int: 0
2050.    IDIVPOW2 (-17 / 0x00002000):  int: 0
2051.    IDIVPOW2 (-17 / 0x00004000):  int: 0
2052.    IDIVPOW2 (-17 / 0x00008000):  int: 0
2053.    IDIVPOW2 (-17 / 0x00010000):  int: 0
2054.    IDIVPOW2 (-17 / 0x00020000):  int: 0
2055.    IDIVPOW2 (-17 / 0x00040000):  int: 0
2056.    IDIVPOW2 (-17 / 0x00080000):  int: 0
2057.    IDIVPOW2 (-17 / 0x00100000):  int: 0
2058.    IDIVPOW2 (-17 / 0x00200000):  int: 0
2059.    IDIVPOW2 (-17 / 0x00400000):  int: 0
2060.    IDIVPOW2 (-17 / 0x00800000):  int: 0
2061.    IDIVPOW2 (-17 / 0x01000000):  int: 0
2062.    IDIVPOW2 (-17 / 0x02000000):  int: 0
2063.    IDIVPOW2 (-17 / 0x04000000):  int: 0
2064.    IDIVPOW2 (-17 / 0x08000000):  int: 0
2065.    IDIVPOW2 (-17 / 0x10000000):  int: 0
2066.    IDIVPOW2 (-17 / 0x20000000):  int: 0
2067.    IDIVPOW2 (-17 / 0x40000000):  int: 0
2068.    IDIVPOW2 (-17 / 0x80000000):  int: 0
2069.    IREMPOW2 (-17 % 0x00000002):  int: -1
2070.    IREMPOW2 (-17 % 0x00000004):  int: -1
2071.    IREMPOW2 (-17 % 0x00000008):  int: -1
2072.    IREMPOW2 (-17 % 0x00000010):  int: -1
2073.    IREMPOW2 (-17 % 0x00000020):  int: -17
2074.    IREMPOW2 (-17 % 0x00000040):  int: -17
2075.    IREMPOW2 (-17 % 0x00000080):  int: -17
2076.    IREMPOW2 (-17 % 0x00000100):  int: -17
2077.    IREMPOW2 (-17 % 0x00000200):  int: -17
2078.    IREMPOW2 (-17 % 0x00000400):  int: -17
2079.    IREMPOW2 (-17 % 0x00000800):  int: -17
2080.    IREMPOW2 (-17 % 0x00001000):  int: -17
2081.    IREMPOW2 (-17 % 0x00002000):  int: -17
2082.    IREMPOW2 (-17 % 0x00004000):  int: -17
2083.    IREMPOW2 (-17 % 0x00008000):  int: -17
2084.    IREMPOW2 (-17 % 0x00010000):  int: -17
2085.    IREMPOW2 (-17 % 0x00020000):  int: -17
2086.    IREMPOW2 (-17 % 0x00040000):  int: -17
2087.    IREMPOW2 (-17 % 0x00080000):  int: -17
2088.    IREMPOW2 (-17 % 0x00100000):  int: -17
2089.    IREMPOW2 (-17 % 0x00200000):  int: -17
2090.    IREMPOW2 (-17 % 0x00400000):  int: -17
2091.    IREMPOW2 (-17 % 0x00800000):  int: -17
2092.    IREMPOW2 (-17 % 0x01000000):  int: -17
2093.    IREMPOW2 (-17 % 0x02000000):  int: -17
2094.    IREMPOW2 (-17 % 0x04000000):  int: -17
2095.    IREMPOW2 (-17 % 0x08000000):  int: -17
2096.    IREMPOW2 (-17 % 0x10000000):  int: -17
2097.    IREMPOW2 (-17 % 0x20000000):  int: -17
2098.    IREMPOW2 (-17 % 0x40000000):  int: -17
2099.    IREMPOW2 (-17 % 0x80000000):  int: -17
2100.    IDIVPOW2 (-12347 / 0x00000002):  int: -6173
2101.    IDIVPOW2 (-12347 / 0x00000004):  int: -3086
2102.    IDIVPOW2 (-12347 / 0x00000008):  int: -1543
2103.    IDIVPOW2 (-12347 / 0x00000010):  int: -771
2104.    IDIVPOW2 (-12347 / 0x00000020):  int: -385
2105.    IDIVPOW2 (-12347 / 0x00000040):  int: -192
2106.    IDIVPOW2 (-12347 / 0x00000080):  int: -96
2107.    IDIVPOW2 (-12347 / 0x00000100):  int: -48
2108.    IDIVPOW2 (-12347 / 0x00000200):  int: -24
2109.    IDIVPOW2 (-12347 / 0x00000400):  int: -12
2110.    IDIVPOW2 (-12347 / 0x00000800):  int: -6
2111.    IDIVPOW2 (-12347 / 0x00001000):  int: -3
2112.    IDIVPOW2 (-12347 / 0x00002000):  int: -1
2113.    IDIVPOW2 (-12347 / 0x00004000):  int: 0
2114.    IDIVPOW2 (-12347 / 0x00008000):  int: 0
2115.    IDIVPOW2 (-12347 / 0x00010000):  int: 0
2116.    IDIVPOW2 (-12347 / 0x00020000):  int: 0
2117.    IDIVPOW2 (-12347 / 0x00040000):  int: 0
2118.    IDIVPOW2 (-12347 / 0x00080000):  int: 0
2119.    IDIVPOW2 (-12347 / 0x00100000):  int: 0
2120.    IDIVPOW2 (-12347 / 0x00200000):  int: 0
2121.    IDIVPOW2 (-12347 / 0x00400000):  int: 0
2122.    IDIVPOW2 (-12347 / 0x00800000):  int: 0
2123.    IDIVPOW2 (-12347 / 0x01000000):  int: 0
2124.    IDIVPOW2 (-12347 / 0x02000000):  int: 0
2125.    IDIVPOW2 (-12347 / 0x04000000):  int: 0
2126.    IDIVPOW2 (-12347 / 0x08000000):  int: 0
2127.    IDIVPOW2 (-12347 / 0x10000000):  int: 0
2128.    IDIVPOW2 (-12347 / 0x20000000):  int: 0
2129.    IDIVPOW2 (-12347 / 0x40000000):  int: 0
2130.    IDIVPOW2 (-12347 / 0x80000000):  int: 0
2131.    IREMPOW2 (-12347 % 0x00000002):  int: -1
2132.    IREMPOW2 (-12347 % 0x00000004):  int: -3
2133.    IREMPOW2 (-12347 % 0x00000008):  int: -3
2134.    IREMPOW2 (-12347 % 0x00000010):  int: -11
2135.    IREMPOW2 (-12347 % 0x00000020):  int: -27
2136.    IREMPOW2 (-12347 % 0x00000040):  int: -59
2137.    IREMPOW2 (-12347 % 0x00000080):  int: -59
2138.    IREMPOW2 (-12347 % 0x00000100):  int: -59
2139.    IREMPOW2 (-12347 % 0x00000200):  int: -59
2140.    IREMPOW2 (-12347 % 0x00000400):  int: -59
2141.    IREMPOW2 (-12347 % 0x00000800):  int: -59
2142.    IREMPOW2 (-12347 % 0x00001000):  int: -59
2143.    IREMPOW2 (-12347 % 0x00002000):  int: -4155
2144.    IREMPOW2 (-12347 % 0x00004000):  int: -12347
2145.    IREMPOW2 (-12347 % 0x00008000):  int: -12347
2146.    IREMPOW2 (-12347 % 0x00010000):  int: -12347
2147.    IREMPOW2 (-12347 % 0x00020000):  int: -12347
2148.    IREMPOW2 (-12347 % 0x00040000):  int: -12347
2149.    IREMPOW2 (-12347 % 0x00080000):  int: -12347
2150.    IREMPOW2 (-12347 % 0x00100000):  int: -12347
2151.    IREMPOW2 (-12347 % 0x00200000):  int: -12347
2152.    IREMPOW2 (-12347 % 0x00400000):  int: -12347
2153.    IREMPOW2 (-12347 % 0x00800000):  int: -12347
2154.    IREMPOW2 (-12347 % 0x01000000):  int: -12347
2155.    IREMPOW2 (-12347 % 0x02000000):  int: -12347
2156.    IREMPOW2 (-12347 % 0x04000000):  int: -12347
2157.    IREMPOW2 (-12347 % 0x08000000):  int: -12347
2158.    IREMPOW2 (-12347 % 0x10000000):  int: -12347
2159.    IREMPOW2 (-12347 % 0x20000000):  int: -12347
2160.    IREMPOW2 (-12347 % 0x40000000):  int: -12347
2161.    IREMPOW2 (-12347 % 0x80000000):  int: -12347
2162.    IDIVPOW2 (-8893427 / 0x00000002):  int: -4446713
2163.    IDIVPOW2 (-8893427 / 0x00000004):  int: -2223356
2164.    IDIVPOW2 (-8893427 / 0x00000008):  int: -1111678
2165.    IDIVPOW2 (-8893427 / 0x00000010):  int: -555839
2166.    IDIVPOW2 (-8893427 / 0x00000020):  int: -277919
2167.    IDIVPOW2 (-8893427 / 0x00000040):  int: -138959
2168.    IDIVPOW2 (-8893427 / 0x00000080):  int: -69479
2169.    IDIVPOW2 (-8893427 / 0x00000100):  int: -34739
2170.    IDIVPOW2 (-8893427 / 0x00000200):  int: -17369
2171.    IDIVPOW2 (-8893427 / 0x00000400):  int: -8684
2172.    IDIVPOW2 (-8893427 / 0x00000800):  int: -4342
2173.    IDIVPOW2 (-8893427 / 0x00001000):  int: -2171
2174.    IDIVPOW2 (-8893427 / 0x00002000):  int: -1085
2175.    IDIVPOW2 (-8893427 / 0x00004000):  int: -542
2176.    IDIVPOW2 (-8893427 / 0x00008000):  int: -271
2177.    IDIVPOW2 (-8893427 / 0x00010000):  int: -135
2178.    IDIVPOW2 (-8893427 / 0x00020000):  int: -67
2179.    IDIVPOW2 (-8893427 / 0x00040000):  int: -33
2180.    IDIVPOW2 (-8893427 / 0x00080000):  int: -16
2181.    IDIVPOW2 (-8893427 / 0x00100000):  int: -8
2182.    IDIVPOW2 (-8893427 / 0x00200000):  int: -4
2183.    IDIVPOW2 (-8893427 / 0x00400000):  int: -2
2184.    IDIVPOW2 (-8893427 / 0x00800000):  int: -1
2185.    IDIVPOW2 (-8893427 / 0x01000000):  int: 0
2186.    IDIVPOW2 (-8893427 / 0x02000000):  int: 0
2187.    IDIVPOW2 (-8893427 / 0x04000000):  int: 0
2188.    IDIVPOW2 (-8893427 / 0x08000000):  int: 0
2189.    IDIVPOW2 (-8893427 / 0x10000000):  int: 0
2190.    IDIVPOW2 (-8893427 / 0x20000000):  int: 0
2191.    IDIVPOW2 (-8893427 / 0x40000000):  int: 0
2192.    IDIVPOW2 (-8893427 / 0x80000000):  int: 0
2193.    IREMPOW2 (-8893427 % 0x00000002):  int: -1
2194.    IREMPOW2 (-8893427 % 0x00000004):  int: -3
2195.    IREMPOW2 (-8893427 % 0x00000008):  int: -3
2196.    IREMPOW2 (-8893427 % 0x00000010):  int: -3
2197.    IREMPOW2 (-8893427 % 0x00000020):  int: -19
2198.    IREMPOW2 (-8893427 % 0x00000040):  int: -51
2199.    IREMPOW2 (-8893427 % 0x00000080):  int: -115
2200.    IREMPOW2 (-8893427 % 0x00000100):  int: -243
2201.    IREMPOW2 (-8893427 % 0x00000200):  int: -499
2202.    IREMPOW2 (-8893427 % 0x00000400):  int: -1011
2203.    IREMPOW2 (-8893427 % 0x00000800):  int: -1011
2204.    IREMPOW2 (-8893427 % 0x00001000):  int: -1011
2205.    IREMPOW2 (-8893427 % 0x00002000):  int: -5107
2206.    IREMPOW2 (-8893427 % 0x00004000):  int: -13299
2207.    IREMPOW2 (-8893427 % 0x00008000):  int: -13299
2208.    IREMPOW2 (-8893427 % 0x00010000):  int: -46067
2209.    IREMPOW2 (-8893427 % 0x00020000):  int: -111603
2210.    IREMPOW2 (-8893427 % 0x00040000):  int: -242675
2211.    IREMPOW2 (-8893427 % 0x00080000):  int: -504819
2212.    IREMPOW2 (-8893427 % 0x00100000):  int: -504819
2213.    IREMPOW2 (-8893427 % 0x00200000):  int: -504819
2214.    IREMPOW2 (-8893427 % 0x00400000):  int: -504819
2215.    IREMPOW2 (-8893427 % 0x00800000):  int: -504819
2216.    IREMPOW2 (-8893427 % 0x01000000):  int: -8893427
2217.    IREMPOW2 (-8893427 % 0x02000000):  int: -8893427
2218.    IREMPOW2 (-8893427 % 0x04000000):  int: -8893427
2219.    IREMPOW2 (-8893427 % 0x08000000):  int: -8893427
2220.    IREMPOW2 (-8893427 % 0x10000000):  int: -8893427
2221.    IREMPOW2 (-8893427 % 0x20000000):  int: -8893427
2222.    IREMPOW2 (-8893427 % 0x40000000):  int: -8893427
2223.    IREMPOW2 (-8893427 % 0x80000000):  int: -8893427
2224.    IDIVPOW2 (-1005234562 / 0x00000002):  int: -502617281
2225.    IDIVPOW2 (-1005234562 / 0x00000004):  int: -251308640
2226.    IDIVPOW2 (-1005234562 / 0x00000008):  int: -125654320
2227.    IDIVPOW2 (-1005234562 / 0x00000010):  int: -62827160
2228.    IDIVPOW2 (-1005234562 / 0x00000020):  int: -31413580
2229.    IDIVPOW2 (-1005234562 / 0x00000040):  int: -15706790
2230.    IDIVPOW2 (-1005234562 / 0x00000080):  int: -7853395
2231.    IDIVPOW2 (-1005234562 / 0x00000100):  int: -3926697
2232.    IDIVPOW2 (-1005234562 / 0x00000200):  int: -1963348
2233.    IDIVPOW2 (-1005234562 / 0x00000400):  int: -981674
2234.    IDIVPOW2 (-1005234562 / 0x00000800):  int: -490837
2235.    IDIVPOW2 (-1005234562 / 0x00001000):  int: -245418
2236.    IDIVPOW2 (-1005234562 / 0x00002000):  int: -122709
2237.    IDIVPOW2 (-1005234562 / 0x00004000):  int: -61354
2238.    IDIVPOW2 (-1005234562 / 0x00008000):  int: -30677
2239.    IDIVPOW2 (-1005234562 / 0x00010000):  int: -15338
2240.    IDIVPOW2 (-1005234562 / 0x00020000):  int: -7669
2241.    IDIVPOW2 (-1005234562 / 0x00040000):  int: -3834
2242.    IDIVPOW2 (-1005234562 / 0x00080000):  int: -1917
2243.    IDIVPOW2 (-1005234562 / 0x00100000):  int: -958
2244.    IDIVPOW2 (-1005234562 / 0x00200000):  int: -479
2245.    IDIVPOW2 (-1005234562 / 0x00400000):  int: -239
2246.    IDIVPOW2 (-1005234562 / 0x00800000):  int: -119
2247.    IDIVPOW2 (-1005234562 / 0x01000000):  int: -59
2248.    IDIVPOW2 (-1005234562 / 0x02000000):  int: -29
2249.    IDIVPOW2 (-1005234562 / 0x04000000):  int: -14
2250.    IDIVPOW2 (-1005234562 / 0x08000000):  int: -7
2251.    IDIVPOW2 (-1005234562 / 0x10000000):  int: -3
2252.    IDIVPOW2 (-1005234562 / 0x20000000):  int: -1
2253.    IDIVPOW2 (-1005234562 / 0x40000000):  int: 0
2254.    IDIVPOW2 (-1005234562 / 0x80000000):  int: 0
2255.    IREMPOW2 (-1005234562 % 0x00000002):  int: 0
2256.    IREMPOW2 (-1005234562 % 0x00000004):  int: -2
2257.    IREMPOW2 (-1005234562 % 0x00000008):  int: -2
2258.    IREMPOW2 (-1005234562 % 0x00000010):  int: -2
2259.    IREMPOW2 (-1005234562 % 0x00000020):  int: -2
2260.    IREMPOW2 (-1005234562 % 0x00000040):  int: -2
2261.    IREMPOW2 (-1005234562 % 0x00000080):  int: -2
2262.    IREMPOW2 (-1005234562 % 0x00000100):  int: -130
2263.    IREMPOW2 (-1005234562 % 0x00000200):  int: -386
2264.    IREMPOW2 (-1005234562 % 0x00000400):  int: -386
2265.    IREMPOW2 (-1005234562 % 0x00000800):  int: -386
2266.    IREMPOW2 (-1005234562 % 0x00001000):  int: -2434
2267.    IREMPOW2 (-1005234562 % 0x00002000):  int: -2434
2268.    IREMPOW2 (-1005234562 % 0x00004000):  int: -10626
2269.    IREMPOW2 (-1005234562 % 0x00008000):  int: -10626
2270.    IREMPOW2 (-1005234562 % 0x00010000):  int: -43394
2271.    IREMPOW2 (-1005234562 % 0x00020000):  int: -43394
2272.    IREMPOW2 (-1005234562 % 0x00040000):  int: -174466
2273.    IREMPOW2 (-1005234562 % 0x00080000):  int: -174466
2274.    IREMPOW2 (-1005234562 % 0x00100000):  int: -698754
2275.    IREMPOW2 (-1005234562 % 0x00200000):  int: -698754
2276.    IREMPOW2 (-1005234562 % 0x00400000):  int: -2795906
2277.    IREMPOW2 (-1005234562 % 0x00800000):  int: -6990210
2278.    IREMPOW2 (-1005234562 % 0x01000000):  int: -15378818
2279.    IREMPOW2 (-1005234562 % 0x02000000):  int: -32156034
2280.    IREMPOW2 (-1005234562 % 0x04000000):  int: -65710466
2281.    IREMPOW2 (-1005234562 % 0x08000000):  int: -65710466
2282.    IREMPOW2 (-1005234562 % 0x10000000):  int: -199928194
2283.    IREMPOW2 (-1005234562 % 0x20000000):  int: -468363650
2284.    IREMPOW2 (-1005234562 % 0x40000000):  int: -1005234562
2285.    IREMPOW2 (-1005234562 % 0x80000000):  int: -1005234562
2286.    LDIVPOW2 (17 / 0x00000002):  long: 8
2287.    LDIVPOW2 (17 / 0x00000004):  long: 4
2288.    LDIVPOW2 (17 / 0x00000008):  long: 2
2289.    LDIVPOW2 (17 / 0x00000010):  long: 1
2290.    LDIVPOW2 (17 / 0x00000020):  long: 0
2291.    LDIVPOW2 (17 / 0x00000040):  long: 0
2292.    LDIVPOW2 (17 / 0x00000080):  long: 0
2293.    LDIVPOW2 (17 / 0x00000100):  long: 0
2294.    LDIVPOW2 (17 / 0x00000200):  long: 0
2295.    LDIVPOW2 (17 / 0x00000400):  long: 0
2296.    LDIVPOW2 (17 / 0x00000800):  long: 0
2297.    LDIVPOW2 (17 / 0x00001000):  long: 0
2298.    LDIVPOW2 (17 / 0x00002000):  long: 0
2299.    LDIVPOW2 (17 / 0x00004000):  long: 0
2300.    LDIVPOW2 (17 / 0x00008000):  long: 0
2301.    LDIVPOW2 (17 / 0x00010000):  long: 0
2302.    LDIVPOW2 (17 / 0x00020000):  long: 0
2303.    LDIVPOW2 (17 / 0x00040000):  long: 0
2304.    LDIVPOW2 (17 / 0x00080000):  long: 0
2305.    LDIVPOW2 (17 / 0x00100000):  long: 0
2306.    LDIVPOW2 (17 / 0x00200000):  long: 0
2307.    LDIVPOW2 (17 / 0x00400000):  long: 0
2308.    LDIVPOW2 (17 / 0x00800000):  long: 0
2309.    LDIVPOW2 (17 / 0x01000000):  long: 0
2310.    LDIVPOW2 (17 / 0x02000000):  long: 0
2311.    LDIVPOW2 (17 / 0x04000000):  long: 0
2312.    LDIVPOW2 (17 / 0x08000000):  long: 0
2313.    LDIVPOW2 (17 / 0x10000000):  long: 0
2314.    LDIVPOW2 (17 / 0x20000000):  long: 0
2315.    LDIVPOW2 (17 / 0x40000000):  long: 0
2316.    LDIVPOW2 (17 / 0x80000000):  long: 0
2317.    LREMPOW2 (17 % 0x00000002):  long: 1
2318.    LREMPOW2 (17 % 0x00000004):  long: 1
2319.    LREMPOW2 (17 % 0x00000008):  long: 1
2320.    LREMPOW2 (17 % 0x00000010):  long: 1
2321.    LREMPOW2 (17 % 0x00000020):  long: 17
2322.    LREMPOW2 (17 % 0x00000040):  long: 17
2323.    LREMPOW2 (17 % 0x00000080):  long: 17
2324.    LREMPOW2 (17 % 0x00000100):  long: 17
2325.    LREMPOW2 (17 % 0x00000200):  long: 17
2326.    LREMPOW2 (17 % 0x00000400):  long: 17
2327.    LREMPOW2 (17 % 0x00000800):  long: 17
2328.    LREMPOW2 (17 % 0x00001000):  long: 17
2329.    LREMPOW2 (17 % 0x00002000):  long: 17
2330.    LREMPOW2 (17 % 0x00004000):  long: 17
2331.    LREMPOW2 (17 % 0x00008000):  long: 17
2332.    LREMPOW2 (17 % 0x00010000):  long: 17
2333.    LREMPOW2 (17 % 0x00020000):  long: 17
2334.    LREMPOW2 (17 % 0x00040000):  long: 17
2335.    LREMPOW2 (17 % 0x00080000):  long: 17
2336.    LREMPOW2 (17 % 0x00100000):  long: 17
2337.    LREMPOW2 (17 % 0x00200000):  long: 17
2338.    LREMPOW2 (17 % 0x00400000):  long: 17
2339.    LREMPOW2 (17 % 0x00800000):  long: 17
2340.    LREMPOW2 (17 % 0x01000000):  long: 17
2341.    LREMPOW2 (17 % 0x02000000):  long: 17
2342.    LREMPOW2 (17 % 0x04000000):  long: 17
2343.    LREMPOW2 (17 % 0x08000000):  long: 17
2344.    LREMPOW2 (17 % 0x10000000):  long: 17
2345.    LREMPOW2 (17 % 0x20000000):  long: 17
2346.    LREMPOW2 (17 % 0x40000000):  long: 17
2347.    LREMPOW2 (17 % 0x80000000):  long: 17
2348.    LDIVPOW2 (12347 / 0x00000002):  long: 6173
2349.    LDIVPOW2 (12347 / 0x00000004):  long: 3086
2350.    LDIVPOW2 (12347 / 0x00000008):  long: 1543
2351.    LDIVPOW2 (12347 / 0x00000010):  long: 771
2352.    LDIVPOW2 (12347 / 0x00000020):  long: 385
2353.    LDIVPOW2 (12347 / 0x00000040):  long: 192
2354.    LDIVPOW2 (12347 / 0x00000080):  long: 96
2355.    LDIVPOW2 (12347 / 0x00000100):  long: 48
2356.    LDIVPOW2 (12347 / 0x00000200):  long: 24
2357.    LDIVPOW2 (12347 / 0x00000400):  long: 12
2358.    LDIVPOW2 (12347 / 0x00000800):  long: 6
2359.    LDIVPOW2 (12347 / 0x00001000):  long: 3
2360.    LDIVPOW2 (12347 / 0x00002000):  long: 1
2361.    LDIVPOW2 (12347 / 0x00004000):  long: 0
2362.    LDIVPOW2 (12347 / 0x00008000):  long: 0
2363.    LDIVPOW2 (12347 / 0x00010000):  long: 0
2364.    LDIVPOW2 (12347 / 0x00020000):  long: 0
2365.    LDIVPOW2 (12347 / 0x00040000):  long: 0
2366.    LDIVPOW2 (12347 / 0x00080000):  long: 0
2367.    LDIVPOW2 (12347 / 0x00100000):  long: 0
2368.    LDIVPOW2 (12347 / 0x00200000):  long: 0
2369.    LDIVPOW2 (12347 / 0x00400000):  long: 0
2370.    LDIVPOW2 (12347 / 0x00800000):  long: 0
2371.    LDIVPOW2 (12347 / 0x01000000):  long: 0
2372.    LDIVPOW2 (12347 / 0x02000000):  long: 0
2373.    LDIVPOW2 (12347 / 0x04000000):  long: 0
2374.    LDIVPOW2 (12347 / 0x08000000):  long: 0
2375.    LDIVPOW2 (12347 / 0x10000000):  long: 0
2376.    LDIVPOW2 (12347 / 0x20000000):  long: 0
2377.    LDIVPOW2 (12347 / 0x40000000):  long: 0
2378.    LDIVPOW2 (12347 / 0x80000000):  long: 0
2379.    LREMPOW2 (12347 % 0x00000002):  long: 1
2380.    LREMPOW2 (12347 % 0x00000004):  long: 3
2381.    LREMPOW2 (12347 % 0x00000008):  long: 3
2382.    LREMPOW2 (12347 % 0x00000010):  long: 11
2383.    LREMPOW2 (12347 % 0x00000020):  long: 27
2384.    LREMPOW2 (12347 % 0x00000040):  long: 59
2385.    LREMPOW2 (12347 % 0x00000080):  long: 59
2386.    LREMPOW2 (12347 % 0x00000100):  long: 59
2387.    LREMPOW2 (12347 % 0x00000200):  long: 59
2388.    LREMPOW2 (12347 % 0x00000400):  long: 59
2389.    LREMPOW2 (12347 % 0x00000800):  long: 59
2390.    LREMPOW2 (12347 % 0x00001000):  long: 59
2391.    LREMPOW2 (12347 % 0x00002000):  long: 4155
2392.    LREMPOW2 (12347 % 0x00004000):  long: 12347
2393.    LREMPOW2 (12347 % 0x00008000):  long: 12347
2394.    LREMPOW2 (12347 % 0x00010000):  long: 12347
2395.    LREMPOW2 (12347 % 0x00020000):  long: 12347
2396.    LREMPOW2 (12347 % 0x00040000):  long: 12347
2397.    LREMPOW2 (12347 % 0x00080000):  long: 12347
2398.    LREMPOW2 (12347 % 0x00100000):  long: 12347
2399.    LREMPOW2 (12347 % 0x00200000):  long: 12347
2400.    LREMPOW2 (12347 % 0x00400000):  long: 12347
2401.    LREMPOW2 (12347 % 0x00800000):  long: 12347
2402.    LREMPOW2 (12347 % 0x01000000):  long: 12347
2403.    LREMPOW2 (12347 % 0x02000000):  long: 12347
2404.    LREMPOW2 (12347 % 0x04000000):  long: 12347
2405.    LREMPOW2 (12347 % 0x08000000):  long: 12347
2406.    LREMPOW2 (12347 % 0x10000000):  long: 12347
2407.    LREMPOW2 (12347 % 0x20000000):  long: 12347
2408.    LREMPOW2 (12347 % 0x40000000):  long: 12347
2409.    LREMPOW2 (12347 % 0x80000000):  long: 12347
2410.    LDIVPOW2 (8893427 / 0x00000002):  long: 4446713
2411.    LDIVPOW2 (8893427 / 0x00000004):  long: 2223356
2412.    LDIVPOW2 (8893427 / 0x00000008):  long: 1111678
2413.    LDIVPOW2 (8893427 / 0x00000010):  long: 555839
2414.    LDIVPOW2 (8893427 / 0x00000020):  long: 277919
2415.    LDIVPOW2 (8893427 / 0x00000040):  long: 138959
2416.    LDIVPOW2 (8893427 / 0x00000080):  long: 69479
2417.    LDIVPOW2 (8893427 / 0x00000100):  long: 34739
2418.    LDIVPOW2 (8893427 / 0x00000200):  long: 17369
2419.    LDIVPOW2 (8893427 / 0x00000400):  long: 8684
2420.    LDIVPOW2 (8893427 / 0x00000800):  long: 4342
2421.    LDIVPOW2 (8893427 / 0x00001000):  long: 2171
2422.    LDIVPOW2 (8893427 / 0x00002000):  long: 1085
2423.    LDIVPOW2 (8893427 / 0x00004000):  long: 542
2424.    LDIVPOW2 (8893427 / 0x00008000):  long: 271
2425.    LDIVPOW2 (8893427 / 0x00010000):  long: 135
2426.    LDIVPOW2 (8893427 / 0x00020000):  long: 67
2427.    LDIVPOW2 (8893427 / 0x00040000):  long: 33
2428.    LDIVPOW2 (8893427 / 0x00080000):  long: 16
2429.    LDIVPOW2 (8893427 / 0x00100000):  long: 8
2430.    LDIVPOW2 (8893427 / 0x00200000):  long: 4
2431.    LDIVPOW2 (8893427 / 0x00400000):  long: 2
2432.    LDIVPOW2 (8893427 / 0x00800000):  long: 1
2433.    LDIVPOW2 (8893427 / 0x01000000):  long: 0
2434.    LDIVPOW2 (8893427 / 0x02000000):  long: 0
2435.    LDIVPOW2 (8893427 / 0x04000000):  long: 0
2436.    LDIVPOW2 (8893427 / 0x08000000):  long: 0
2437.    LDIVPOW2 (8893427 / 0x10000000):  long: 0
2438.    LDIVPOW2 (8893427 / 0x20000000):  long: 0
2439.    LDIVPOW2 (8893427 / 0x40000000):  long: 0
2440.    LDIVPOW2 (8893427 / 0x80000000):  long: 0
2441.    LREMPOW2 (8893427 % 0x00000002):  long: 1
2442.    LREMPOW2 (8893427 % 0x00000004):  long: 3
2443.    LREMPOW2 (8893427 % 0x00000008):  long: 3
2444.    LREMPOW2 (8893427 % 0x00000010):  long: 3
2445.    LREMPOW2 (8893427 % 0x00000020):  long: 19
2446.    LREMPOW2 (8893427 % 0x00000040):  long: 51
2447.    LREMPOW2 (8893427 % 0x00000080):  long: 115
2448.    LREMPOW2 (8893427 % 0x00000100):  long: 243
2449.    LREMPOW2 (8893427 % 0x00000200):  long: 499
2450.    LREMPOW2 (8893427 % 0x00000400):  long: 1011
2451.    LREMPOW2 (8893427 % 0x00000800):  long: 1011
2452.    LREMPOW2 (8893427 % 0x00001000):  long: 1011
2453.    LREMPOW2 (8893427 % 0x00002000):  long: 5107
2454.    LREMPOW2 (8893427 % 0x00004000):  long: 13299
2455.    LREMPOW2 (8893427 % 0x00008000):  long: 13299
2456.    LREMPOW2 (8893427 % 0x00010000):  long: 46067
2457.    LREMPOW2 (8893427 % 0x00020000):  long: 111603
2458.    LREMPOW2 (8893427 % 0x00040000):  long: 242675
2459.    LREMPOW2 (8893427 % 0x00080000):  long: 504819
2460.    LREMPOW2 (8893427 % 0x00100000):  long: 504819
2461.    LREMPOW2 (8893427 % 0x00200000):  long: 504819
2462.    LREMPOW2 (8893427 % 0x00400000):  long: 504819
2463.    LREMPOW2 (8893427 % 0x00800000):  long: 504819
2464.    LREMPOW2 (8893427 % 0x01000000):  long: 8893427
2465.    LREMPOW2 (8893427 % 0x02000000):  long: 8893427
2466.    LREMPOW2 (8893427 % 0x04000000):  long: 8893427
2467.    LREMPOW2 (8893427 % 0x08000000):  long: 8893427
2468.    LREMPOW2 (8893427 % 0x10000000):  long: 8893427
2469.    LREMPOW2 (8893427 % 0x20000000):  long: 8893427
2470.    LREMPOW2 (8893427 % 0x40000000):  long: 8893427
2471.    LREMPOW2 (8893427 % 0x80000000):  long: 8893427
2472.    LDIVPOW2 (1005234562 / 0x00000002):  long: 502617281
2473.    LDIVPOW2 (1005234562 / 0x00000004):  long: 251308640
2474.    LDIVPOW2 (1005234562 / 0x00000008):  long: 125654320
2475.    LDIVPOW2 (1005234562 / 0x00000010):  long: 62827160
2476.    LDIVPOW2 (1005234562 / 0x00000020):  long: 31413580
2477.    LDIVPOW2 (1005234562 / 0x00000040):  long: 15706790
2478.    LDIVPOW2 (1005234562 / 0x00000080):  long: 7853395
2479.    LDIVPOW2 (1005234562 / 0x00000100):  long: 3926697
2480.    LDIVPOW2 (1005234562 / 0x00000200):  long: 1963348
2481.    LDIVPOW2 (1005234562 / 0x00000400):  long: 981674
2482.    LDIVPOW2 (1005234562 / 0x00000800):  long: 490837
2483.    LDIVPOW2 (1005234562 / 0x00001000):  long: 245418
2484.    LDIVPOW2 (1005234562 / 0x00002000):  long: 122709
2485.    LDIVPOW2 (1005234562 / 0x00004000):  long: 61354
2486.    LDIVPOW2 (1005234562 / 0x00008000):  long: 30677
2487.    LDIVPOW2 (1005234562 / 0x00010000):  long: 15338
2488.    LDIVPOW2 (1005234562 / 0x00020000):  long: 7669
2489.    LDIVPOW2 (1005234562 / 0x00040000):  long: 3834
2490.    LDIVPOW2 (1005234562 / 0x00080000):  long: 1917
2491.    LDIVPOW2 (1005234562 / 0x00100000):  long: 958
2492.    LDIVPOW2 (1005234562 / 0x00200000):  long: 479
2493.    LDIVPOW2 (1005234562 / 0x00400000):  long: 239
2494.    LDIVPOW2 (1005234562 / 0x00800000):  long: 119
2495.    LDIVPOW2 (1005234562 / 0x01000000):  long: 59
2496.    LDIVPOW2 (1005234562 / 0x02000000):  long: 29
2497.    LDIVPOW2 (1005234562 / 0x04000000):  long: 14
2498.    LDIVPOW2 (1005234562 / 0x08000000):  long: 7
2499.    LDIVPOW2 (1005234562 / 0x10000000):  long: 3
2500.    LDIVPOW2 (1005234562 / 0x20000000):  long: 1
2501.    LDIVPOW2 (1005234562 / 0x40000000):  long: 0
2502.    LDIVPOW2 (1005234562 / 0x80000000):  long: 0
2503.    LREMPOW2 (1005234562 % 0x00000002):  long: 0
2504.    LREMPOW2 (1005234562 % 0x00000004):  long: 2
2505.    LREMPOW2 (1005234562 % 0x00000008):  long: 2
2506.    LREMPOW2 (1005234562 % 0x00000010):  long: 2
2507.    LREMPOW2 (1005234562 % 0x00000020):  long: 2
2508.    LREMPOW2 (1005234562 % 0x00000040):  long: 2
2509.    LREMPOW2 (1005234562 % 0x00000080):  long: 2
2510.    LREMPOW2 (1005234562 % 0x00000100):  long: 130
2511.    LREMPOW2 (1005234562 % 0x00000200):  long: 386
2512.    LREMPOW2 (1005234562 % 0x00000400):  long: 386
2513.    LREMPOW2 (1005234562 % 0x00000800):  long: 386
2514.    LREMPOW2 (1005234562 % 0x00001000):  long: 2434
2515.    LREMPOW2 (1005234562 % 0x00002000):  long: 2434
2516.    LREMPOW2 (1005234562 % 0x00004000):  long: 10626
2517.    LREMPOW2 (1005234562 % 0x00008000):  long: 10626
2518.    LREMPOW2 (1005234562 % 0x00010000):  long: 43394
2519.    LREMPOW2 (1005234562 % 0x00020000):  long: 43394
2520.    LREMPOW2 (1005234562 % 0x00040000):  long: 174466
2521.    LREMPOW2 (1005234562 % 0x00080000):  long: 174466
2522.    LREMPOW2 (1005234562 % 0x00100000):  long: 698754
2523.    LREMPOW2 (1005234562 % 0x00200000):  long: 698754
2524.    LREMPOW2 (1005234562 % 0x00400000):  long: 2795906
2525.    LREMPOW2 (1005234562 % 0x00800000):  long: 6990210
2526.    LREMPOW2 (1005234562 % 0x01000000):  long: 15378818
2527.    LREMPOW2 (1005234562 % 0x02000000):  long: 32156034
2528.    LREMPOW2 (1005234562 % 0x04000000):  long: 65710466
2529.    LREMPOW2 (1005234562 % 0x08000000):  long: 65710466
2530.    LREMPOW2 (1005234562 % 0x10000000):  long: 199928194
2531.    LREMPOW2 (1005234562 % 0x20000000):  long: 468363650
2532.    LREMPOW2 (1005234562 % 0x40000000):  long: 1005234562
2533.    LREMPOW2 (1005234562 % 0x80000000):  long: 1005234562
2534.    LDIVPOW2 (12135005234562 / 0x00000002):  long: 6067502617281
2535.    LDIVPOW2 (12135005234562 / 0x00000004):  long: 3033751308640
2536.    LDIVPOW2 (12135005234562 / 0x00000008):  long: 1516875654320
2537.    LDIVPOW2 (12135005234562 / 0x00000010):  long: 758437827160
2538.    LDIVPOW2 (12135005234562 / 0x00000020):  long: 379218913580
2539.    LDIVPOW2 (12135005234562 / 0x00000040):  long: 189609456790
2540.    LDIVPOW2 (12135005234562 / 0x00000080):  long: 94804728395
2541.    LDIVPOW2 (12135005234562 / 0x00000100):  long: 47402364197
2542.    LDIVPOW2 (12135005234562 / 0x00000200):  long: 23701182098
2543.    LDIVPOW2 (12135005234562 / 0x00000400):  long: 11850591049
2544.    LDIVPOW2 (12135005234562 / 0x00000800):  long: 5925295524
2545.    LDIVPOW2 (12135005234562 / 0x00001000):  long: 2962647762
2546.    LDIVPOW2 (12135005234562 / 0x00002000):  long: 1481323881
2547.    LDIVPOW2 (12135005234562 / 0x00004000):  long: 740661940
2548.    LDIVPOW2 (12135005234562 / 0x00008000):  long: 370330970
2549.    LDIVPOW2 (12135005234562 / 0x00010000):  long: 185165485
2550.    LDIVPOW2 (12135005234562 / 0x00020000):  long: 92582742
2551.    LDIVPOW2 (12135005234562 / 0x00040000):  long: 46291371
2552.    LDIVPOW2 (12135005234562 / 0x00080000):  long: 23145685
2553.    LDIVPOW2 (12135005234562 / 0x00100000):  long: 11572842
2554.    LDIVPOW2 (12135005234562 / 0x00200000):  long: 5786421
2555.    LDIVPOW2 (12135005234562 / 0x00400000):  long: 2893210
2556.    LDIVPOW2 (12135005234562 / 0x00800000):  long: 1446605
2557.    LDIVPOW2 (12135005234562 / 0x01000000):  long: 723302
2558.    LDIVPOW2 (12135005234562 / 0x02000000):  long: 361651
2559.    LDIVPOW2 (12135005234562 / 0x04000000):  long: 180825
2560.    LDIVPOW2 (12135005234562 / 0x08000000):  long: 90412
2561.    LDIVPOW2 (12135005234562 / 0x10000000):  long: 45206
2562.    LDIVPOW2 (12135005234562 / 0x20000000):  long: 22603
2563.    LDIVPOW2 (12135005234562 / 0x40000000):  long: 11301
2564.    LDIVPOW2 (12135005234562 / 0x80000000):  long: -5650
2565.    LREMPOW2 (12135005234562 % 0x00000002):  long: 0
2566.    LREMPOW2 (12135005234562 % 0x00000004):  long: 2
2567.    LREMPOW2 (12135005234562 % 0x00000008):  long: 2
2568.    LREMPOW2 (12135005234562 % 0x00000010):  long: 2
2569.    LREMPOW2 (12135005234562 % 0x00000020):  long: 2
2570.    LREMPOW2 (12135005234562 % 0x00000040):  long: 2
2571.    LREMPOW2 (12135005234562 % 0x00000080):  long: 2
2572.    LREMPOW2 (12135005234562 % 0x00000100):  long: 130
2573.    LREMPOW2 (12135005234562 % 0x00000200):  long: 386
2574.    LREMPOW2 (12135005234562 % 0x00000400):  long: 386
2575.    LREMPOW2 (12135005234562 % 0x00000800):  long: 1410
2576.    LREMPOW2 (12135005234562 % 0x00001000):  long: 1410
2577.    LREMPOW2 (12135005234562 % 0x00002000):  long: 1410
2578.    LREMPOW2 (12135005234562 % 0x00004000):  long: 9602
2579.    LREMPOW2 (12135005234562 % 0x00008000):  long: 9602
2580.    LREMPOW2 (12135005234562 % 0x00010000):  long: 9602
2581.    LREMPOW2 (12135005234562 % 0x00020000):  long: 75138
2582.    LREMPOW2 (12135005234562 % 0x00040000):  long: 75138
2583.    LREMPOW2 (12135005234562 % 0x00080000):  long: 337282
2584.    LREMPOW2 (12135005234562 % 0x00100000):  long: 861570
2585.    LREMPOW2 (12135005234562 % 0x00200000):  long: 861570
2586.    LREMPOW2 (12135005234562 % 0x00400000):  long: 2958722
2587.    LREMPOW2 (12135005234562 % 0x00800000):  long: 2958722
2588.    LREMPOW2 (12135005234562 % 0x01000000):  long: 11347330
2589.    LREMPOW2 (12135005234562 % 0x02000000):  long: 11347330
2590.    LREMPOW2 (12135005234562 % 0x04000000):  long: 44901762
2591.    LREMPOW2 (12135005234562 % 0x08000000):  long: 112010626
2592.    LREMPOW2 (12135005234562 % 0x10000000):  long: 112010626
2593.    LREMPOW2 (12135005234562 % 0x20000000):  long: 112010626
2594.    LREMPOW2 (12135005234562 % 0x40000000):  long: 648881538
2595.    LREMPOW2 (12135005234562 % 0x80000000):  long: 1722623362
2596.    LDIVPOW2 (2343552355623464626 / 0x00000002):  long: 1171776177811732313
2597.    LDIVPOW2 (2343552355623464626 / 0x00000004):  long: 585888088905866156
2598.    LDIVPOW2 (2343552355623464626 / 0x00000008):  long: 292944044452933078
2599.    LDIVPOW2 (2343552355623464626 / 0x00000010):  long: 146472022226466539
2600.    LDIVPOW2 (2343552355623464626 / 0x00000020):  long: 73236011113233269
2601.    LDIVPOW2 (2343552355623464626 / 0x00000040):  long: 36618005556616634
2602.    LDIVPOW2 (2343552355623464626 / 0x00000080):  long: 18309002778308317
2603.    LDIVPOW2 (2343552355623464626 / 0x00000100):  long: 9154501389154158
2604.    LDIVPOW2 (2343552355623464626 / 0x00000200):  long: 4577250694577079
2605.    LDIVPOW2 (2343552355623464626 / 0x00000400):  long: 2288625347288539
2606.    LDIVPOW2 (2343552355623464626 / 0x00000800):  long: 1144312673644269
2607.    LDIVPOW2 (2343552355623464626 / 0x00001000):  long: 572156336822134
2608.    LDIVPOW2 (2343552355623464626 / 0x00002000):  long: 286078168411067
2609.    LDIVPOW2 (2343552355623464626 / 0x00004000):  long: 143039084205533
2610.    LDIVPOW2 (2343552355623464626 / 0x00008000):  long: 71519542102766
2611.    LDIVPOW2 (2343552355623464626 / 0x00010000):  long: 35759771051383
2612.    LDIVPOW2 (2343552355623464626 / 0x00020000):  long: 17879885525691
2613.    LDIVPOW2 (2343552355623464626 / 0x00040000):  long: 8939942762845
2614.    LDIVPOW2 (2343552355623464626 / 0x00080000):  long: 4469971381422
2615.    LDIVPOW2 (2343552355623464626 / 0x00100000):  long: 2234985690711
2616.    LDIVPOW2 (2343552355623464626 / 0x00200000):  long: 1117492845355
2617.    LDIVPOW2 (2343552355623464626 / 0x00400000):  long: 558746422677
2618.    LDIVPOW2 (2343552355623464626 / 0x00800000):  long: 279373211338
2619.    LDIVPOW2 (2343552355623464626 / 0x01000000):  long: 139686605669
2620.    LDIVPOW2 (2343552355623464626 / 0x02000000):  long: 69843302834
2621.    LDIVPOW2 (2343552355623464626 / 0x04000000):  long: 34921651417
2622.    LDIVPOW2 (2343552355623464626 / 0x08000000):  long: 17460825708
2623.    LDIVPOW2 (2343552355623464626 / 0x10000000):  long: 8730412854
2624.    LDIVPOW2 (2343552355623464626 / 0x20000000):  long: 4365206427
2625.    LDIVPOW2 (2343552355623464626 / 0x40000000):  long: 2182603213
2626.    LDIVPOW2 (2343552355623464626 / 0x80000000):  long: -1091301606
2627.    LREMPOW2 (2343552355623464626 % 0x00000002):  long: 0
2628.    LREMPOW2 (2343552355623464626 % 0x00000004):  long: 2
2629.    LREMPOW2 (2343552355623464626 % 0x00000008):  long: 2
2630.    LREMPOW2 (2343552355623464626 % 0x00000010):  long: 2
2631.    LREMPOW2 (2343552355623464626 % 0x00000020):  long: 18
2632.    LREMPOW2 (2343552355623464626 % 0x00000040):  long: 50
2633.    LREMPOW2 (2343552355623464626 % 0x00000080):  long: 50
2634.    LREMPOW2 (2343552355623464626 % 0x00000100):  long: 178
2635.    LREMPOW2 (2343552355623464626 % 0x00000200):  long: 178
2636.    LREMPOW2 (2343552355623464626 % 0x00000400):  long: 690
2637.    LREMPOW2 (2343552355623464626 % 0x00000800):  long: 1714
2638.    LREMPOW2 (2343552355623464626 % 0x00001000):  long: 3762
2639.    LREMPOW2 (2343552355623464626 % 0x00002000):  long: 3762
2640.    LREMPOW2 (2343552355623464626 % 0x00004000):  long: 11954
2641.    LREMPOW2 (2343552355623464626 % 0x00008000):  long: 28338
2642.    LREMPOW2 (2343552355623464626 % 0x00010000):  long: 28338
2643.    LREMPOW2 (2343552355623464626 % 0x00020000):  long: 93874
2644.    LREMPOW2 (2343552355623464626 % 0x00040000):  long: 224946
2645.    LREMPOW2 (2343552355623464626 % 0x00080000):  long: 487090
2646.    LREMPOW2 (2343552355623464626 % 0x00100000):  long: 487090
2647.    LREMPOW2 (2343552355623464626 % 0x00200000):  long: 1535666
2648.    LREMPOW2 (2343552355623464626 % 0x00400000):  long: 3632818
2649.    LREMPOW2 (2343552355623464626 % 0x00800000):  long: 7827122
2650.    LREMPOW2 (2343552355623464626 % 0x01000000):  long: 7827122
2651.    LREMPOW2 (2343552355623464626 % 0x02000000):  long: 24604338
2652.    LREMPOW2 (2343552355623464626 % 0x04000000):  long: 24604338
2653.    LREMPOW2 (2343552355623464626 % 0x08000000):  long: 91713202
2654.    LREMPOW2 (2343552355623464626 % 0x10000000):  long: 91713202
2655.    LREMPOW2 (2343552355623464626 % 0x20000000):  long: 91713202
2656.    LREMPOW2 (2343552355623464626 % 0x40000000):  long: 628584114
2657.    LREMPOW2 (2343552355623464626 % 0x80000000):  long: 1702325938
2658.    LDIVPOW2 (-17 / 0x00000002):  long: -8
2659.    LDIVPOW2 (-17 / 0x00000004):  long: -4
2660.    LDIVPOW2 (-17 / 0x00000008):  long: -2
2661.    LDIVPOW2 (-17 / 0x00000010):  long: -1
2662.    LDIVPOW2 (-17 / 0x00000020):  long: 0
2663.    LDIVPOW2 (-17 / 0x00000040):  long: 0
2664.    LDIVPOW2 (-17 / 0x00000080):  long: 0
2665.    LDIVPOW2 (-17 / 0x00000100):  long: 0
2666.    LDIVPOW2 (-17 / 0x00000200):  long: 0
2667.    LDIVPOW2 (-17 / 0x00000400):  long: 0
2668.    LDIVPOW2 (-17 / 0x00000800):  long: 0
2669.    LDIVPOW2 (-17 / 0x00001000):  long: 0
2670.    LDIVPOW2 (-17 / 0x00002000):  long: 0
2671.    LDIVPOW2 (-17 / 0x00004000):  long: 0
2672.    LDIVPOW2 (-17 / 0x00008000):  long: 0
2673.    LDIVPOW2 (-17 / 0x00010000):  long: 0
2674.    LDIVPOW2 (-17 / 0x00020000):  long: 0
2675.    LDIVPOW2 (-17 / 0x00040000):  long: 0
2676.    LDIVPOW2 (-17 / 0x00080000):  long: 0
2677.    LDIVPOW2 (-17 / 0x00100000):  long: 0
2678.    LDIVPOW2 (-17 / 0x00200000):  long: 0
2679.    LDIVPOW2 (-17 / 0x00400000):  long: 0
2680.    LDIVPOW2 (-17 / 0x00800000):  long: 0
2681.    LDIVPOW2 (-17 / 0x01000000):  long: 0
2682.    LDIVPOW2 (-17 / 0x02000000):  long: 0
2683.    LDIVPOW2 (-17 / 0x04000000):  long: 0
2684.    LDIVPOW2 (-17 / 0x08000000):  long: 0
2685.    LDIVPOW2 (-17 / 0x10000000):  long: 0
2686.    LDIVPOW2 (-17 / 0x20000000):  long: 0
2687.    LDIVPOW2 (-17 / 0x40000000):  long: 0
2688.    LDIVPOW2 (-17 / 0x80000000):  long: 0
2689.    LREMPOW2 (-17 % 0x00000002):  long: -1
2690.    LREMPOW2 (-17 % 0x00000004):  long: -1
2691.    LREMPOW2 (-17 % 0x00000008):  long: -1
2692.    LREMPOW2 (-17 % 0x00000010):  long: -1
2693.    LREMPOW2 (-17 % 0x00000020):  long: -17
2694.    LREMPOW2 (-17 % 0x00000040):  long: -17
2695.    LREMPOW2 (-17 % 0x00000080):  long: -17
2696.    LREMPOW2 (-17 % 0x00000100):  long: -17
2697.    LREMPOW2 (-17 % 0x00000200):  long: -17
2698.    LREMPOW2 (-17 % 0x00000400):  long: -17
2699.    LREMPOW2 (-17 % 0x00000800):  long: -17
2700.    LREMPOW2 (-17 % 0x00001000):  long: -17
2701.    LREMPOW2 (-17 % 0x00002000):  long: -17
2702.    LREMPOW2 (-17 % 0x00004000):  long: -17
2703.    LREMPOW2 (-17 % 0x00008000):  long: -17
2704.    LREMPOW2 (-17 % 0x00010000):  long: -17
2705.    LREMPOW2 (-17 % 0x00020000):  long: -17
2706.    LREMPOW2 (-17 % 0x00040000):  long: -17
2707.    LREMPOW2 (-17 % 0x00080000):  long: -17
2708.    LREMPOW2 (-17 % 0x00100000):  long: -17
2709.    LREMPOW2 (-17 % 0x00200000):  long: -17
2710.    LREMPOW2 (-17 % 0x00400000):  long: -17
2711.    LREMPOW2 (-17 % 0x00800000):  long: -17
2712.    LREMPOW2 (-17 % 0x01000000):  long: -17
2713.    LREMPOW2 (-17 % 0x02000000):  long: -17
2714.    LREMPOW2 (-17 % 0x04000000):  long: -17
2715.    LREMPOW2 (-17 % 0x08000000):  long: -17
2716.    LREMPOW2 (-17 % 0x10000000):  long: -17
2717.    LREMPOW2 (-17 % 0x20000000):  long: -17
2718.    LREMPOW2 (-17 % 0x40000000):  long: -17
2719.    LREMPOW2 (-17 % 0x80000000):  long: -17
2720.    LDIVPOW2 (-12347 / 0x00000002):  long: -6173
2721.    LDIVPOW2 (-12347 / 0x00000004):  long: -3086
2722.    LDIVPOW2 (-12347 / 0x00000008):  long: -1543
2723.    LDIVPOW2 (-12347 / 0x00000010):  long: -771
2724.    LDIVPOW2 (-12347 / 0x00000020):  long: -385
2725.    LDIVPOW2 (-12347 / 0x00000040):  long: -192
2726.    LDIVPOW2 (-12347 / 0x00000080):  long: -96
2727.    LDIVPOW2 (-12347 / 0x00000100):  long: -48
2728.    LDIVPOW2 (-12347 / 0x00000200):  long: -24
2729.    LDIVPOW2 (-12347 / 0x00000400):  long: -12
2730.    LDIVPOW2 (-12347 / 0x00000800):  long: -6
2731.    LDIVPOW2 (-12347 / 0x00001000):  long: -3
2732.    LDIVPOW2 (-12347 / 0x00002000):  long: -1
2733.    LDIVPOW2 (-12347 / 0x00004000):  long: 0
2734.    LDIVPOW2 (-12347 / 0x00008000):  long: 0
2735.    LDIVPOW2 (-12347 / 0x00010000):  long: 0
2736.    LDIVPOW2 (-12347 / 0x00020000):  long: 0
2737.    LDIVPOW2 (-12347 / 0x00040000):  long: 0
2738.    LDIVPOW2 (-12347 / 0x00080000):  long: 0
2739.    LDIVPOW2 (-12347 / 0x00100000):  long: 0
2740.    LDIVPOW2 (-12347 / 0x00200000):  long: 0
2741.    LDIVPOW2 (-12347 / 0x00400000):  long: 0
2742.    LDIVPOW2 (-12347 / 0x00800000):  long: 0
2743.    LDIVPOW2 (-12347 / 0x01000000):  long: 0
2744.    LDIVPOW2 (-12347 / 0x02000000):  long: 0
2745.    LDIVPOW2 (-12347 / 0x04000000):  long: 0
2746.    LDIVPOW2 (-12347 / 0x08000000):  long: 0
2747.    LDIVPOW2 (-12347 / 0x10000000):  long: 0
2748.    LDIVPOW2 (-12347 / 0x20000000):  long: 0
2749.    LDIVPOW2 (-12347 / 0x40000000):  long: 0
2750.    LDIVPOW2 (-12347 / 0x80000000):  long: 0
2751.    LREMPOW2 (-12347 % 0x00000002):  long: -1
2752.    LREMPOW2 (-12347 % 0x00000004):  long: -3
2753.    LREMPOW2 (-12347 % 0x00000008):  long: -3
2754.    LREMPOW2 (-12347 % 0x00000010):  long: -11
2755.    LREMPOW2 (-12347 % 0x00000020):  long: -27
2756.    LREMPOW2 (-12347 % 0x00000040):  long: -59
2757.    LREMPOW2 (-12347 % 0x00000080):  long: -59
2758.    LREMPOW2 (-12347 % 0x00000100):  long: -59
2759.    LREMPOW2 (-12347 % 0x00000200):  long: -59
2760.    LREMPOW2 (-12347 % 0x00000400):  long: -59
2761.    LREMPOW2 (-12347 % 0x00000800):  long: -59
2762.    LREMPOW2 (-12347 % 0x00001000):  long: -59
2763.    LREMPOW2 (-12347 % 0x00002000):  long: -4155
2764.    LREMPOW2 (-12347 % 0x00004000):  long: -12347
2765.    LREMPOW2 (-12347 % 0x00008000):  long: -12347
2766.    LREMPOW2 (-12347 % 0x00010000):  long: -12347
2767.    LREMPOW2 (-12347 % 0x00020000):  long: -12347
2768.    LREMPOW2 (-12347 % 0x00040000):  long: -12347
2769.    LREMPOW2 (-12347 % 0x00080000):  long: -12347
2770.    LREMPOW2 (-12347 % 0x00100000):  long: -12347
2771.    LREMPOW2 (-12347 % 0x00200000):  long: -12347
2772.    LREMPOW2 (-12347 % 0x00400000):  long: -12347
2773.    LREMPOW2 (-12347 % 0x00800000):  long: -12347
2774.    LREMPOW2 (-12347 % 0x01000000):  long: -12347
2775.    LREMPOW2 (-12347 % 0x02000000):  long: -12347
2776.    LREMPOW2 (-12347 % 0x04000000):  long: -12347
2777.    LREMPOW2 (-12347 % 0x08000000):  long: -12347
2778.    LREMPOW2 (-12347 % 0x10000000):  long: -12347
2779.    LREMPOW2 (-12347 % 0x20000000):  long: -12347
2780.    LREMPOW2 (-12347 % 0x40000000):  long: -12347
2781.    LREMPOW2 (-12347 % 0x80000000):  long: -12347
2782.    LDIVPOW2 (-8893427 / 0x00000002):  long: -4446713
2783.    LDIVPOW2 (-8893427 / 0x00000004):  long: -2223356
2784.    LDIVPOW2 (-8893427 / 0x00000008):  long: -1111678
2785.    LDIVPOW2 (-8893427 / 0x00000010):  long: -555839
2786.    LDIVPOW2 (-8893427 / 0x00000020):  long: -277919
2787.    LDIVPOW2 (-8893427 / 0x00000040):  long: -138959
2788.    LDIVPOW2 (-8893427 / 0x00000080):  long: -69479
2789.    LDIVPOW2 (-8893427 / 0x00000100):  long: -34739
2790.    LDIVPOW2 (-8893427 / 0x00000200):  long: -17369
2791.    LDIVPOW2 (-8893427 / 0x00000400):  long: -8684
2792.    LDIVPOW2 (-8893427 / 0x00000800):  long: -4342
2793.    LDIVPOW2 (-8893427 / 0x00001000):  long: -2171
2794.    LDIVPOW2 (-8893427 / 0x00002000):  long: -1085
2795.    LDIVPOW2 (-8893427 / 0x00004000):  long: -542
2796.    LDIVPOW2 (-8893427 / 0x00008000):  long: -271
2797.    LDIVPOW2 (-8893427 / 0x00010000):  long: -135
2798.    LDIVPOW2 (-8893427 / 0x00020000):  long: -67
2799.    LDIVPOW2 (-8893427 / 0x00040000):  long: -33
2800.    LDIVPOW2 (-8893427 / 0x00080000):  long: -16
2801.    LDIVPOW2 (-8893427 / 0x00100000):  long: -8
2802.    LDIVPOW2 (-8893427 / 0x00200000):  long: -4
2803.    LDIVPOW2 (-8893427 / 0x00400000):  long: -2
2804.    LDIVPOW2 (-8893427 / 0x00800000):  long: -1
2805.    LDIVPOW2 (-8893427 / 0x01000000):  long: 0
2806.    LDIVPOW2 (-8893427 / 0x02000000):  long: 0
2807.    LDIVPOW2 (-8893427 / 0x04000000):  long: 0
2808.    LDIVPOW2 (-8893427 / 0x08000000):  long: 0
2809.    LDIVPOW2 (-8893427 / 0x10000000):  long: 0
2810.    LDIVPOW2 (-8893427 / 0x20000000):  long: 0
2811.    LDIVPOW2 (-8893427 / 0x40000000):  long: 0
2812.    LDIVPOW2 (-8893427 / 0x80000000):  long: 0
2813.    LREMPOW2 (-8893427 % 0x00000002):  long: -1
2814.    LREMPOW2 (-8893427 % 0x00000004):  long: -3
2815.    LREMPOW2 (-8893427 % 0x00000008):  long: -3
2816.    LREMPOW2 (-8893427 % 0x00000010):  long: -3
2817.    LREMPOW2 (-8893427 % 0x00000020):  long: -19
2818.    LREMPOW2 (-8893427 % 0x00000040):  long: -51
2819.    LREMPOW2 (-8893427 % 0x00000080):  long: -115
2820.    LREMPOW2 (-8893427 % 0x00000100):  long: -243
2821.    LREMPOW2 (-8893427 % 0x00000200):  long: -499
2822.    LREMPOW2 (-8893427 % 0x00000400):  long: -1011
2823.    LREMPOW2 (-8893427 % 0x00000800):  long: -1011
2824.    LREMPOW2 (-8893427 % 0x00001000):  long: -1011
2825.    LREMPOW2 (-8893427 % 0x00002000):  long: -5107
2826.    LREMPOW2 (-8893427 % 0x00004000):  long: -13299
2827.    LREMPOW2 (-8893427 % 0x00008000):  long: -13299
2828.    LREMPOW2 (-8893427 % 0x00010000):  long: -46067
2829.    LREMPOW2 (-8893427 % 0x00020000):  long: -111603
2830.    LREMPOW2 (-8893427 % 0x00040000):  long: -242675
2831.    LREMPOW2 (-8893427 % 0x00080000):  long: -504819
2832.    LREMPOW2 (-8893427 % 0x00100000):  long: -504819
2833.    LREMPOW2 (-8893427 % 0x00200000):  long: -504819
2834.    LREMPOW2 (-8893427 % 0x00400000):  long: -504819
2835.    LREMPOW2 (-8893427 % 0x00800000):  long: -504819
2836.    LREMPOW2 (-8893427 % 0x01000000):  long: -8893427
2837.    LREMPOW2 (-8893427 % 0x02000000):  long: -8893427
2838.    LREMPOW2 (-8893427 % 0x04000000):  long: -8893427
2839.    LREMPOW2 (-8893427 % 0x08000000):  long: -8893427
2840.    LREMPOW2 (-8893427 % 0x10000000):  long: -8893427
2841.    LREMPOW2 (-8893427 % 0x20000000):  long: -8893427
2842.    LREMPOW2 (-8893427 % 0x40000000):  long: -8893427
2843.    LREMPOW2 (-8893427 % 0x80000000):  long: -8893427
2844.    LDIVPOW2 (-1005234562 / 0x00000002):  long: -502617281
2845.    LDIVPOW2 (-1005234562 / 0x00000004):  long: -251308640
2846.    LDIVPOW2 (-1005234562 / 0x00000008):  long: -125654320
2847.    LDIVPOW2 (-1005234562 / 0x00000010):  long: -62827160
2848.    LDIVPOW2 (-1005234562 / 0x00000020):  long: -31413580
2849.    LDIVPOW2 (-1005234562 / 0x00000040):  long: -15706790
2850.    LDIVPOW2 (-1005234562 / 0x00000080):  long: -7853395
2851.    LDIVPOW2 (-1005234562 / 0x00000100):  long: -3926697
2852.    LDIVPOW2 (-1005234562 / 0x00000200):  long: -1963348
2853.    LDIVPOW2 (-1005234562 / 0x00000400):  long: -981674
2854.    LDIVPOW2 (-1005234562 / 0x00000800):  long: -490837
2855.    LDIVPOW2 (-1005234562 / 0x00001000):  long: -245418
2856.    LDIVPOW2 (-1005234562 / 0x00002000):  long: -122709
2857.    LDIVPOW2 (-1005234562 / 0x00004000):  long: -61354
2858.    LDIVPOW2 (-1005234562 / 0x00008000):  long: -30677
2859.    LDIVPOW2 (-1005234562 / 0x00010000):  long: -15338
2860.    LDIVPOW2 (-1005234562 / 0x00020000):  long: -7669
2861.    LDIVPOW2 (-1005234562 / 0x00040000):  long: -3834
2862.    LDIVPOW2 (-1005234562 / 0x00080000):  long: -1917
2863.    LDIVPOW2 (-1005234562 / 0x00100000):  long: -958
2864.    LDIVPOW2 (-1005234562 / 0x00200000):  long: -479
2865.    LDIVPOW2 (-1005234562 / 0x00400000):  long: -239
2866.    LDIVPOW2 (-1005234562 / 0x00800000):  long: -119
2867.    LDIVPOW2 (-1005234562 / 0x01000000):  long: -59
2868.    LDIVPOW2 (-1005234562 / 0x02000000):  long: -29
2869.    LDIVPOW2 (-1005234562 / 0x04000000):  long: -14
2870.    LDIVPOW2 (-1005234562 / 0x08000000):  long: -7
2871.    LDIVPOW2 (-1005234562 / 0x10000000):  long: -3
2872.    LDIVPOW2 (-1005234562 / 0x20000000):  long: -1
2873.    LDIVPOW2 (-1005234562 / 0x40000000):  long: 0
2874.    LDIVPOW2 (-1005234562 / 0x80000000):  long: 0
2875.    LREMPOW2 (-1005234562 % 0x00000002):  long: 0
2876.    LREMPOW2 (-1005234562 % 0x00000004):  long: -2
2877.    LREMPOW2 (-1005234562 % 0x00000008):  long: -2
2878.    LREMPOW2 (-1005234562 % 0x00000010):  long: -2
2879.    LREMPOW2 (-1005234562 % 0x00000020):  long: -2
2880.    LREMPOW2 (-1005234562 % 0x00000040):  long: -2
2881.    LREMPOW2 (-1005234562 % 0x00000080):  long: -2
2882.    LREMPOW2 (-1005234562 % 0x00000100):  long: -130
2883.    LREMPOW2 (-1005234562 % 0x00000200):  long: -386
2884.    LREMPOW2 (-1005234562 % 0x00000400):  long: -386
2885.    LREMPOW2 (-1005234562 % 0x00000800):  long: -386
2886.    LREMPOW2 (-1005234562 % 0x00001000):  long: -2434
2887.    LREMPOW2 (-1005234562 % 0x00002000):  long: -2434
2888.    LREMPOW2 (-1005234562 % 0x00004000):  long: -10626
2889.    LREMPOW2 (-1005234562 % 0x00008000):  long: -10626
2890.    LREMPOW2 (-1005234562 % 0x00010000):  long: -43394
2891.    LREMPOW2 (-1005234562 % 0x00020000):  long: -43394
2892.    LREMPOW2 (-1005234562 % 0x00040000):  long: -174466
2893.    LREMPOW2 (-1005234562 % 0x00080000):  long: -174466
2894.    LREMPOW2 (-1005234562 % 0x00100000):  long: -698754
2895.    LREMPOW2 (-1005234562 % 0x00200000):  long: -698754
2896.    LREMPOW2 (-1005234562 % 0x00400000):  long: -2795906
2897.    LREMPOW2 (-1005234562 % 0x00800000):  long: -6990210
2898.    LREMPOW2 (-1005234562 % 0x01000000):  long: -15378818
2899.    LREMPOW2 (-1005234562 % 0x02000000):  long: -32156034
2900.    LREMPOW2 (-1005234562 % 0x04000000):  long: -65710466
2901.    LREMPOW2 (-1005234562 % 0x08000000):  long: -65710466
2902.    LREMPOW2 (-1005234562 % 0x10000000):  long: -199928194
2903.    LREMPOW2 (-1005234562 % 0x20000000):  long: -468363650
2904.    LREMPOW2 (-1005234562 % 0x40000000):  long: -1005234562
2905.    LREMPOW2 (-1005234562 % 0x80000000):  long: -1005234562
2906.    LDIVPOW2 (-12135005234562 / 0x00000002):  long: -6067502617281
2907.    LDIVPOW2 (-12135005234562 / 0x00000004):  long: -3033751308640
2908.    LDIVPOW2 (-12135005234562 / 0x00000008):  long: -1516875654320
2909.    LDIVPOW2 (-12135005234562 / 0x00000010):  long: -758437827160
2910.    LDIVPOW2 (-12135005234562 / 0x00000020):  long: -379218913580
2911.    LDIVPOW2 (-12135005234562 / 0x00000040):  long: -189609456790
2912.    LDIVPOW2 (-12135005234562 / 0x00000080):  long: -94804728395
2913.    LDIVPOW2 (-12135005234562 / 0x00000100):  long: -47402364197
2914.    LDIVPOW2 (-12135005234562 / 0x00000200):  long: -23701182098
2915.    LDIVPOW2 (-12135005234562 / 0x00000400):  long: -11850591049
2916.    LDIVPOW2 (-12135005234562 / 0x00000800):  long: -5925295524
2917.    LDIVPOW2 (-12135005234562 / 0x00001000):  long: -2962647762
2918.    LDIVPOW2 (-12135005234562 / 0x00002000):  long: -1481323881
2919.    LDIVPOW2 (-12135005234562 / 0x00004000):  long: -740661940
2920.    LDIVPOW2 (-12135005234562 / 0x00008000):  long: -370330970
2921.    LDIVPOW2 (-12135005234562 / 0x00010000):  long: -185165485
2922.    LDIVPOW2 (-12135005234562 / 0x00020000):  long: -92582742
2923.    LDIVPOW2 (-12135005234562 / 0x00040000):  long: -46291371
2924.    LDIVPOW2 (-12135005234562 / 0x00080000):  long: -23145685
2925.    LDIVPOW2 (-12135005234562 / 0x00100000):  long: -11572842
2926.    LDIVPOW2 (-12135005234562 / 0x00200000):  long: -5786421
2927.    LDIVPOW2 (-12135005234562 / 0x00400000):  long: -2893210
2928.    LDIVPOW2 (-12135005234562 / 0x00800000):  long: -1446605
2929.    LDIVPOW2 (-12135005234562 / 0x01000000):  long: -723302
2930.    LDIVPOW2 (-12135005234562 / 0x02000000):  long: -361651
2931.    LDIVPOW2 (-12135005234562 / 0x04000000):  long: -180825
2932.    LDIVPOW2 (-12135005234562 / 0x08000000):  long: -90412
2933.    LDIVPOW2 (-12135005234562 / 0x10000000):  long: -45206
2934.    LDIVPOW2 (-12135005234562 / 0x20000000):  long: -22603
2935.    LDIVPOW2 (-12135005234562 / 0x40000000):  long: -11301
2936.    LDIVPOW2 (-12135005234562 / 0x80000000):  long: 5650
2937.    LREMPOW2 (-12135005234562 % 0x00000002):  long: 0
2938.    LREMPOW2 (-12135005234562 % 0x00000004):  long: -2
2939.    LREMPOW2 (-12135005234562 % 0x00000008):  long: -2
2940.    LREMPOW2 (-12135005234562 % 0x00000010):  long: -2
2941.    LREMPOW2 (-12135005234562 % 0x00000020):  long: -2
2942.    LREMPOW2 (-12135005234562 % 0x00000040):  long: -2
2943.    LREMPOW2 (-12135005234562 % 0x00000080):  long: -2
2944.    LREMPOW2 (-12135005234562 % 0x00000100):  long: -130
2945.    LREMPOW2 (-12135005234562 % 0x00000200):  long: -386
2946.    LREMPOW2 (-12135005234562 % 0x00000400):  long: -386
2947.    LREMPOW2 (-12135005234562 % 0x00000800):  long: -1410
2948.    LREMPOW2 (-12135005234562 % 0x00001000):  long: -1410
2949.    LREMPOW2 (-12135005234562 % 0x00002000):  long: -1410
2950.    LREMPOW2 (-12135005234562 % 0x00004000):  long: -9602
2951.    LREMPOW2 (-12135005234562 % 0x00008000):  long: -9602
2952.    LREMPOW2 (-12135005234562 % 0x00010000):  long: -9602
2953.    LREMPOW2 (-12135005234562 % 0x00020000):  long: -75138
2954.    LREMPOW2 (-12135005234562 % 0x00040000):  long: -75138
2955.    LREMPOW2 (-12135005234562 % 0x00080000):  long: -337282
2956.    LREMPOW2 (-12135005234562 % 0x00100000):  long: -861570
2957.    LREMPOW2 (-12135005234562 % 0x00200000):  long: -861570
2958.    LREMPOW2 (-12135005234562 % 0x00400000):  long: -2958722
2959.    LREMPOW2 (-12135005234562 % 0x00800000):  long: -2958722
2960.    LREMPOW2 (-12135005234562 % 0x01000000):  long: -11347330
2961.    LREMPOW2 (-12135005234562 % 0x02000000):  long: -11347330
2962.    LREMPOW2 (-12135005234562 % 0x04000000):  long: -44901762
2963.    LREMPOW2 (-12135005234562 % 0x08000000):  long: -112010626
2964.    LREMPOW2 (-12135005234562 % 0x10000000):  long: -112010626
2965.    LREMPOW2 (-12135005234562 % 0x20000000):  long: -112010626
2966.    LREMPOW2 (-12135005234562 % 0x40000000):  long: -648881538
2967.    LREMPOW2 (-12135005234562 % 0x80000000):  long: -1722623362
2968.    LDIVPOW2 (-2343552355623464626 / 0x00000002):  long: -1171776177811732313
2969.    LDIVPOW2 (-2343552355623464626 / 0x00000004):  long: -585888088905866156
2970.    LDIVPOW2 (-2343552355623464626 / 0x00000008):  long: -292944044452933078
2971.    LDIVPOW2 (-2343552355623464626 / 0x00000010):  long: -146472022226466539
2972.    LDIVPOW2 (-2343552355623464626 / 0x00000020):  long: -73236011113233269
2973.    LDIVPOW2 (-2343552355623464626 / 0x00000040):  long: -36618005556616634
2974.    LDIVPOW2 (-2343552355623464626 / 0x00000080):  long: -18309002778308317
2975.    LDIVPOW2 (-2343552355623464626 / 0x00000100):  long: -9154501389154158
2976.    LDIVPOW2 (-2343552355623464626 / 0x00000200):  long: -4577250694577079
2977.    LDIVPOW2 (-2343552355623464626 / 0x00000400):  long: -2288625347288539
2978.    LDIVPOW2 (-2343552355623464626 / 0x00000800):  long: -1144312673644269
2979.    LDIVPOW2 (-2343552355623464626 / 0x00001000):  long: -572156336822134
2980.    LDIVPOW2 (-2343552355623464626 / 0x00002000):  long: -286078168411067
2981.    LDIVPOW2 (-2343552355623464626 / 0x00004000):  long: -143039084205533
2982.    LDIVPOW2 (-2343552355623464626 / 0x00008000):  long: -71519542102766
2983.    LDIVPOW2 (-2343552355623464626 / 0x00010000):  long: -35759771051383
2984.    LDIVPOW2 (-2343552355623464626 / 0x00020000):  long: -17879885525691
2985.    LDIVPOW2 (-2343552355623464626 / 0x00040000):  long: -8939942762845
2986.    LDIVPOW2 (-2343552355623464626 / 0x00080000):  long: -4469971381422
2987.    LDIVPOW2 (-2343552355623464626 / 0x00100000):  long: -2234985690711
2988.    LDIVPOW2 (-2343552355623464626 / 0x00200000):  long: -1117492845355
2989.    LDIVPOW2 (-2343552355623464626 / 0x00400000):  long: -558746422677
2990.    LDIVPOW2 (-2343552355623464626 / 0x00800000):  long: -279373211338
2991.    LDIVPOW2 (-2343552355623464626 / 0x01000000):  long: -139686605669
2992.    LDIVPOW2 (-2343552355623464626 / 0x02000000):  long: -69843302834
2993.    LDIVPOW2 (-2343552355623464626 / 0x04000000):  long: -34921651417
2994.    LDIVPOW2 (-2343552355623464626 / 0x08000000):  long: -17460825708
2995.    LDIVPOW2 (-2343552355623464626 / 0x10000000):  long: -8730412854
2996.    LDIVPOW2 (-2343552355623464626 / 0x20000000):  long: -4365206427
2997.    LDIVPOW2 (-2343552355623464626 / 0x40000000):  long: -2182603213
2998.    LDIVPOW2 (-2343552355623464626 / 0x80000000):  long: 1091301606
2999.    LREMPOW2 (-2343552355623464626 % 0x00000002):  long: 0
3000.    LREMPOW2 (-2343552355623464626 % 0x00000004):  long: -2
3001.    LREMPOW2 (-2343552355623464626 % 0x00000008):  long: -2
3002.    LREMPOW2 (-2343552355623464626 % 0x00000010):  long: -2
3003.    LREMPOW2 (-2343552355623464626 % 0x00000020):  long: -18
3004.    LREMPOW2 (-2343552355623464626 % 0x00000040):  long: -50
3005.    LREMPOW2 (-2343552355623464626 % 0x00000080):  long: -50
3006.    LREMPOW2 (-2343552355623464626 % 0x00000100):  long: -178
3007.    LREMPOW2 (-2343552355623464626 % 0x00000200):  long: -178
3008.    LREMPOW2 (-2343552355623464626 % 0x00000400):  long: -690
3009.    LREMPOW2 (-2343552355623464626 % 0x00000800):  long: -1714
3010.    LREMPOW2 (-2343552355623464626 % 0x00001000):  long: -3762
3011.    LREMPOW2 (-2343552355623464626 % 0x00002000):  long: -3762
3012.    LREMPOW2 (-2343552355623464626 % 0x00004000):  long: -11954
3013.    LREMPOW2 (-2343552355623464626 % 0x00008000):  long: -28338
3014.    LREMPOW2 (-2343552355623464626 % 0x00010000):  long: -28338
3015.    LREMPOW2 (-2343552355623464626 % 0x00020000):  long: -93874
3016.    LREMPOW2 (-2343552355623464626 % 0x00040000):  long: -224946
3017.    LREMPOW2 (-2343552355623464626 % 0x00080000):  long: -487090
3018.    LREMPOW2 (-2343552355623464626 % 0x00100000):  long: -487090
3019.    LREMPOW2 (-2343552355623464626 % 0x00200000):  long: -1535666
3020.    LREMPOW2 (-2343552355623464626 % 0x00400000):  long: -3632818
3021.    LREMPOW2 (-2343552355623464626 % 0x00800000):  long: -7827122
3022.    LREMPOW2 (-2343552355623464626 % 0x01000000):  long: -7827122
3023.    LREMPOW2 (-2343552355623464626 % 0x02000000):  long: -24604338
3024.    LREMPOW2 (-2343552355623464626 % 0x04000000):  long: -24604338
3025.    LREMPOW2 (-2343552355623464626 % 0x08000000):  long: -91713202
3026.    LREMPOW2 (-2343552355623464626 % 0x10000000):  long: -91713202
3027.    LREMPOW2 (-2343552355623464626 % 0x20000000):  long: -91713202
3028.    LREMPOW2 (-2343552355623464626 % 0x40000000):  long: -628584114
3029.    LREMPOW2 (-2343552355623464626 % 0x80000000):  long: -1702325938
3030.    ------------------- test rem 0x10001
3031.    IREM0X10001 (0 % 0x10001):  int: 0
3032.    IREM0X10001 (1 % 0x10001):  int: 1
3033.    IREM0X10001 (17 % 0x10001):  int: 17
3034.    IREM0X10001 (123 % 0x10001):  int: 123
3035.    IREM0X10001 (1234 % 0x10001):  int: 1234
3036.    IREM0X10001 (13247 % 0x10001):  int: 13247
3037.    IREM0X10001 (563467 % 0x10001):  int: 39171
3038.    IREM0X10001 (7456774 % 0x10001):  int: 51093
3039.    IREM0X10001 (34523525 % 0x10001):  int: 51063
3040.    IREM0X10001 (234523456 % 0x10001):  int: 32070
3041.    IREM0X10001 (1005234562 % 0x10001):  int: 28056
3042.    IREM0X10001 (2147483647 % 0x10001):  int: 32768
3043.    IREM0X10001 (-1 % 0x10001):  int: -1
3044.    IREM0X10001 (-17 % 0x10001):  int: -17
3045.    IREM0X10001 (-123 % 0x10001):  int: -123
3046.    IREM0X10001 (-1234 % 0x10001):  int: -1234
3047.    IREM0X10001 (-13247 % 0x10001):  int: -13247
3048.    IREM0X10001 (-563467 % 0x10001):  int: -39171
3049.    IREM0X10001 (-7456774 % 0x10001):  int: -51093
3050.    IREM0X10001 (-34523525 % 0x10001):  int: -51063
3051.    IREM0X10001 (-234523456 % 0x10001):  int: -32070
3052.    IREM0X10001 (-1005234562 % 0x10001):  int: -28056
3053.    IREM0X10001 (-2147483647 % 0x10001):  int: -32768
3054.    IREM0X10001 (-2147483648 % 0x10001):  int: -32769
3055.    LREM0X10001 (0 % 0x10001):  long: 0
3056.    LREM0X10001 (1 % 0x10001):  long: 1
3057.    LREM0X10001 (17 % 0x10001):  long: 17
3058.    LREM0X10001 (123 % 0x10001):  long: 123
3059.    LREM0X10001 (1234 % 0x10001):  long: 1234
3060.    LREM0X10001 (13247 % 0x10001):  long: 13247
3061.    LREM0X10001 (563467 % 0x10001):  long: 39171
3062.    LREM0X10001 (7456774 % 0x10001):  long: 51093
3063.    LREM0X10001 (34523525 % 0x10001):  long: 51063
3064.    LREM0X10001 (234523456 % 0x10001):  long: 32070
3065.    LREM0X10001 (1005234562 % 0x10001):  long: 28056
3066.    LREM0X10001 (1983223864 % 0x10001):  long: 8707
3067.    LREM0X10001 (2147483646 % 0x10001):  long: 32767
3068.    LREM0X10001 (2147483647 % 0x10001):  long: 32768
3069.    LREM0X10001 (2147483648 % 0x10001):  long: 32769
3070.    LREM0X10001 (10052234562 % 0x10001):  long: 38428
3071.    LREM0X10001 (561005234562 % 0x10001):  long: 60289
3072.    LREM0X10001 (2100527345962 % 0x10001):  long: 41444
3073.    LREM0X10001 (34600523456287 % 0x10001):  long: 61103
3074.    LREM0X10001 (546805234456882 % 0x10001):  long: 50879
3075.    LREM0X10001 (1360052334734722 % 0x10001):  long: 42538
3076.    LREM0X10001 (23456705569626354 % 0x10001):  long: 37707
3077.    LREM0X10001 (9223372036854775807 % 0x10001):  long: 32768
3078.    LREM0X10001 (-1 % 0x10001):  long: -1
3079.    LREM0X10001 (-17 % 0x10001):  long: -17
3080.    LREM0X10001 (-123 % 0x10001):  long: -123
3081.    LREM0X10001 (-1234 % 0x10001):  long: -1234
3082.    LREM0X10001 (-13247 % 0x10001):  long: -13247
3083.    LREM0X10001 (-563467 % 0x10001):  long: -39171
3084.    LREM0X10001 (-7456774 % 0x10001):  long: -51093
3085.    LREM0X10001 (-34523525 % 0x10001):  long: -51063
3086.    LREM0X10001 (-234523456 % 0x10001):  long: -32070
3087.    LREM0X10001 (-1005234562 % 0x10001):  long: -28056
3088.    LREM0X10001 (-1983223864 % 0x10001):  long: -8707
3089.    LREM0X10001 (-2147483647 % 0x10001):  long: -32768
3090.    LREM0X10001 (-2147483648 % 0x10001):  long: -32769
3091.    LREM0X10001 (-10052234562 % 0x10001):  long: -38428
3092.    LREM0X10001 (-561005234562 % 0x10001):  long: -60289
3093.    LREM0X10001 (-2100527345962 % 0x10001):  long: -41444
3094.    LREM0X10001 (-34600523456287 % 0x10001):  long: -61103
3095.    LREM0X10001 (-546805234456882 % 0x10001):  long: -50879
3096.    LREM0X10001 (-1360052334734722 % 0x10001):  long: -42538
3097.    LREM0X10001 (-23456705569626354 % 0x10001):  long: -37707
3098.    LREM0X10001 (-9223372036854775807 % 0x10001):  long: -32768
3099.    LREM0X10001 (-9223372036854775808 % 0x10001):  long: -32769
3100.    ------------------- test ints
3101.    TESTINT CALLED WITH int: 1
3102.                    AND int: 2
3103.    IADD:  int: 3
3104.    ISUB:  int: -1
3105.    IMUL:  int: 2
3106.    IDIV:  int: 0
3107.    IREM:  int: 1
3108.    INEG:  int: -1
3109.    ISHL:  int: 4
3110.    ISHR:  int: 0
3111.    IUSHR: int: 0
3112.    IAND:  int: 0
3113.    IOR:   int: 3
3114.    IXOR:  int: 3
3115.    I2L:   long: 1
3116.    I2F:   float: 1065353216
3117.    I2D:   double: 4607182418800017408
3118.    INT2BYTE: byte: 1
3119.    INT2CHAR: char: 1
3120.    INT2SHORT: short: 1
3121.    not IFEQ
3122.    not IFLT
3123.    not IFLE
3124.    not IF_ICMPEQ
3125.    not IF_ICMPGT
3126.    not IF_ICMPGE
3127.    COND_ICMPEQ 1 == 0: 1
3128.    COND_ICMPNE 1 != 0: 0
3129.    COND_ICMPLT 1 <  0: 1
3130.    COND_ICMPLE 1 <= 0: 1
3131.    COND_ICMPGT 1 >  0: 0
3132.    COND_ICMPGE 1 >= 0: 0
3133.    COND_ICMPEQ 1 == 0: 0
3134.    COND_ICMPNE 1 != 0: 1
3135.    COND_ICMPLT 1 <  0: 0
3136.    COND_ICMPLE 1 <= 0: 0
3137.    COND_ICMPGT 1 >  0: 1
3138.    COND_ICMPGE 1 >= 0: 1
3139.    COND_ICMPEQ 1 == 0: 3
3140.    COND_ICMPNE 1 != 0: 2
3141.    COND_ICMPLT 1 <  0: 3
3142.    COND_ICMPLE 1 <= 0: 3
3143.    COND_ICMPGT 1 >  0: 2
3144.    COND_ICMPGE 1 >= 0: 2
3145.    COND_ICMPEQ 1 == 2: false
3146.    COND_ICMPNE 1 != 2: true
3147.    COND_ICMPLT 1 <  2: true
3148.    COND_ICMPLE 1 <= 2: true
3149.    COND_ICMPGT 1 >  2: false
3150.    COND_ICMPGE 1 >= 2: false
3151.    TESTINT CALLED WITH int: -1
3152.                    AND int: 17
3153.    IADD:  int: 16
3154.    ISUB:  int: -18
3155.    IMUL:  int: -17
3156.    IDIV:  int: 0
3157.    IREM:  int: -1
3158.    INEG:  int: 1
3159.    ISHL:  int: -131072
3160.    ISHR:  int: -1
3161.    IUSHR: int: 32767
3162.    IAND:  int: 17
3163.    IOR:   int: -1
3164.    IXOR:  int: -18
3165.    I2L:   long: -1
3166.    I2F:   float: -1082130432
3167.    I2D:   double: -4616189618054758400
3168.    INT2BYTE: byte: -1
3169.    INT2CHAR: char: 65535
3170.    INT2SHORT: short: -1
3171.    not IFEQ
3172.    not IFGT
3173.    not IFGE
3174.    not IF_ICMPEQ
3175.    not IF_ICMPGT
3176.    not IF_ICMPGE
3177.    COND_ICMPEQ -1 == 0: 1
3178.    COND_ICMPNE -1 != 0: 0
3179.    COND_ICMPLT -1 <  0: 0
3180.    COND_ICMPLE -1 <= 0: 0
3181.    COND_ICMPGT -1 >  0: 1
3182.    COND_ICMPGE -1 >= 0: 1
3183.    COND_ICMPEQ -1 == 0: 0
3184.    COND_ICMPNE -1 != 0: 1
3185.    COND_ICMPLT -1 <  0: 1
3186.    COND_ICMPLE -1 <= 0: 1
3187.    COND_ICMPGT -1 >  0: 0
3188.    COND_ICMPGE -1 >= 0: 0
3189.    COND_ICMPEQ -1 == 0: 3
3190.    COND_ICMPNE -1 != 0: 2
3191.    COND_ICMPLT -1 <  0: 2
3192.    COND_ICMPLE -1 <= 0: 2
3193.    COND_ICMPGT -1 >  0: 3
3194.    COND_ICMPGE -1 >= 0: 3
3195.    COND_ICMPEQ -1 == 17: false
3196.    COND_ICMPNE -1 != 17: true
3197.    COND_ICMPLT -1 <  17: true
3198.    COND_ICMPLE -1 <= 17: true
3199.    COND_ICMPGT -1 >  17: false
3200.    COND_ICMPGE -1 >= 17: false
3201.    TESTINT CALLED WITH int: -24351
3202.                    AND int: 24123
3203.    IADD:  int: -228
3204.    ISUB:  int: -48474
3205.    IMUL:  int: -587419173
3206.    IDIV:  int: -1
3207.    IREM:  int: -228
3208.    INEG:  int: 24351
3209.    ISHL:  int: 134217728
3210.    ISHR:  int: -1
3211.    IUSHR: int: 31
3212.    IAND:  int: 33
3213.    IOR:   int: -261
3214.    IXOR:  int: -294
3215.    I2L:   long: -24351
3216.    I2F:   float: -960610816
3217.    I2D:   double: -4550949270986948608
3218.    INT2BYTE: byte: -31
3219.    INT2CHAR: char: 41185
3220.    INT2SHORT: short: -24351
3221.    not IFEQ
3222.    not IFGT
3223.    not IFGE
3224.    not IF_ICMPEQ
3225.    not IF_ICMPGT
3226.    not IF_ICMPGE
3227.    COND_ICMPEQ -24351 == 0: 1
3228.    COND_ICMPNE -24351 != 0: 0
3229.    COND_ICMPLT -24351 <  0: 0
3230.    COND_ICMPLE -24351 <= 0: 0
3231.    COND_ICMPGT -24351 >  0: 1
3232.    COND_ICMPGE -24351 >= 0: 1
3233.    COND_ICMPEQ -24351 == 0: 0
3234.    COND_ICMPNE -24351 != 0: 1
3235.    COND_ICMPLT -24351 <  0: 1
3236.    COND_ICMPLE -24351 <= 0: 1
3237.    COND_ICMPGT -24351 >  0: 0
3238.    COND_ICMPGE -24351 >= 0: 0
3239.    COND_ICMPEQ -24351 == 0: 3
3240.    COND_ICMPNE -24351 != 0: 2
3241.    COND_ICMPLT -24351 <  0: 2
3242.    COND_ICMPLE -24351 <= 0: 2
3243.    COND_ICMPGT -24351 >  0: 3
3244.    COND_ICMPGE -24351 >= 0: 3
3245.    COND_ICMPEQ -24351 == 24123: false
3246.    COND_ICMPNE -24351 != 24123: true
3247.    COND_ICMPLT -24351 <  24123: true
3248.    COND_ICMPLE -24351 <= 24123: true
3249.    COND_ICMPGT -24351 >  24123: false
3250.    COND_ICMPGE -24351 >= 24123: false
3251.    TESTINT CALLED WITH int: 4918923
3252.                    AND int: -441423
3253.    IADD:  int: 4477500
3254.    ISUB:  int: 5360346
3255.    IMUL:  int: 1927704347
3256.    IDIV:  int: -11
3257.    IREM:  int: 63270
3258.    INEG:  int: -4918923
3259.    ISHL:  int: 487981056
3260.    ISHR:  int: 37
3261.    IUSHR: int: 37
3262.    IAND:  int: 4784769
3263.    IOR:   int: -307269
3264.    IXOR:  int: -5092038
3265.    I2L:   long: 4918923
3266.    I2F:   float: 1251351830
3267.    I2D:   double: 4707039664328933376
3268.    INT2BYTE: byte: -117
3269.    INT2CHAR: char: 3723
3270.    INT2SHORT: short: 3723
3271.    not IFEQ
3272.    not IFLT
3273.    not IFLE
3274.    not IF_ICMPEQ
3275.    not IF_ICMPLT
3276.    not IF_ICMPLE
3277.    COND_ICMPEQ 4918923 == 0: 1
3278.    COND_ICMPNE 4918923 != 0: 0
3279.    COND_ICMPLT 4918923 <  0: 1
3280.    COND_ICMPLE 4918923 <= 0: 1
3281.    COND_ICMPGT 4918923 >  0: 0
3282.    COND_ICMPGE 4918923 >= 0: 0
3283.    COND_ICMPEQ 4918923 == 0: 0
3284.    COND_ICMPNE 4918923 != 0: 1
3285.    COND_ICMPLT 4918923 <  0: 0
3286.    COND_ICMPLE 4918923 <= 0: 0
3287.    COND_ICMPGT 4918923 >  0: 1
3288.    COND_ICMPGE 4918923 >= 0: 1
3289.    COND_ICMPEQ 4918923 == 0: 3
3290.    COND_ICMPNE 4918923 != 0: 2
3291.    COND_ICMPLT 4918923 <  0: 3
3292.    COND_ICMPLE 4918923 <= 0: 3
3293.    COND_ICMPGT 4918923 >  0: 2
3294.    COND_ICMPGE 4918923 >= 0: 2
3295.    COND_ICMPEQ 4918923 == -441423: false
3296.    COND_ICMPNE 4918923 != -441423: true
3297.    COND_ICMPLT 4918923 <  -441423: false
3298.    COND_ICMPLE 4918923 <= -441423: false
3299.    COND_ICMPGT 4918923 >  -441423: true
3300.    COND_ICMPGE 4918923 >= -441423: true
3301.    TESTINT CALLED WITH int: 0
3302.                    AND int: 0
3303.    IADD:  int: 0
3304.    ISUB:  int: 0
3305.    IMUL:  int: 0
3306.    divison by zero
3307.    divison by zero
3308.    INEG:  int: 0
3309.    ISHL:  int: 0
3310.    ISHR:  int: 0
3311.    IUSHR: int: 0
3312.    IAND:  int: 0
3313.    IOR:   int: 0
3314.    IXOR:  int: 0
3315.    I2L:   long: 0
3316.    I2F:   float: 0
3317.    I2D:   double: 0
3318.    INT2BYTE: byte: 0
3319.    INT2CHAR: char: 0
3320.    INT2SHORT: short: 0
3321.    not IFNE
3322.    not IFLT
3323.    not IFGT
3324.    not IF_ICMPNE
3325.    not IF_ICMPLT
3326.    not IF_ICMPGT
3327.    COND_ICMPEQ 0 == 0: 0
3328.    COND_ICMPNE 0 != 0: 1
3329.    COND_ICMPLT 0 <  0: 1
3330.    COND_ICMPLE 0 <= 0: 0
3331.    COND_ICMPGT 0 >  0: 1
3332.    COND_ICMPGE 0 >= 0: 0
3333.    COND_ICMPEQ 0 == 0: 1
3334.    COND_ICMPNE 0 != 0: 0
3335.    COND_ICMPLT 0 <  0: 0
3336.    COND_ICMPLE 0 <= 0: 1
3337.    COND_ICMPGT 0 >  0: 0
3338.    COND_ICMPGE 0 >= 0: 1
3339.    COND_ICMPEQ 0 == 0: 2
3340.    COND_ICMPNE 0 != 0: 3
3341.    COND_ICMPLT 0 <  0: 3
3342.    COND_ICMPLE 0 <= 0: 2
3343.    COND_ICMPGT 0 >  0: 3
3344.    COND_ICMPGE 0 >= 0: 2
3345.    COND_ICMPEQ 0 == 0: true
3346.    COND_ICMPNE 0 != 0: false
3347.    COND_ICMPLT 0 <  0: false
3348.    COND_ICMPLE 0 <= 0: true
3349.    COND_ICMPGT 0 >  0: false
3350.    COND_ICMPGE 0 >= 0: true
3351.    TESTINT CALLED WITH int: -1
3352.                    AND int: -1
3353.    IADD:  int: -2
3354.    ISUB:  int: 0
3355.    IMUL:  int: 1
3356.    IDIV:  int: 1
3357.    IREM:  int: 0
3358.    INEG:  int: 1
3359.    ISHL:  int: -2147483648
3360.    ISHR:  int: -1
3361.    IUSHR: int: 1
3362.    IAND:  int: -1
3363.    IOR:   int: -1
3364.    IXOR:  int: 0
3365.    I2L:   long: -1
3366.    I2F:   float: -1082130432
3367.    I2D:   double: -4616189618054758400
3368.    INT2BYTE: byte: -1
3369.    INT2CHAR: char: 65535
3370.    INT2SHORT: short: -1
3371.    not IFEQ
3372.    not IFGT
3373.    not IFGE
3374.    not IF_ICMPNE
3375.    not IF_ICMPLT
3376.    not IF_ICMPGT
3377.    COND_ICMPEQ -1 == 0: 1
3378.    COND_ICMPNE -1 != 0: 0
3379.    COND_ICMPLT -1 <  0: 0
3380.    COND_ICMPLE -1 <= 0: 0
3381.    COND_ICMPGT -1 >  0: 1
3382.    COND_ICMPGE -1 >= 0: 1
3383.    COND_ICMPEQ -1 == 0: 0
3384.    COND_ICMPNE -1 != 0: 1
3385.    COND_ICMPLT -1 <  0: 1
3386.    COND_ICMPLE -1 <= 0: 1
3387.    COND_ICMPGT -1 >  0: 0
3388.    COND_ICMPGE -1 >= 0: 0
3389.    COND_ICMPEQ -1 == 0: 3
3390.    COND_ICMPNE -1 != 0: 2
3391.    COND_ICMPLT -1 <  0: 2
3392.    COND_ICMPLE -1 <= 0: 2
3393.    COND_ICMPGT -1 >  0: 3
3394.    COND_ICMPGE -1 >= 0: 3
3395.    COND_ICMPEQ -1 == -1: true
3396.    COND_ICMPNE -1 != -1: false
3397.    COND_ICMPLT -1 <  -1: false
3398.    COND_ICMPLE -1 <= -1: true
3399.    COND_ICMPGT -1 >  -1: false
3400.    COND_ICMPGE -1 >= -1: true
3401.    TESTINT CALLED WITH int: 1423487
3402.                    AND int: 123444444
3403.    IADD:  int: 124867931
3404.    ISUB:  int: -122020957
3405.    IMUL:  int: 1564274980
3406.    IDIV:  int: 0
3407.    IREM:  int: 1423487
3408.    INEG:  int: -1423487
3409.    ISHL:  int: -268435456
3410.    ISHR:  int: 0
3411.    IUSHR: int: 0
3412.    IAND:  int: 1153116
3413.    IOR:   int: 123714815
3414.    IXOR:  int: 122561699
3415.    I2L:   long: 1423487
3416.    I2F:   float: 1236124664
3417.    I2D:   double: 4698864641831337984
3418.    INT2BYTE: byte: 127
3419.    INT2CHAR: char: 47231
3420.    INT2SHORT: short: -18305
3421.    not IFEQ
3422.    not IFLT
3423.    not IFLE
3424.    not IF_ICMPEQ
3425.    not IF_ICMPGT
3426.    not IF_ICMPGE
3427.    COND_ICMPEQ 1423487 == 0: 1
3428.    COND_ICMPNE 1423487 != 0: 0
3429.    COND_ICMPLT 1423487 <  0: 1
3430.    COND_ICMPLE 1423487 <= 0: 1
3431.    COND_ICMPGT 1423487 >  0: 0
3432.    COND_ICMPGE 1423487 >= 0: 0
3433.    COND_ICMPEQ 1423487 == 0: 0
3434.    COND_ICMPNE 1423487 != 0: 1
3435.    COND_ICMPLT 1423487 <  0: 0
3436.    COND_ICMPLE 1423487 <= 0: 0
3437.    COND_ICMPGT 1423487 >  0: 1
3438.    COND_ICMPGE 1423487 >= 0: 1
3439.    COND_ICMPEQ 1423487 == 0: 3
3440.    COND_ICMPNE 1423487 != 0: 2
3441.    COND_ICMPLT 1423487 <  0: 3
3442.    COND_ICMPLE 1423487 <= 0: 3
3443.    COND_ICMPGT 1423487 >  0: 2
3444.    COND_ICMPGE 1423487 >= 0: 2
3445.    COND_ICMPEQ 1423487 == 123444444: false
3446.    COND_ICMPNE 1423487 != 123444444: true
3447.    COND_ICMPLT 1423487 <  123444444: true
3448.    COND_ICMPLE 1423487 <= 123444444: true
3449.    COND_ICMPGT 1423487 >  123444444: false
3450.    COND_ICMPGE 1423487 >= 123444444: false
3451.    TESTINT CALLED WITH int: 2147483647
3452.                    AND int: 1
3453.    IADD:  int: -2147483648
3454.    ISUB:  int: 2147483646
3455.    IMUL:  int: 2147483647
3456.    IDIV:  int: 2147483647
3457.    IREM:  int: 0
3458.    INEG:  int: -2147483647
3459.    ISHL:  int: -2
3460.    ISHR:  int: 1073741823
3461.    IUSHR: int: 1073741823
3462.    IAND:  int: 1
3463.    IOR:   int: 2147483647
3464.    IXOR:  int: 2147483646
3465.    I2L:   long: 2147483647
3466.    I2F:   float: 1325400064
3467.    I2D:   double: 4746794007244308480
3468.    INT2BYTE: byte: -1
3469.    INT2CHAR: char: 65535
3470.    INT2SHORT: short: -1
3471.    not IFEQ
3472.    not IFLT
3473.    not IFLE
3474.    not IF_ICMPEQ
3475.    not IF_ICMPLT
3476.    not IF_ICMPLE
3477.    COND_ICMPEQ 2147483647 == 0: 1
3478.    COND_ICMPNE 2147483647 != 0: 0
3479.    COND_ICMPLT 2147483647 <  0: 1
3480.    COND_ICMPLE 2147483647 <= 0: 1
3481.    COND_ICMPGT 2147483647 >  0: 0
3482.    COND_ICMPGE 2147483647 >= 0: 0
3483.    COND_ICMPEQ 2147483647 == 0: 0
3484.    COND_ICMPNE 2147483647 != 0: 1
3485.    COND_ICMPLT 2147483647 <  0: 0
3486.    COND_ICMPLE 2147483647 <= 0: 0
3487.    COND_ICMPGT 2147483647 >  0: 1
3488.    COND_ICMPGE 2147483647 >= 0: 1
3489.    COND_ICMPEQ 2147483647 == 0: 3
3490.    COND_ICMPNE 2147483647 != 0: 2
3491.    COND_ICMPLT 2147483647 <  0: 3
3492.    COND_ICMPLE 2147483647 <= 0: 3
3493.    COND_ICMPGT 2147483647 >  0: 2
3494.    COND_ICMPGE 2147483647 >= 0: 2
3495.    COND_ICMPEQ 2147483647 == 1: false
3496.    COND_ICMPNE 2147483647 != 1: true
3497.    COND_ICMPLT 2147483647 <  1: false
3498.    COND_ICMPLE 2147483647 <= 1: false
3499.    COND_ICMPGT 2147483647 >  1: true
3500.    COND_ICMPGE 2147483647 >= 1: true
3501.    TESTINT CALLED WITH int: 0
3502.                    AND int: 2147483647
3503.    IADD:  int: 2147483647
3504.    ISUB:  int: -2147483647
3505.    IMUL:  int: 0
3506.    IDIV:  int: 0
3507.    IREM:  int: 0
3508.    INEG:  int: 0
3509.    ISHL:  int: 0
3510.    ISHR:  int: 0
3511.    IUSHR: int: 0
3512.    IAND:  int: 0
3513.    IOR:   int: 2147483647
3514.    IXOR:  int: 2147483647
3515.    I2L:   long: 0
3516.    I2F:   float: 0
3517.    I2D:   double: 0
3518.    INT2BYTE: byte: 0
3519.    INT2CHAR: char: 0
3520.    INT2SHORT: short: 0
3521.    not IFNE
3522.    not IFLT
3523.    not IFGT
3524.    not IF_ICMPEQ
3525.    not IF_ICMPGT
3526.    not IF_ICMPGE
3527.    COND_ICMPEQ 0 == 0: 0
3528.    COND_ICMPNE 0 != 0: 1
3529.    COND_ICMPLT 0 <  0: 1
3530.    COND_ICMPLE 0 <= 0: 0
3531.    COND_ICMPGT 0 >  0: 1
3532.    COND_ICMPGE 0 >= 0: 0
3533.    COND_ICMPEQ 0 == 0: 1
3534.    COND_ICMPNE 0 != 0: 0
3535.    COND_ICMPLT 0 <  0: 0
3536.    COND_ICMPLE 0 <= 0: 1
3537.    COND_ICMPGT 0 >  0: 0
3538.    COND_ICMPGE 0 >= 0: 1
3539.    COND_ICMPEQ 0 == 0: 2
3540.    COND_ICMPNE 0 != 0: 3
3541.    COND_ICMPLT 0 <  0: 3
3542.    COND_ICMPLE 0 <= 0: 2
3543.    COND_ICMPGT 0 >  0: 3
3544.    COND_ICMPGE 0 >= 0: 2
3545.    COND_ICMPEQ 0 == 2147483647: false
3546.    COND_ICMPNE 0 != 2147483647: true
3547.    COND_ICMPLT 0 <  2147483647: true
3548.    COND_ICMPLE 0 <= 2147483647: true
3549.    COND_ICMPGT 0 >  2147483647: false
3550.    COND_ICMPGE 0 >= 2147483647: false
3551.    TESTINT CALLED WITH int: 13107
3552.                    AND int: 143444
3553.    IADD:  int: 156551
3554.    ISUB:  int: -130337
3555.    IMUL:  int: 1880120508
3556.    IDIV:  int: 0
3557.    IREM:  int: 13107
3558.    INEG:  int: -13107
3559.    ISHL:  int: 858783744
3560.    ISHR:  int: 0
3561.    IUSHR: int: 0
3562.    IAND:  int: 12304
3563.    IOR:   int: 144247
3564.    IXOR:  int: 131943
3565.    I2L:   long: 13107
3566.    I2F:   float: 1179438080
3567.    I2D:   double: 4668431263781093376
3568.    INT2BYTE: byte: 51
3569.    INT2CHAR: char: 13107
3570.    INT2SHORT: short: 13107
3571.    not IFEQ
3572.    not IFLT
3573.    not IFLE
3574.    not IF_ICMPEQ
3575.    not IF_ICMPGT
3576.    not IF_ICMPGE
3577.    COND_ICMPEQ 13107 == 0: 1
3578.    COND_ICMPNE 13107 != 0: 0
3579.    COND_ICMPLT 13107 <  0: 1
3580.    COND_ICMPLE 13107 <= 0: 1
3581.    COND_ICMPGT 13107 >  0: 0
3582.    COND_ICMPGE 13107 >= 0: 0
3583.    COND_ICMPEQ 13107 == 0: 0
3584.    COND_ICMPNE 13107 != 0: 1
3585.    COND_ICMPLT 13107 <  0: 0
3586.    COND_ICMPLE 13107 <= 0: 0
3587.    COND_ICMPGT 13107 >  0: 1
3588.    COND_ICMPGE 13107 >= 0: 1
3589.    COND_ICMPEQ 13107 == 0: 3
3590.    COND_ICMPNE 13107 != 0: 2
3591.    COND_ICMPLT 13107 <  0: 3
3592.    COND_ICMPLE 13107 <= 0: 3
3593.    COND_ICMPGT 13107 >  0: 2
3594.    COND_ICMPGE 13107 >= 0: 2
3595.    COND_ICMPEQ 13107 == 143444: false
3596.    COND_ICMPNE 13107 != 143444: true
3597.    COND_ICMPLT 13107 <  143444: true
3598.    COND_ICMPLE 13107 <= 143444: true
3599.    COND_ICMPGT 13107 >  143444: false
3600.    COND_ICMPGE 13107 >= 143444: false
3601.    TESTINT CALLED WITH int: 4444441
3602.                    AND int: 12342
3603.    IADD:  int: 4456783
3604.    ISUB:  int: 4432099
3605.    IMUL:  int: -981284026
3606.    IDIV:  int: 360
3607.    IREM:  int: 1321
3608.    INEG:  int: -4444441
3609.    ISHL:  int: 1178599424
3610.    ISHR:  int: 1
3611.    IUSHR: int: 1
3612.    IAND:  int: 4112
3613.    IOR:   int: 4452671
3614.    IXOR:  int: 4448559
3615.    I2L:   long: 4444441
3616.    I2F:   float: 1250402866
3617.    I2D:   double: 4706530193160798208
3618.    INT2BYTE: byte: 25
3619.    INT2CHAR: char: 53529
3620.    INT2SHORT: short: -12007
3621.    not IFEQ
3622.    not IFLT
3623.    not IFLE
3624.    not IF_ICMPEQ
3625.    not IF_ICMPLT
3626.    not IF_ICMPLE
3627.    COND_ICMPEQ 4444441 == 0: 1
3628.    COND_ICMPNE 4444441 != 0: 0
3629.    COND_ICMPLT 4444441 <  0: 1
3630.    COND_ICMPLE 4444441 <= 0: 1
3631.    COND_ICMPGT 4444441 >  0: 0
3632.    COND_ICMPGE 4444441 >= 0: 0
3633.    COND_ICMPEQ 4444441 == 0: 0
3634.    COND_ICMPNE 4444441 != 0: 1
3635.    COND_ICMPLT 4444441 <  0: 0
3636.    COND_ICMPLE 4444441 <= 0: 0
3637.    COND_ICMPGT 4444441 >  0: 1
3638.    COND_ICMPGE 4444441 >= 0: 1
3639.    COND_ICMPEQ 4444441 == 0: 3
3640.    COND_ICMPNE 4444441 != 0: 2
3641.    COND_ICMPLT 4444441 <  0: 3
3642.    COND_ICMPLE 4444441 <= 0: 3
3643.    COND_ICMPGT 4444441 >  0: 2
3644.    COND_ICMPGE 4444441 >= 0: 2
3645.    COND_ICMPEQ 4444441 == 12342: false
3646.    COND_ICMPNE 4444441 != 12342: true
3647.    COND_ICMPLT 4444441 <  12342: false
3648.    COND_ICMPLE 4444441 <= 12342: false
3649.    COND_ICMPGT 4444441 >  12342: true
3650.    COND_ICMPGE 4444441 >= 12342: true
3651.    ------------------- test longs
3652.    TESTLONG called with long: 1
3653.                     AND long: 2
3654.    LADD:  long: 3
3655.    LSUB:  long: -1
3656.    LMUL:  long: 2
3657.    LDIV:  long: 0
3658.    LREM:  long: 1
3659.    LNEG:  long: -1
3660.    LSHL:  long: 4
3661.    LSHR:  long: 0
3662.    LUSHR: long: 0
3663.    LAND:  long: 0
3664.    LOR:   long: 3
3665.    LXOR:  long: 3
3666.    L2I:   int: 1
3667.    L2F:   float: 1065353216
3668.    L2D:   double: 4607182418800017408
3669.    LCMP a == b : false
3670.    LCMP a != b : true
3671.    LCMP a <  b : true
3672.    LCMP a <= b : true
3673.    LCMP a >  b : false
3674.    LCMP a >= b : false
3675.    not IF_LCMPNE
3676.    not IF_LCMPLT
3677.    not IF_LCMPLE
3678.    TESTLONG called with long: -1
3679.                     AND long: 17
3680.    LADD:  long: 16
3681.    LSUB:  long: -18
3682.    LMUL:  long: -17
3683.    LDIV:  long: 0
3684.    LREM:  long: -1
3685.    LNEG:  long: 1
3686.    LSHL:  long: -131072
3687.    LSHR:  long: -1
3688.    LUSHR: long: 140737488355327
3689.    LAND:  long: 17
3690.    LOR:   long: -1
3691.    LXOR:  long: -18
3692.    L2I:   int: -1
3693.    L2F:   float: -1082130432
3694.    L2D:   double: -4616189618054758400
3695.    LCMP a == b : false
3696.    LCMP a != b : true
3697.    LCMP a <  b : true
3698.    LCMP a <= b : true
3699.    LCMP a >  b : false
3700.    LCMP a >= b : false
3701.    not IF_LCMPNE
3702.    not IF_LCMPLT
3703.    not IF_LCMPLE
3704.    TESTLONG called with long: -24351
3705.                     AND long: 24123
3706.    LADD:  long: -228
3707.    LSUB:  long: -48474
3708.    LMUL:  long: -587419173
3709.    LDIV:  long: -1
3710.    LREM:  long: -228
3711.    LNEG:  long: 24351
3712.    LSHL:  long: 576460752303423488
3713.    LSHR:  long: -1
3714.    LUSHR: long: 31
3715.    LAND:  long: 33
3716.    LOR:   long: -261
3717.    LXOR:  long: -294
3718.    L2I:   int: -24351
3719.    L2F:   float: -960610816
3720.    L2D:   double: -4550949270986948608
3721.    LCMP a == b : false
3722.    LCMP a != b : true
3723.    LCMP a <  b : true
3724.    LCMP a <= b : true
3725.    LCMP a >  b : false
3726.    LCMP a >= b : false
3727.    not IF_LCMPNE
3728.    not IF_LCMPLT
3729.    not IF_LCMPLE
3730.    TESTLONG called with long: 4918923241323
3731.                     AND long: -4423423234231423
3732.    LADD:  long: -4418504310990100
3733.    LSUB:  long: 4428342157472746
3734.    LMUL:  long: -4222930371437023765
3735.    LDIV:  long: 0
3736.    LREM:  long: 4918923241323
3737.    LNEG:  long: -4918923241323
3738.    LSHL:  long: 9837846482646
3739.    LSHR:  long: 2459461620661
3740.    LUSHR: long: 2459461620661
3741.    LAND:  long: 451041567489
3742.    LOR:   long: -4418955352557589
3743.    LXOR:  long: -4419406394125078
3744.    L2I:   int: 1185687403
3745.    L2F:   float: 1418668246
3746.    L2D:   double: 4796866980921322496
3747.    LCMP a == b : false
3748.    LCMP a != b : true
3749.    LCMP a <  b : false
3750.    LCMP a <= b : false
3751.    LCMP a >  b : true
3752.    LCMP a >= b : true
3753.    not IF_LCMPNE
3754.    not IF_LCMPGT
3755.    not IF_LCMPGE
3756.    TESTLONG called with long: 0
3757.                     AND long: 0
3758.    LADD:  long: 0
3759.    LSUB:  long: 0
3760.    LMUL:  long: 0
3761.    divison by zero
3762.    divison by zero
3763.    LNEG:  long: 0
3764.    LSHL:  long: 0
3765.    LSHR:  long: 0
3766.    LUSHR: long: 0
3767.    LAND:  long: 0
3768.    LOR:   long: 0
3769.    LXOR:  long: 0
3770.    L2I:   int: 0
3771.    L2F:   float: 0
3772.    L2D:   double: 0
3773.    LCMP a == b : true
3774.    LCMP a != b : false
3775.    LCMP a <  b : false
3776.    LCMP a <= b : true
3777.    LCMP a >  b : false
3778.    LCMP a >= b : true
3779.    not IF_LCMPEQ
3780.    not IF_LCMPLE
3781.    not IF_LCMPGE
3782.    TESTLONG called with long: -1
3783.                     AND long: -1
3784.    LADD:  long: -2
3785.    LSUB:  long: 0
3786.    LMUL:  long: 1
3787.    LDIV:  long: 1
3788.    LREM:  long: 0
3789.    LNEG:  long: 1
3790.    LSHL:  long: -9223372036854775808
3791.    LSHR:  long: -1
3792.    LUSHR: long: 1
3793.    LAND:  long: -1
3794.    LOR:   long: -1
3795.    LXOR:  long: 0
3796.    L2I:   int: -1
3797.    L2F:   float: -1082130432
3798.    L2D:   double: -4616189618054758400
3799.    LCMP a == b : true
3800.    LCMP a != b : false
3801.    LCMP a <  b : false
3802.    LCMP a <= b : true
3803.    LCMP a >  b : false
3804.    LCMP a >= b : true
3805.    not IF_LCMPEQ
3806.    not IF_LCMPLE
3807.    not IF_LCMPGE
3808.    TESTLONG called with long: 1423487
3809.                     AND long: 123444442344
3810.    LADD:  long: 123445865831
3811.    LSUB:  long: -123443018857
3812.    LMUL:  long: 175721558898933528
3813.    LDIV:  long: 0
3814.    LREM:  long: 1423487
3815.    LNEG:  long: -1423487
3816.    LSHL:  long: 1565140508487974912
3817.    LSHR:  long: 0
3818.    LUSHR: long: 0
3819.    LAND:  long: 1355880
3820.    LOR:   long: 123444509951
3821.    LXOR:  long: 123443154071
3822.    L2I:   int: 1423487
3823.    L2F:   float: 1236124664
3824.    L2D:   double: 4698864641831337984
3825.    LCMP a == b : false
3826.    LCMP a != b : true
3827.    LCMP a <  b : true
3828.    LCMP a <= b : true
3829.    LCMP a >  b : false
3830.    LCMP a >= b : false
3831.    not IF_LCMPNE
3832.    not IF_LCMPLT
3833.    not IF_LCMPLE
3834.    TESTLONG called with long: 9223372036854775807
3835.                     AND long: 1
3836.    LADD:  long: -9223372036854775808
3837.    LSUB:  long: 9223372036854775806
3838.    LMUL:  long: 9223372036854775807
3839.    LDIV:  long: 9223372036854775807
3840.    LREM:  long: 0
3841.    LNEG:  long: -9223372036854775807
3842.    LSHL:  long: -2
3843.    LSHR:  long: 4611686018427387903
3844.    LUSHR: long: 4611686018427387903
3845.    LAND:  long: 1
3846.    LOR:   long: 9223372036854775807
3847.    LXOR:  long: 9223372036854775806
3848.    L2I:   int: -1
3849.    L2F:   float: 1593835520
3850.    L2D:   double: 4890909195324358656
3851.    LCMP a == b : false
3852.    LCMP a != b : true
3853.    LCMP a <  b : false
3854.    LCMP a <= b : false
3855.    LCMP a >  b : true
3856.    LCMP a >= b : true
3857.    not IF_LCMPNE
3858.    not IF_LCMPGT
3859.    not IF_LCMPGE
3860.    TESTLONG called with long: 0
3861.                     AND long: 9223372036854775807
3862.    LADD:  long: 9223372036854775807
3863.    LSUB:  long: -9223372036854775807
3864.    LMUL:  long: 0
3865.    LDIV:  long: 0
3866.    LREM:  long: 0
3867.    LNEG:  long: 0
3868.    LSHL:  long: 0
3869.    LSHR:  long: 0
3870.    LUSHR: long: 0
3871.    LAND:  long: 0
3872.    LOR:   long: 9223372036854775807
3873.    LXOR:  long: 9223372036854775807
3874.    L2I:   int: 0
3875.    L2F:   float: 0
3876.    L2D:   double: 0
3877.    LCMP a == b : false
3878.    LCMP a != b : true
3879.    LCMP a <  b : true
3880.    LCMP a <= b : true
3881.    LCMP a >  b : false
3882.    LCMP a >= b : false
3883.    not IF_LCMPNE
3884.    not IF_LCMPLT
3885.    not IF_LCMPLE
3886.    TESTLONG called with long: 13107
3887.                     AND long: 143444
3888.    LADD:  long: 156551
3889.    LSUB:  long: -130337
3890.    LMUL:  long: 1880120508
3891.    LDIV:  long: 0
3892.    LREM:  long: 13107
3893.    LNEG:  long: -13107
3894.    LSHL:  long: 13743685632
3895.    LSHR:  long: 0
3896.    LUSHR: long: 0
3897.    LAND:  long: 12304
3898.    LOR:   long: 144247
3899.    LXOR:  long: 131943
3900.    L2I:   int: 13107
3901.    L2F:   float: 1179438080
3902.    L2D:   double: 4668431263781093376
3903.    LCMP a == b : false
3904.    LCMP a != b : true
3905.    LCMP a <  b : true
3906.    LCMP a <= b : true
3907.    LCMP a >  b : false
3908.    LCMP a >= b : false
3909.    not IF_LCMPNE
3910.    not IF_LCMPLT
3911.    not IF_LCMPLE
3912.    TESTLONG called with long: 4444441
3913.                     AND long: 12342
3914.    LADD:  long: 4456783
3915.    LSUB:  long: 4432099
3916.    LMUL:  long: 54853290822
3917.    LDIV:  long: 360
3918.    LREM:  long: 1321
3919.    LNEG:  long: -4444441
3920.    LSHL:  long: 5062045981164437504
3921.    LSHR:  long: 0
3922.    LUSHR: long: 0
3923.    LAND:  long: 4112
3924.    LOR:   long: 4452671
3925.    LXOR:  long: 4448559
3926.    L2I:   int: 4444441
3927.    L2F:   float: 1250402866
3928.    L2D:   double: 4706530193160798208
3929.    LCMP a == b : false
3930.    LCMP a != b : true
3931.    LCMP a <  b : false
3932.    LCMP a <= b : false
3933.    LCMP a >  b : true
3934.    LCMP a >= b : true
3935.    not IF_LCMPNE
3936.    not IF_LCMPGT
3937.    not IF_LCMPGE
3938.    ------------------- test floats
3939.    TESTFLOAT called with float: 1065353216
3940.                      AND float: 1073917985
3941.    FADD:  float: 1078112289
3942.    FSUB:  float: -1081778110
3943.    FMUL:  float: 1073917985
3944.    FDIV:  float: 1056619533
3945.    FREM:  float: 1065353216
3946.    F2I:   int: 1
3947.    F2L:   long: 1
3948.    F2D:   double: 4607182418800017408
3949.    FCMP a!=b
3950.    FCMP a<b
3951.    FCMP a<=b
3952.    TESTFLOAT called with float: -1080167498
3953.                      AND float: 1099662623
3954.    FADD:  float: 1099015652
3955.    FSUB:  float: -1047174054
3956.    FMUL:  float: -1045681427
3957.    FDIV:  float: -1114576645
3958.    FREM:  float: -1080167498
3959.    F2I:   int: -1
3960.    F2L:   long: -1
3961.    F2D:   double: -4615135775887982592
3962.    FCMP a!=b
3963.    FCMP a<b
3964.    FCMP a<=b
3965.    TESTFLOAT called with float: -960610816
3966.                      AND float: 1186756096
3967.    FADD:  float: -1016856576
3968.    FSUB:  float: -952280576
3969.    FMUL:  float: -838070983
3970.    FDIV:  float: -1082051147
3971.    FREM:  float: -1016856576
3972.    F2I:   int: -24351
3973.    F2L:   long: -24351
3974.    F2D:   double: -4550949270986948608
3975.    FCMP a!=b
3976.    FCMP a<b
3977.    FCMP a<=b
3978.    TESTFLOAT called with float: 1036831949
3979.                      AND float: 1151033344
3980.    FADD:  float: 1151034163
3981.    FSUB:  float: -996451123
3982.    FMUL:  float: 1123588506
3983.    FDIV:  float: 950581132
3984.    FREM:  float: 1036831949
3985.    F2I:   int: 0
3986.    F2L:   long: 0
3987.    F2D:   double: 4591870180174331904
3988.    FCMP a!=b
3989.    FCMP a<b
3990.    FCMP a<=b
3991.    TESTFLOAT called with float: 0
3992.                      AND float: -1005921678
3993.    FADD:  float: -1005921678
3994.    FSUB:  float: 1141561970
3995.    FMUL:  float: -2147483648
3996.    FDIV:  float: -2147483648
3997.    FREM:  float: 0
3998.    F2I:   int: 0
3999.    F2L:   long: 0
4000.    F2D:   double: 0
4001.    FCMP a!=b
4002.    FCMP a>b
4003.    FCMP a>=b
4004.    TESTFLOAT called with float: 1117388800
4005.                      AND float: -1005928448
4006.    FADD:  float: -1007747072
4007.    FSUB:  float: 1142816768
4008.    FMUL:  float: -953749760
4009.    FDIV:  float: -1106374265
4010.    FREM:  float: 1117388800
4011.    F2I:   int: 77
4012.    F2L:   long: 77
4013.    F2D:   double: 4635118810238550016
4014.    FCMP a!=b
4015.    FCMP a>b
4016.    FCMP a>=b
4017.    TESTFLOAT called with float: 1325400059
4018.                      AND float: -922251744
4019.    FADD:  float: 1325395721
4020.    FSUB:  float: 1325402230
4021.    FMUL:  float: -662204899
4022.    FDIV:  float: -982402220
4023.    FREM:  float: 1220539712
4024.    F2I:   int: 2147483008
4025.    F2L:   long: 2147483008
4026.    F2D:   double: 4746794004564148224
4027.    FCMP a!=b
4028.    FCMP a>b
4029.    FCMP a>=b
4030.    ------------------- test doubles
4031.    TESTDOUBLE called with double: 4607182418800017408
4032.                       AND double: 4611780594144116736
4033.    DADD:  double: 4614032393957801984
4034.    DSUB:  double: -4616000466621300736
4035.    DMUL:  double: 4611780594144116736
4036.    DDIV:  double: 4602493558224229689
4037.    DREM:  double: 4607182418800017408
4038.    D2I:   int: 1
4039.    D2L:   long: 1
4040.    D2F:   float: 1065353216
4041.    DCMP a!=b
4042.    DCMP a<b
4043.    DCMP a<=b
4044.    TESTDOUBLE called with double: -4615135775887982592
4045.                       AND double: 4625602141426286592
4046.    DADD:  double: 4625254801314152448
4047.    DSUB:  double: -4597422555316355072
4048.    DMUL:  double: -4596621207431527808
4049.    DDIV:  double: -4633609045894396972
4050.    DREM:  double: -4615135775887982592
4051.    D2I:   int: -1
4052.    D2L:   long: -1
4053.    D2F:   float: -1080167498
4054.    DCMP a!=b
4055.    DCMP a<b
4056.    DCMP a<=b
4057.    TESTDOUBLE called with double: -4550949270986948608
4058.                       AND double: 4672360093705043968
4059.    DADD:  double: -4581145983454281728
4060.    DSUB:  double: -4546477007440969728
4061.    DMUL:  double: -4485161199314403328
4062.    DDIV:  double: -4616147052009281450
4063.    DREM:  double: -4581145983454281728
4064.    D2I:   int: -24351
4065.    D2L:   long: -24351
4066.    D2F:   float: -960610816
4067.    DCMP a!=b
4068.    DCMP a<b
4069.    DCMP a<=b
4070.    TESTDOUBLE called with double: 4591870180174331904
4071.                       AND double: 4653181587259654144
4072.    DADD:  double: 4653182027064311808
4073.    DSUB:  double: -4570190889399779328
4074.    DMUL:  double: 4638447251968491520
4075.    DDIV:  double: 4545564625306141371
4076.    DREM:  double: 4591870180174331904
4077.    D2I:   int: 0
4078.    D2L:   long: 0
4079.    D2F:   float: 1036831949
4080.    DCMP a!=b
4081.    DCMP a<b
4082.    DCMP a<=b
4083.    TESTDOUBLE called with double: 0
4084.                       AND double: -4575275354792394752
4085.    DADD:  double: -4575275354792394752
4086.    DSUB:  double: 4648096682062381056
4087.    DMUL:  double: -9223372036854775808
4088.    DDIV:  double: -9223372036854775808
4089.    DREM:  double: 0
4090.    D2I:   int: 0
4091.    D2L:   long: 0
4092.    D2F:   float: 0
4093.    DCMP a!=b
4094.    DCMP a>b
4095.    DCMP a>=b
4096.    TESTDOUBLE called with double: 4635118810238550016
4097.                       AND double: -4575278989408468992
4098.    DADD:  double: -4576255355733934080
4099.    DSUB:  double: 4648770346609016832
4100.    DMUL:  double: -4547265769594945536
4101.    DDIV:  double: -4629205426707555293
4102.    DREM:  double: 4635118810238550016
4103.    D2I:   int: 77
4104.    D2L:   long: 77
4105.    D2F:   float: 1117388800
4106.    DCMP a!=b
4107.    DCMP a>b
4108.    DCMP a>=b
4109.    TESTDOUBLE called with double: 4746794004564148224
4110.                       AND double: -4530355401018834944
4111.    DADD:  double: 4746791675743961088
4112.    DSUB:  double: 4746795170316419072
4113.    DMUL:  double: -4390743813991748608
4114.    DDIV:  double: -4562648441847017049
4115.    DREM:  double: 4690497534437621760
4116.    D2I:   int: 2147483008
4117.    D2L:   long: 2147483008
4118.    D2F:   float: 1325400059
4119.    DCMP a!=b
4120.    DCMP a>b
4121.    DCMP a>=b
4122.    =================== end of test =========================
4123.    